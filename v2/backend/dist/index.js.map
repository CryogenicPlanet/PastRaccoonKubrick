{
  "version": 3,
  "sources": ["../node_modules/backo2/index.js", "../node_modules/eventemitter3/index.js", "../node_modules/subscriptions-transport-ws/src/utils/is-string.ts", "../node_modules/subscriptions-transport-ws/src/utils/is-object.ts", "../node_modules/symbol-observable/lib/ponyfill.js", "../node_modules/symbol-observable/lib/index.js", "../node_modules/subscriptions-transport-ws/src/protocol.ts", "../node_modules/subscriptions-transport-ws/src/defaults.ts", "../node_modules/subscriptions-transport-ws/src/message-types.ts", "../node_modules/subscriptions-transport-ws/src/client.ts", "../node_modules/iterall/index.js", "../node_modules/subscriptions-transport-ws/src/utils/empty-iterable.ts", "../node_modules/subscriptions-transport-ws/src/utils/is-subscriptions.ts", "../node_modules/subscriptions-transport-ws/src/legacy/parse-legacy-protocol.ts", "../node_modules/subscriptions-transport-ws/src/server.ts", "../node_modules/subscriptions-transport-ws/src/index.ts", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/node-fetch/lib/index.js", "../node_modules/apollo-server-env/src/polyfills/fetch.js", "../node_modules/apollo-server-env/src/polyfills/url.js", "../node_modules/apollo-server-env/src/index.ts", "../node_modules/apollo-server-core/src/graphqlOptions.ts", "../node_modules/apollo-server-errors/src/index.ts", "../node_modules/apollo-server-core/src/utils/schemaInstrumentation.ts", "../node_modules/apollo-server-core/src/utils/dispatcher.ts", "../node_modules/yallist/iterator.js", "../node_modules/yallist/yallist.js", "../node_modules/lru-cache/index.js", "../node_modules/apollo-server-caching/src/InMemoryLRUCache.ts", "../node_modules/apollo-server-caching/src/PrefixingKeyValueCache.ts", "../node_modules/apollo-server-caching/src/testsuite.ts", "../node_modules/apollo-server-caching/src/index.ts", "../node_modules/apollo-server-core/src/utils/isNodeLike.ts", "../node_modules/inherits/inherits_browser.js", "../node_modules/inherits/inherits.js", "../node_modules/sha.js/node_modules/safe-buffer/index.js", "../node_modules/sha.js/hash.js", "../node_modules/sha.js/sha.js", "../node_modules/sha.js/sha1.js", "../node_modules/sha.js/sha256.js", "../node_modules/sha.js/sha224.js", "../node_modules/sha.js/sha512.js", "../node_modules/sha.js/sha384.js", "../node_modules/sha.js/index.js", "../node_modules/apollo-server-core/src/utils/createSHA.ts", "../node_modules/apollo-server-core/src/requestPipeline.ts", "../node_modules/apollo-server-types/src/index.ts", "../node_modules/apollo-server-core/src/cachePolicy.ts", "../node_modules/apollo-server-core/src/runHttpQuery.ts", "../node_modules/apollo-server-core/src/nodeHttpToRequest.ts", "../node_modules/fast-json-stable-stringify/index.js", "../node_modules/@graphql-tools/utils/index.js", "../node_modules/@graphql-tools/merge/index.js", "../node_modules/@graphql-tools/schema/index.js", "../node_modules/@graphql-tools/mock/index.js", "../node_modules/loglevel/lib/loglevel.js", "../node_modules/@josephg/resolvable/index.ts", "../node_modules/apollo-server-core/src/utils/schemaHash.ts", "../node_modules/@apollographql/apollo-tools/src/utilities/invariant.ts", "../node_modules/@apollographql/apollo-tools/src/utilities/predicates.ts", "../node_modules/@apollographql/apollo-tools/src/utilities/graphql.ts", "../node_modules/@apollographql/apollo-tools/src/utilities/index.ts", "../node_modules/@apollographql/apollo-tools/lib/schema/resolverMap.js", "../node_modules/@apollographql/apollo-tools/lib/schema/resolveObject.js", "../node_modules/@apollographql/apollo-tools/src/schema/index.ts", "../node_modules/@apollographql/apollo-tools/src/buildServiceDefinition.ts", "../node_modules/@apollographql/apollo-tools/src/index.ts", "../node_modules/apollo-server-core/src/determineApolloConfig.ts", "../node_modules/retry/lib/retry_operation.js", "../node_modules/retry/lib/retry.js", "../node_modules/retry/index.js", "../node_modules/async-retry/lib/index.js", "../node_modules/lodash.sortby/index.js", "../node_modules/apollo-graphql/src/transforms.ts", "../node_modules/apollo-graphql/src/utilities/isNodeLike.ts", "../node_modules/apollo-graphql/src/utilities/createHash.ts", "../node_modules/apollo-graphql/src/operationId.ts", "../node_modules/apollo-graphql/src/utilities/graphql.ts", "../node_modules/apollo-graphql/src/schema/GraphQLSchemaValidationError.ts", "../node_modules/core-js-pure/internals/global.js", "../node_modules/core-js-pure/internals/function-apply.js", "../node_modules/core-js-pure/internals/function-uncurry-this.js", "../node_modules/core-js-pure/internals/is-callable.js", "../node_modules/core-js-pure/internals/fails.js", "../node_modules/core-js-pure/internals/descriptors.js", "../node_modules/core-js-pure/internals/function-call.js", "../node_modules/core-js-pure/internals/object-property-is-enumerable.js", "../node_modules/core-js-pure/internals/create-property-descriptor.js", "../node_modules/core-js-pure/internals/classof-raw.js", "../node_modules/core-js-pure/internals/indexed-object.js", "../node_modules/core-js-pure/internals/require-object-coercible.js", "../node_modules/core-js-pure/internals/to-indexed-object.js", "../node_modules/core-js-pure/internals/is-object.js", "../node_modules/core-js-pure/internals/path.js", "../node_modules/core-js-pure/internals/get-built-in.js", "../node_modules/core-js-pure/internals/object-is-prototype-of.js", "../node_modules/core-js-pure/internals/engine-user-agent.js", "../node_modules/core-js-pure/internals/engine-v8-version.js", "../node_modules/core-js-pure/internals/native-symbol.js", "../node_modules/core-js-pure/internals/use-symbol-as-uid.js", "../node_modules/core-js-pure/internals/is-symbol.js", "../node_modules/core-js-pure/internals/try-to-string.js", "../node_modules/core-js-pure/internals/a-callable.js", "../node_modules/core-js-pure/internals/get-method.js", "../node_modules/core-js-pure/internals/ordinary-to-primitive.js", "../node_modules/core-js-pure/internals/is-pure.js", "../node_modules/core-js-pure/internals/set-global.js", "../node_modules/core-js-pure/internals/shared-store.js", "../node_modules/core-js-pure/internals/shared.js", "../node_modules/core-js-pure/internals/to-object.js", "../node_modules/core-js-pure/internals/has-own-property.js", "../node_modules/core-js-pure/internals/uid.js", "../node_modules/core-js-pure/internals/well-known-symbol.js", "../node_modules/core-js-pure/internals/to-primitive.js", "../node_modules/core-js-pure/internals/to-property-key.js", "../node_modules/core-js-pure/internals/document-create-element.js", "../node_modules/core-js-pure/internals/ie8-dom-define.js", "../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js", "../node_modules/core-js-pure/internals/is-forced.js", "../node_modules/core-js-pure/internals/function-bind-context.js", "../node_modules/core-js-pure/internals/an-object.js", "../node_modules/core-js-pure/internals/object-define-property.js", "../node_modules/core-js-pure/internals/create-non-enumerable-property.js", "../node_modules/core-js-pure/internals/export.js", "../node_modules/core-js-pure/internals/is-array.js", "../node_modules/core-js-pure/internals/to-integer-or-infinity.js", "../node_modules/core-js-pure/internals/to-length.js", "../node_modules/core-js-pure/internals/length-of-array-like.js", "../node_modules/core-js-pure/internals/flatten-into-array.js", "../node_modules/core-js-pure/internals/to-string-tag-support.js", "../node_modules/core-js-pure/internals/classof.js", "../node_modules/core-js-pure/internals/inspect-source.js", "../node_modules/core-js-pure/internals/is-constructor.js", "../node_modules/core-js-pure/internals/array-species-constructor.js", "../node_modules/core-js-pure/internals/array-species-create.js", "../node_modules/core-js-pure/modules/es.array.flat.js", "../node_modules/core-js-pure/internals/add-to-unscopables.js", "../node_modules/core-js-pure/modules/es.array.unscopables.flat.js", "../node_modules/core-js-pure/internals/entry-unbind.js", "../node_modules/core-js-pure/es/array/flat.js", "../node_modules/core-js-pure/stable/array/flat.js", "../node_modules/core-js-pure/features/array/flat.js", "../node_modules/apollo-graphql/src/utilities/mapValues.ts", "../node_modules/apollo-graphql/src/schema/buildSchemaFromSDL.ts", "../node_modules/apollo-graphql/src/schema/transformSchema.ts", "../node_modules/apollo-graphql/lib/schema/resolverMap.js", "../node_modules/apollo-graphql/lib/schema/resolveObject.js", "../node_modules/apollo-graphql/src/schema/index.ts", "../node_modules/apollo-graphql/src/index.ts", "../node_modules/@protobufjs/aspromise/index.js", "../node_modules/@protobufjs/base64/index.js", "../node_modules/@protobufjs/eventemitter/index.js", "../node_modules/@protobufjs/float/index.js", "../node_modules/@protobufjs/inquire/index.js", "../node_modules/@protobufjs/utf8/index.js", "../node_modules/@protobufjs/pool/index.js", "../node_modules/@apollo/protobufjs/src/util/longbits.js", "../node_modules/@apollo/protobufjs/src/util/minimal.js", "../node_modules/@apollo/protobufjs/src/writer.js", "../node_modules/@apollo/protobufjs/src/writer_buffer.js", "../node_modules/@apollo/protobufjs/src/reader.js", "../node_modules/@apollo/protobufjs/src/reader_buffer.js", "../node_modules/@apollo/protobufjs/src/rpc/service.js", "../node_modules/@apollo/protobufjs/src/rpc.js", "../node_modules/@apollo/protobufjs/src/roots.js", "../node_modules/@apollo/protobufjs/src/index-minimal.js", "../node_modules/@apollo/protobufjs/minimal.js", "../node_modules/apollo-reporting-protobuf/generated/protobuf.js", "../node_modules/apollo-reporting-protobuf/generated/index.js", "../node_modules/apollo-server-core/src/plugin/usageReporting/signatureCache.ts", "../node_modules/apollo-server-core/src/plugin/traceTreeBuilder.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/traceDetails.ts", "../node_modules/uuid/dist/rng.js", "../node_modules/uuid/dist/regex.js", "../node_modules/uuid/dist/validate.js", "../node_modules/uuid/dist/stringify.js", "../node_modules/uuid/dist/v1.js", "../node_modules/uuid/dist/parse.js", "../node_modules/uuid/dist/v35.js", "../node_modules/uuid/dist/md5.js", "../node_modules/uuid/dist/v3.js", "../node_modules/uuid/dist/v4.js", "../node_modules/uuid/dist/sha1.js", "../node_modules/uuid/dist/v5.js", "../node_modules/uuid/dist/nil.js", "../node_modules/uuid/dist/version.js", "../node_modules/uuid/dist/index.js", "../node_modules/tslib/tslib.js", "../node_modules/graphql-tag/src/index.ts", "../node_modules/graphql-tag/main.js", "../node_modules/apollo-server-core/src/gql.ts", "../node_modules/apollo-server-core/src/plugin/schemaReporting/schemaReporter.ts", "../node_modules/apollo-server-core/src/plugin/schemaIsFederated.ts", "../node_modules/apollo-server-core/src/plugin/schemaReporting/index.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/durationHistogram.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/iterateOverTrace.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/stats.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/defaultSendOperationsAsTrace.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/plugin.ts", "../node_modules/apollo-server-core/src/plugin/usageReporting/index.ts", "../node_modules/apollo-server-core/src/plugin/inlineTrace/index.ts", "../node_modules/apollo-server-core/src/plugin/cacheControl/index.ts", "../node_modules/apollo-server-core/src/plugin/drainHttpServer/stoppable.ts", "../node_modules/apollo-server-core/src/plugin/drainHttpServer/index.ts", "../node_modules/apollo-server-core/src/plugin/landingPage/default/index.ts", "../node_modules/cssfilter/lib/default.js", "../node_modules/cssfilter/lib/util.js", "../node_modules/cssfilter/lib/parser.js", "../node_modules/cssfilter/lib/css.js", "../node_modules/cssfilter/lib/index.js", "../node_modules/xss/lib/util.js", "../node_modules/xss/lib/default.js", "../node_modules/xss/lib/parser.js", "../node_modules/xss/lib/xss.js", "../node_modules/xss/lib/index.js", "../node_modules/@apollographql/graphql-playground-html/src/get-loading-markup.ts", "../node_modules/@apollographql/graphql-playground-html/src/render-playground-page.ts", "../node_modules/@apollographql/graphql-playground-html/src/index.ts", "../node_modules/apollo-server-core/src/plugin/landingPage/graphqlPlayground/index.ts", "../node_modules/apollo-server-core/src/plugin/index.ts", "../node_modules/apollo-server-core/src/internalPlugin.ts", "../node_modules/apollo-server-core/src/utils/schemaManager.ts", "../node_modules/apollo-server-core/src/ApolloServer.ts", "../node_modules/apollo-server-core/dist/types.js", "../node_modules/apollo-server-core/src/index.ts", "../node_modules/object-assign/index.js", "../node_modules/vary/index.js", "../node_modules/cors/lib/index.js", "../node_modules/depd/lib/compat/callsite-tostring.js", "../node_modules/depd/lib/compat/event-listener-count.js", "../node_modules/depd/lib/compat/index.js", "../node_modules/depd/index.js", "../node_modules/bytes/index.js", "../node_modules/content-type/index.js", "../node_modules/setprototypeof/index.js", "../node_modules/statuses/index.js", "../node_modules/http-errors/node_modules/inherits/inherits_browser.js", "../node_modules/http-errors/node_modules/inherits/inherits.js", "../node_modules/toidentifier/index.js", "../node_modules/http-errors/index.js", "../node_modules/debug/node_modules/ms/index.js", "../node_modules/debug/src/debug.js", "../node_modules/debug/src/browser.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/safer-buffer/safer.js", "../node_modules/iconv-lite/lib/bom-handling.js", "../node_modules/iconv-lite/encodings/internal.js", "../node_modules/iconv-lite/encodings/utf16.js", "../node_modules/iconv-lite/encodings/utf7.js", "../node_modules/iconv-lite/encodings/sbcs-codec.js", "../node_modules/iconv-lite/encodings/sbcs-data.js", "../node_modules/iconv-lite/encodings/sbcs-data-generated.js", "../node_modules/iconv-lite/encodings/dbcs-codec.js", "../node_modules/iconv-lite/encodings/dbcs-data.js", "../node_modules/iconv-lite/encodings/index.js", "../node_modules/iconv-lite/lib/streams.js", "../node_modules/iconv-lite/lib/extend-node.js", "../node_modules/iconv-lite/lib/index.js", "../node_modules/unpipe/index.js", "../node_modules/raw-body/index.js", "../node_modules/ee-first/index.js", "../node_modules/on-finished/index.js", "../node_modules/body-parser/lib/read.js", "../node_modules/media-typer/index.js", "../node_modules/mime-db/index.js", "../node_modules/mime-types/index.js", "../node_modules/type-is/index.js", "../node_modules/body-parser/lib/types/json.js", "../node_modules/body-parser/lib/types/raw.js", "../node_modules/body-parser/lib/types/text.js", "../node_modules/qs/lib/utils.js", "../node_modules/qs/lib/formats.js", "../node_modules/qs/lib/stringify.js", "../node_modules/qs/lib/parse.js", "../node_modules/qs/lib/index.js", "../node_modules/body-parser/lib/types/urlencoded.js", "../node_modules/body-parser/index.js", "../node_modules/negotiator/lib/charset.js", "../node_modules/negotiator/lib/encoding.js", "../node_modules/negotiator/lib/language.js", "../node_modules/negotiator/lib/mediaType.js", "../node_modules/negotiator/index.js", "../node_modules/accepts/index.js", "../node_modules/apollo-server-express/src/ApolloServer.ts", "../node_modules/apollo-server-express/src/index.ts", "../node_modules/type-graphql/dist/errors/ArgumentValidationError.js", "../node_modules/type-graphql/dist/errors/CannotDetermineGraphQLTypeError.js", "../node_modules/type-graphql/dist/errors/ForbiddenError.js", "../node_modules/type-graphql/dist/errors/GeneratingSchemaError.js", "../node_modules/type-graphql/dist/errors/ConflictingDefaultValuesError.js", "../node_modules/type-graphql/dist/errors/ConflictingDefaultWithNullableError.js", "../node_modules/type-graphql/dist/errors/InterfaceResolveTypeError.js", "../node_modules/type-graphql/dist/errors/InvalidDirectiveError.js", "../node_modules/type-graphql/dist/errors/MissingSubscriptionTopicsError.js", "../node_modules/type-graphql/dist/errors/NoExplicitTypeError.js", "../node_modules/type-graphql/dist/errors/ReflectMetadataMissingError.js", "../node_modules/type-graphql/dist/errors/SymbolKeysNotSupportedError.js", "../node_modules/type-graphql/dist/errors/UnauthorizedError.js", "../node_modules/type-graphql/dist/errors/UnionResolveTypeError.js", "../node_modules/type-graphql/node_modules/semver/internal/constants.js", "../node_modules/type-graphql/node_modules/semver/internal/debug.js", "../node_modules/type-graphql/node_modules/semver/internal/re.js", "../node_modules/type-graphql/node_modules/semver/internal/parse-options.js", "../node_modules/type-graphql/node_modules/semver/internal/identifiers.js", "../node_modules/type-graphql/node_modules/semver/classes/semver.js", "../node_modules/type-graphql/node_modules/semver/functions/parse.js", "../node_modules/type-graphql/node_modules/semver/functions/valid.js", "../node_modules/type-graphql/node_modules/semver/functions/clean.js", "../node_modules/type-graphql/node_modules/semver/functions/inc.js", "../node_modules/type-graphql/node_modules/semver/functions/compare.js", "../node_modules/type-graphql/node_modules/semver/functions/eq.js", "../node_modules/type-graphql/node_modules/semver/functions/diff.js", "../node_modules/type-graphql/node_modules/semver/functions/major.js", "../node_modules/type-graphql/node_modules/semver/functions/minor.js", "../node_modules/type-graphql/node_modules/semver/functions/patch.js", "../node_modules/type-graphql/node_modules/semver/functions/prerelease.js", "../node_modules/type-graphql/node_modules/semver/functions/rcompare.js", "../node_modules/type-graphql/node_modules/semver/functions/compare-loose.js", "../node_modules/type-graphql/node_modules/semver/functions/compare-build.js", "../node_modules/type-graphql/node_modules/semver/functions/sort.js", "../node_modules/type-graphql/node_modules/semver/functions/rsort.js", "../node_modules/type-graphql/node_modules/semver/functions/gt.js", "../node_modules/type-graphql/node_modules/semver/functions/lt.js", "../node_modules/type-graphql/node_modules/semver/functions/neq.js", "../node_modules/type-graphql/node_modules/semver/functions/gte.js", "../node_modules/type-graphql/node_modules/semver/functions/lte.js", "../node_modules/type-graphql/node_modules/semver/functions/cmp.js", "../node_modules/type-graphql/node_modules/semver/functions/coerce.js", "../node_modules/type-graphql/node_modules/semver/classes/range.js", "../node_modules/type-graphql/node_modules/semver/classes/comparator.js", "../node_modules/type-graphql/node_modules/semver/functions/satisfies.js", "../node_modules/type-graphql/node_modules/semver/ranges/to-comparators.js", "../node_modules/type-graphql/node_modules/semver/ranges/max-satisfying.js", "../node_modules/type-graphql/node_modules/semver/ranges/min-satisfying.js", "../node_modules/type-graphql/node_modules/semver/ranges/min-version.js", "../node_modules/type-graphql/node_modules/semver/ranges/valid.js", "../node_modules/type-graphql/node_modules/semver/ranges/outside.js", "../node_modules/type-graphql/node_modules/semver/ranges/gtr.js", "../node_modules/type-graphql/node_modules/semver/ranges/ltr.js", "../node_modules/type-graphql/node_modules/semver/ranges/intersects.js", "../node_modules/type-graphql/node_modules/semver/ranges/simplify.js", "../node_modules/type-graphql/node_modules/semver/ranges/subset.js", "../node_modules/type-graphql/node_modules/semver/index.js", "../node_modules/type-graphql/dist/utils/graphql-version.js", "../node_modules/type-graphql/dist/errors/UnmetGraphQLPeerDependencyError.js", "../node_modules/type-graphql/dist/errors/WrongNullableListOptionError.js", "../node_modules/type-graphql/dist/errors/index.js", "../node_modules/type-graphql/dist/helpers/isThrowing.js", "../node_modules/type-graphql/dist/metadata/utils.js", "../node_modules/type-graphql/dist/metadata/metadata-storage.js", "../node_modules/type-graphql/dist/metadata/getMetadataStorage.js", "../node_modules/type-graphql/dist/helpers/returnTypes.js", "../node_modules/type-graphql/dist/helpers/findType.js", "../node_modules/type-graphql/dist/helpers/params.js", "../node_modules/type-graphql/dist/helpers/decorators.js", "../node_modules/type-graphql/dist/decorators/Arg.js", "../node_modules/type-graphql/dist/decorators/Args.js", "../node_modules/type-graphql/dist/decorators/ArgsType.js", "../node_modules/type-graphql/dist/decorators/Authorized.js", "../node_modules/type-graphql/dist/decorators/createParamDecorator.js", "../node_modules/type-graphql/dist/decorators/UseMiddleware.js", "../node_modules/type-graphql/dist/decorators/createMethodDecorator.js", "../node_modules/type-graphql/dist/decorators/Ctx.js", "../node_modules/type-graphql/dist/decorators/Directive.js", "../node_modules/type-graphql/dist/decorators/Extensions.js", "../node_modules/type-graphql/dist/decorators/enums.js", "../node_modules/type-graphql/dist/decorators/Field.js", "../node_modules/type-graphql/dist/decorators/FieldResolver.js", "../node_modules/type-graphql/dist/decorators/Info.js", "../node_modules/type-graphql/dist/decorators/InputType.js", "../node_modules/type-graphql/dist/decorators/InterfaceType.js", "../node_modules/type-graphql/dist/helpers/resolver-metadata.js", "../node_modules/type-graphql/dist/decorators/Mutation.js", "../node_modules/type-graphql/dist/decorators/ObjectType.js", "../node_modules/type-graphql/dist/decorators/PubSub.js", "../node_modules/type-graphql/dist/decorators/Query.js", "../node_modules/type-graphql/dist/decorators/Resolver.js", "../node_modules/type-graphql/dist/decorators/Root.js", "../node_modules/type-graphql/dist/decorators/Subscription.js", "../node_modules/type-graphql/dist/decorators/unions.js", "../node_modules/type-graphql/dist/decorators/index.js", "../node_modules/type-graphql/dist/interfaces/AuthChecker.js", "../node_modules/type-graphql/dist/interfaces/ClassType.js", "../node_modules/type-graphql/dist/interfaces/Complexity.js", "../node_modules/type-graphql/dist/interfaces/Maybe.js", "../node_modules/type-graphql/dist/interfaces/NonEmptyArray.js", "../node_modules/type-graphql/dist/interfaces/Publisher.js", "../node_modules/type-graphql/dist/interfaces/ResolverData.js", "../node_modules/type-graphql/dist/interfaces/ResolverFilterData.js", "../node_modules/type-graphql/dist/interfaces/ResolverInterface.js", "../node_modules/type-graphql/dist/interfaces/resolvers-map.js", "../node_modules/type-graphql/dist/interfaces/ResolverTopicData.js", "../node_modules/type-graphql/dist/interfaces/TypeResolver.js", "../node_modules/type-graphql/dist/interfaces/index.js", "../node_modules/type-graphql/dist/metadata/index.js", "../node_modules/type-graphql/dist/scalars/aliases.js", "../node_modules/type-graphql/dist/scalars/isodate.js", "../node_modules/type-graphql/dist/scalars/timestamp.js", "../node_modules/type-graphql/dist/scalars/index.js", "../node_modules/graphql-subscriptions/src/pubsub-async-iterator.ts", "../node_modules/graphql-subscriptions/src/pubsub-engine.ts", "../node_modules/graphql-subscriptions/src/pubsub.ts", "../node_modules/graphql-subscriptions/src/with-filter.ts", "../node_modules/graphql-subscriptions/src/index.ts", "../node_modules/type-graphql/dist/utils/container.js", "../node_modules/type-graphql/dist/schema/build-context.js", "../node_modules/type-graphql/dist/helpers/types.js", "../node_modules/src/metadata/ValidationMetadata.ts", "../node_modules/src/validation-schema/ValidationSchemaToMetadataTransformer.ts", "../node_modules/src/utils/convert-to-array.util.ts", "../node_modules/src/utils/get-global.util.ts", "../node_modules/src/utils/is-promise.util.ts", "../node_modules/src/utils/index.ts", "../node_modules/src/metadata/MetadataStorage.ts", "../node_modules/src/validation/ValidationError.ts", "../node_modules/src/validation/ValidationTypes.ts", "../node_modules/src/validation/ValidationUtils.ts", "../node_modules/src/validation/ValidationExecutor.ts", "../node_modules/src/validation/Validator.ts", "../node_modules/src/container.ts", "../node_modules/src/decorator/common/Allow.ts", "../node_modules/src/metadata/ConstraintMetadata.ts", "../node_modules/src/register-decorator.ts", "../node_modules/src/decorator/common/ValidateBy.ts", "../node_modules/src/decorator/common/IsDefined.ts", "../node_modules/src/decorator/common/IsOptional.ts", "../node_modules/src/decorator/common/Validate.ts", "../node_modules/src/decorator/common/ValidateIf.ts", "../node_modules/src/decorator/common/ValidateNested.ts", "../node_modules/src/decorator/common/ValidatePromise.ts", "../node_modules/validator/lib/util/assertString.js", "../node_modules/validator/lib/util/merge.js", "../node_modules/validator/lib/isLatLong.js", "../node_modules/src/decorator/common/IsLatLong.ts", "../node_modules/src/decorator/common/IsLatitude.ts", "../node_modules/src/decorator/common/IsLongitude.ts", "../node_modules/src/decorator/common/Equals.ts", "../node_modules/src/decorator/common/NotEquals.ts", "../node_modules/src/decorator/common/IsEmpty.ts", "../node_modules/src/decorator/common/IsNotEmpty.ts", "../node_modules/src/decorator/common/IsIn.ts", "../node_modules/src/decorator/common/IsNotIn.ts", "../node_modules/validator/lib/alpha.js", "../node_modules/validator/lib/isFloat.js", "../node_modules/validator/lib/toFloat.js", "../node_modules/validator/lib/isDivisibleBy.js", "../node_modules/src/decorator/number/IsDivisibleBy.ts", "../node_modules/src/decorator/number/IsPositive.ts", "../node_modules/src/decorator/number/IsNegative.ts", "../node_modules/src/decorator/number/Max.ts", "../node_modules/src/decorator/number/Min.ts", "../node_modules/src/decorator/date/MinDate.ts", "../node_modules/src/decorator/date/MaxDate.ts", "../node_modules/validator/lib/util/toString.js", "../node_modules/validator/lib/contains.js", "../node_modules/src/decorator/string/Contains.ts", "../node_modules/src/decorator/string/NotContains.ts", "../node_modules/validator/lib/isAlpha.js", "../node_modules/src/decorator/string/IsAlpha.ts", "../node_modules/validator/lib/isAlphanumeric.js", "../node_modules/src/decorator/string/IsAlphanumeric.ts", "../node_modules/validator/lib/util/includes.js", "../node_modules/validator/lib/isDecimal.js", "../node_modules/src/decorator/string/IsDecimal.ts", "../node_modules/validator/lib/isAscii.js", "../node_modules/src/decorator/string/IsAscii.ts", "../node_modules/validator/lib/isBase64.js", "../node_modules/src/decorator/string/IsBase64.ts", "../node_modules/validator/lib/isByteLength.js", "../node_modules/src/decorator/string/IsByteLength.ts", "../node_modules/validator/lib/isCreditCard.js", "../node_modules/src/decorator/string/IsCreditCard.ts", "../node_modules/validator/lib/isCurrency.js", "../node_modules/src/decorator/string/IsCurrency.ts", "../node_modules/validator/lib/isFQDN.js", "../node_modules/validator/lib/isIP.js", "../node_modules/validator/lib/isEmail.js", "../node_modules/src/decorator/string/IsEmail.ts", "../node_modules/src/decorator/string/IsFQDN.ts", "../node_modules/validator/lib/isFullWidth.js", "../node_modules/src/decorator/string/IsFullWidth.ts", "../node_modules/validator/lib/isHalfWidth.js", "../node_modules/src/decorator/string/IsHalfWidth.ts", "../node_modules/validator/lib/isVariableWidth.js", "../node_modules/src/decorator/string/IsVariableWidth.ts", "../node_modules/validator/lib/isHexColor.js", "../node_modules/src/decorator/string/IsHexColor.ts", "../node_modules/validator/lib/isHexadecimal.js", "../node_modules/src/decorator/string/IsHexadecimal.ts", "../node_modules/src/decorator/ValidationOptions.ts", "../node_modules/validator/lib/isMACAddress.js", "../node_modules/src/decorator/string/IsMacAddress.ts", "../node_modules/src/decorator/string/IsIP.ts", "../node_modules/validator/lib/isInt.js", "../node_modules/validator/lib/isPort.js", "../node_modules/src/decorator/string/IsPort.ts", "../node_modules/validator/lib/isISBN.js", "../node_modules/src/decorator/string/IsISBN.ts", "../node_modules/validator/lib/isISIN.js", "../node_modules/src/decorator/string/IsISIN.ts", "../node_modules/validator/lib/isISO8601.js", "../node_modules/src/decorator/string/IsISO8601.ts", "../node_modules/validator/lib/isJSON.js", "../node_modules/src/decorator/string/IsJSON.ts", "../node_modules/validator/lib/isJWT.js", "../node_modules/src/decorator/string/IsJWT.ts", "../node_modules/validator/lib/isLowercase.js", "../node_modules/src/decorator/string/IsLowercase.ts", "../node_modules/validator/lib/isMobilePhone.js", "../node_modules/src/decorator/string/IsMobilePhone.ts", "../node_modules/validator/lib/isISO31661Alpha2.js", "../node_modules/src/decorator/string/IsISO31661Alpha2.ts", "../node_modules/validator/lib/isISO31661Alpha3.js", "../node_modules/src/decorator/string/IsISO31661Alpha3.ts", "../node_modules/validator/lib/isMongoId.js", "../node_modules/src/decorator/string/IsMongoId.ts", "../node_modules/validator/lib/isMultibyte.js", "../node_modules/src/decorator/string/IsMultibyte.ts", "../node_modules/validator/lib/isSurrogatePair.js", "../node_modules/src/decorator/string/IsSurrogatePair.ts", "../node_modules/validator/lib/isURL.js", "../node_modules/src/decorator/string/IsUrl.ts", "../node_modules/validator/lib/isUUID.js", "../node_modules/src/decorator/string/IsUUID.ts", "../node_modules/src/decorator/string/IsFirebasePushId.ts", "../node_modules/validator/lib/isUppercase.js", "../node_modules/src/decorator/string/IsUppercase.ts", "../node_modules/validator/lib/isLength.js", "../node_modules/src/decorator/string/Length.ts", "../node_modules/src/decorator/string/MaxLength.ts", "../node_modules/src/decorator/string/MinLength.ts", "../node_modules/validator/lib/matches.js", "../node_modules/src/decorator/string/Matches.ts", "../node_modules/libphonenumber-js/source/constants.js", "../node_modules/libphonenumber-js/source/ParseError.js", "../node_modules/libphonenumber-js/source/tools/semver-compare.js", "../node_modules/libphonenumber-js/source/metadata.js", "../node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js", "../node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js", "../node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js", "../node_modules/libphonenumber-js/source/helpers/parseDigits.js", "../node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js", "../node_modules/libphonenumber-js/source/getCountryCallingCode.js", "../node_modules/libphonenumber-js/source/helpers/mergeArrays.js", "../node_modules/libphonenumber-js/source/helpers/checkNumberLength.js", "../node_modules/libphonenumber-js/source/isPossibleNumber_.js", "../node_modules/libphonenumber-js/source/helpers/RFC3966.js", "../node_modules/libphonenumber-js/source/helpers/matchesEntirely.js", "../node_modules/libphonenumber-js/source/helpers/getNumberType.js", "../node_modules/libphonenumber-js/source/validate_.js", "../node_modules/libphonenumber-js/source/isValidNumberForRegion_.js", "../node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js", "../node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js", "../node_modules/libphonenumber-js/source/helpers/getIddPrefix.js", "../node_modules/libphonenumber-js/source/format_.js", "../node_modules/libphonenumber-js/source/PhoneNumber.js", "../node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js", "../node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js", "../node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js", "../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js", "../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js", "../node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js", "../node_modules/libphonenumber-js/source/parse_.js", "../node_modules/libphonenumber-js/source/parsePhoneNumber_.js", "../node_modules/libphonenumber-js/source/parsePhoneNumber.js", "../node_modules/libphonenumber-js/source/parsePhoneNumberFromString_.js", "../node_modules/libphonenumber-js/source/parsePhoneNumberFromString.js", "../node_modules/libphonenumber-js/source/isValidPhoneNumber.js", "../node_modules/libphonenumber-js/source/isPossiblePhoneNumber.js", "../node_modules/libphonenumber-js/source/validatePhoneNumberLength.js", "../node_modules/libphonenumber-js/source/findNumbers/LRUCache.js", "../node_modules/libphonenumber-js/source/findNumbers/RegExpCache.js", "../node_modules/libphonenumber-js/source/findNumbers/util.js", "../node_modules/libphonenumber-js/source/findNumbers/utf-8.js", "../node_modules/libphonenumber-js/source/findNumbers/Leniency.js", "../node_modules/libphonenumber-js/source/findNumbers/parsePreCandidate.js", "../node_modules/libphonenumber-js/source/findNumbers/isValidPreCandidate.js", "../node_modules/libphonenumber-js/source/findNumbers/isValidCandidate.js", "../node_modules/libphonenumber-js/source/PhoneNumberMatcher.js", "../node_modules/libphonenumber-js/source/findNumbers_.js", "../node_modules/libphonenumber-js/source/findNumbers.js", "../node_modules/libphonenumber-js/source/searchNumbers.js", "../node_modules/libphonenumber-js/source/findPhoneNumbersInText.js", "../node_modules/libphonenumber-js/source/searchPhoneNumbersInText.js", "../node_modules/libphonenumber-js/source/AsYouTypeState.js", "../node_modules/libphonenumber-js/source/AsYouTypeFormatter.util.js", "../node_modules/libphonenumber-js/source/AsYouTypeFormatter.complete.js", "../node_modules/libphonenumber-js/source/AsYouTypeFormatter.PatternMatcher.js", "../node_modules/libphonenumber-js/source/AsYouTypeFormatter.js", "../node_modules/libphonenumber-js/source/AsYouTypeParser.js", "../node_modules/libphonenumber-js/source/AsYouType.js", "../node_modules/libphonenumber-js/source/getCountries.js", "../node_modules/libphonenumber-js/source/getExampleNumber.js", "../node_modules/libphonenumber-js/source/formatIncompletePhoneNumber.js", "../node_modules/libphonenumber-js/core/index.commonjs.js", "../node_modules/libphonenumber-js/min/index.commonjs.js", "../node_modules/libphonenumber-js/source/parse.js", "../node_modules/libphonenumber-js/source/format.js", "../node_modules/libphonenumber-js/source/getNumberType.js", "../node_modules/libphonenumber-js/source/isPossibleNumber.js", "../node_modules/libphonenumber-js/source/validate.js", "../node_modules/libphonenumber-js/source/isValidNumberForRegion.js", "../node_modules/libphonenumber-js/source/findPhoneNumbers_.js", "../node_modules/libphonenumber-js/source/findPhoneNumbers.js", "../node_modules/libphonenumber-js/index.common.js", "../node_modules/src/decorator/string/IsPhoneNumber.ts", "../node_modules/src/decorator/string/IsMilitaryTime.ts", "../node_modules/validator/lib/isHash.js", "../node_modules/src/decorator/string/IsHash.ts", "../node_modules/validator/lib/isISSN.js", "../node_modules/src/decorator/string/IsISSN.ts", "../node_modules/src/decorator/string/IsDateString.ts", "../node_modules/validator/lib/isBoolean.js", "../node_modules/src/decorator/string/IsBooleanString.ts", "../node_modules/validator/lib/isNumeric.js", "../node_modules/src/decorator/string/IsNumberString.ts", "../node_modules/validator/lib/isBase32.js", "../node_modules/src/decorator/string/IsBase32.ts", "../node_modules/validator/lib/isBIC.js", "../node_modules/src/decorator/string/IsBIC.ts", "../node_modules/validator/lib/isBtcAddress.js", "../node_modules/src/decorator/string/IsBtcAddress.ts", "../node_modules/validator/lib/isDataURI.js", "../node_modules/src/decorator/string/IsDataURI.ts", "../node_modules/validator/lib/isEAN.js", "../node_modules/src/decorator/string/IsEAN.ts", "../node_modules/validator/lib/isEthereumAddress.js", "../node_modules/src/decorator/string/IsEthereumAddress.ts", "../node_modules/validator/lib/isHSL.js", "../node_modules/src/decorator/string/IsHSL.ts", "../node_modules/validator/lib/isIBAN.js", "../node_modules/src/decorator/string/IsIBAN.ts", "../node_modules/validator/lib/isIdentityCard.js", "../node_modules/src/decorator/string/IsIdentityCard.ts", "../node_modules/validator/lib/isISRC.js", "../node_modules/src/decorator/string/IsISRC.ts", "../node_modules/validator/lib/isLocale.js", "../node_modules/src/decorator/string/IsLocale.ts", "../node_modules/validator/lib/isMagnetURI.js", "../node_modules/src/decorator/string/IsMagnetURI.ts", "../node_modules/validator/lib/isMimeType.js", "../node_modules/src/decorator/string/IsMimeType.ts", "../node_modules/validator/lib/isOctal.js", "../node_modules/src/decorator/string/IsOctal.ts", "../node_modules/validator/lib/isPassportNumber.js", "../node_modules/src/decorator/string/IsPassportNumber.ts", "../node_modules/validator/lib/isPostalCode.js", "../node_modules/src/decorator/string/IsPostalCode.ts", "../node_modules/validator/lib/isRFC3339.js", "../node_modules/src/decorator/string/IsRFC3339.ts", "../node_modules/validator/lib/isRgbColor.js", "../node_modules/src/decorator/string/IsRgbColor.ts", "../node_modules/validator/lib/util/multilineRegex.js", "../node_modules/validator/lib/isSemVer.js", "../node_modules/src/decorator/string/IsSemVer.ts", "../node_modules/src/decorator/typechecker/IsBoolean.ts", "../node_modules/src/decorator/typechecker/IsDate.ts", "../node_modules/src/decorator/typechecker/IsNumber.ts", "../node_modules/src/decorator/typechecker/IsEnum.ts", "../node_modules/src/decorator/typechecker/IsInt.ts", "../node_modules/src/decorator/typechecker/IsString.ts", "../node_modules/src/decorator/typechecker/IsArray.ts", "../node_modules/src/decorator/typechecker/IsObject.ts", "../node_modules/src/decorator/array/ArrayContains.ts", "../node_modules/src/decorator/array/ArrayNotContains.ts", "../node_modules/src/decorator/array/ArrayNotEmpty.ts", "../node_modules/src/decorator/array/ArrayMinSize.ts", "../node_modules/src/decorator/array/ArrayMaxSize.ts", "../node_modules/src/decorator/array/ArrayUnique.ts", "../node_modules/src/decorator/object/IsNotEmptyObject.ts", "../node_modules/src/decorator/object/IsInstance.ts", "../node_modules/src/decorator/decorators.ts", "../node_modules/class-validator/cjs/validation/ValidatorConstraintInterface.js", "../node_modules/class-validator/cjs/validation/ValidatorOptions.js", "../node_modules/class-validator/cjs/validation/ValidationArguments.js", "../node_modules/class-validator/cjs/validation-schema/ValidationSchema.js", "../node_modules/src/index.ts", "../node_modules/type-graphql/dist/resolvers/validate-arg.js", "../node_modules/type-graphql/dist/helpers/auth-middleware.js", "../node_modules/type-graphql/dist/resolvers/convert-args.js", "../node_modules/type-graphql/dist/utils/isPromiseLike.js", "../node_modules/type-graphql/dist/resolvers/helpers.js", "../node_modules/type-graphql/dist/resolvers/create.js", "../node_modules/type-graphql/dist/schema/utils.js", "../node_modules/type-graphql/dist/schema/definition-node.js", "../node_modules/type-graphql/dist/schema/schema-generator.js", "../node_modules/fs.realpath/old.js", "../node_modules/fs.realpath/index.js", "../node_modules/concat-map/index.js", "../node_modules/balanced-match/index.js", "../node_modules/brace-expansion/index.js", "../node_modules/minimatch/minimatch.js", "../node_modules/path-is-absolute/index.js", "../node_modules/glob/common.js", "../node_modules/glob/sync.js", "../node_modules/wrappy/wrappy.js", "../node_modules/once/once.js", "../node_modules/inflight/inflight.js", "../node_modules/glob/glob.js", "../node_modules/type-graphql/dist/helpers/loadResolversFromGlob.js", "../node_modules/type-graphql/dist/helpers/filesystem.js", "../node_modules/type-graphql/dist/utils/emitSchemaDefinitionFile.js", "../node_modules/type-graphql/dist/utils/buildSchema.js", "../node_modules/type-graphql/dist/utils/createResolversMap.js", "../node_modules/type-graphql/dist/utils/buildTypeDefsAndResolvers.js", "../node_modules/type-graphql/dist/utils/index.js", "../node_modules/type-graphql/dist/index.js", "../node_modules/reflect-metadata/Reflect.js", "../src/index.ts"],
  "sourcesContent": ["\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "export default function isString(value?: any): value is string {\n  return typeof value === 'string';\n}\n", "export default function isObject(value?: any): boolean {\n  return ((value !== null) && (typeof value === 'object'));\n}\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill.js');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;", "const GRAPHQL_WS = 'graphql-ws';\n// NOTE: This protocol is deprecated and will be removed soon.\n/**\n * @deprecated\n */\nconst GRAPHQL_SUBSCRIPTIONS = 'graphql-subscriptions';\n\nexport {\n  GRAPHQL_WS,\n  GRAPHQL_SUBSCRIPTIONS,\n};\n", "const MIN_WS_TIMEOUT = 1000;\nconst WS_TIMEOUT = 30000;\n\nexport {\n  MIN_WS_TIMEOUT,\n  WS_TIMEOUT,\n};\n", "export default class MessageTypes {\n  public static GQL_CONNECTION_INIT = 'connection_init'; // Client -> Server\n  public static GQL_CONNECTION_ACK = 'connection_ack'; // Server -> Client\n  public static GQL_CONNECTION_ERROR = 'connection_error'; // Server -> Client\n\n  // NOTE: The keep alive message type does not follow the standard due to connection optimizations\n  public static GQL_CONNECTION_KEEP_ALIVE = 'ka'; // Server -> Client\n\n  public static GQL_CONNECTION_TERMINATE = 'connection_terminate'; // Client -> Server\n  public static GQL_START = 'start'; // Client -> Server\n  public static GQL_DATA = 'data'; // Server -> Client\n  public static GQL_ERROR = 'error'; // Server -> Client\n  public static GQL_COMPLETE = 'complete'; // Server -> Client\n  public static GQL_STOP = 'stop'; // Client -> Server\n\n  // NOTE: The following message types are deprecated and will be removed soon.\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_START = 'subscription_start';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_DATA = 'subscription_data';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_SUCCESS = 'subscription_success';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_FAIL = 'subscription_fail';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_END = 'subscription_end';\n  /**\n   * @deprecated\n   */\n  public static INIT = 'init';\n  /**\n   * @deprecated\n   */\n  public static INIT_SUCCESS = 'init_success';\n  /**\n   * @deprecated\n   */\n  public static INIT_FAIL = 'init_fail';\n  /**\n   * @deprecated\n   */\n  public static KEEP_ALIVE = 'keepalive';\n\n  constructor() {\n    throw new Error('Static Class');\n  }\n}\n", "declare let window: any;\nconst _global = typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : {});\nconst NativeWebSocket = _global.WebSocket || _global.MozWebSocket;\n\nimport * as Backoff from 'backo2';\nimport { default as EventEmitterType, EventEmitter, ListenerFn } from 'eventemitter3';\nimport isString from './utils/is-string';\nimport isObject from './utils/is-object';\nimport { ExecutionResult } from 'graphql/execution/execute';\nimport { print } from 'graphql/language/printer';\nimport { DocumentNode } from 'graphql/language/ast';\nimport { getOperationAST } from 'graphql/utilities/getOperationAST';\nimport $$observable from 'symbol-observable';\n\nimport { GRAPHQL_WS } from './protocol';\nimport { MIN_WS_TIMEOUT, WS_TIMEOUT } from './defaults';\nimport MessageTypes from './message-types';\n\nexport interface Observer<T> {\n  next?: (value: T) => void;\n  error?: (error: Error) => void;\n  complete?: () => void;\n}\n\nexport interface Observable<T> {\n  subscribe(observer: Observer<T>): {\n    unsubscribe: () => void;\n  };\n}\n\nexport interface OperationOptions {\n  query?: string | DocumentNode;\n  variables?: Object;\n  operationName?: string;\n  [key: string]: any;\n}\n\nexport type FormatedError = Error & {\n  originalError?: any;\n};\n\nexport interface Operation {\n  options: OperationOptions;\n  handler: (error: Error[], result?: any) => void;\n}\n\nexport interface Operations {\n  [id: string]: Operation;\n}\n\nexport interface Middleware {\n  applyMiddleware(options: OperationOptions, next: Function): void;\n}\n\nexport type ConnectionParams = {\n  [paramName: string]: any,\n};\n\nexport type ConnectionParamsOptions = ConnectionParams | Function | Promise<ConnectionParams>;\n\nexport interface ClientOptions {\n  connectionParams?: ConnectionParamsOptions;\n  minTimeout?: number;\n  timeout?: number;\n  reconnect?: boolean;\n  reconnectionAttempts?: number;\n  connectionCallback?: (error: Error[], result?: any) => void;\n  lazy?: boolean;\n  inactivityTimeout?: number;\n  wsOptionArguments?: any[];\n}\n\nexport class SubscriptionClient {\n  public client: any;\n  public operations: Operations;\n  private url: string;\n  private nextOperationId: number;\n  private connectionParams: Function;\n  private minWsTimeout: number;\n  private wsTimeout: number;\n  private unsentMessagesQueue: Array<any>; // queued messages while websocket is opening.\n  private reconnect: boolean;\n  private reconnecting: boolean;\n  private reconnectionAttempts: number;\n  private backoff: any;\n  private connectionCallback: any;\n  private eventEmitter: EventEmitterType;\n  private lazy: boolean;\n  private inactivityTimeout: number;\n  private inactivityTimeoutId: any;\n  private closedByUser: boolean;\n  private wsImpl: any;\n  private wsProtocols: string | string[];\n  private wasKeepAliveReceived: boolean;\n  private tryReconnectTimeoutId: any;\n  private checkConnectionIntervalId: any;\n  private maxConnectTimeoutId: any;\n  private middlewares: Middleware[];\n  private maxConnectTimeGenerator: any;\n  private wsOptionArguments: any[];\n\n  constructor(\n    url: string,\n    options?: ClientOptions,\n    webSocketImpl?: any,\n    webSocketProtocols?: string | string[],\n  ) {\n    const {\n      connectionCallback = undefined,\n      connectionParams = {},\n      minTimeout = MIN_WS_TIMEOUT,\n      timeout = WS_TIMEOUT,\n      reconnect = false,\n      reconnectionAttempts = Infinity,\n      lazy = false,\n      inactivityTimeout = 0,\n      wsOptionArguments = [],\n    } = (options || {});\n\n    this.wsImpl = webSocketImpl || NativeWebSocket;\n    if (!this.wsImpl) {\n      throw new Error('Unable to find native implementation, or alternative implementation for WebSocket!');\n    }\n\n    this.wsProtocols = webSocketProtocols || GRAPHQL_WS;\n    this.connectionCallback = connectionCallback;\n    this.url = url;\n    this.operations = {};\n    this.nextOperationId = 0;\n    this.minWsTimeout = minTimeout;\n    this.wsTimeout = timeout;\n    this.unsentMessagesQueue = [];\n    this.reconnect = reconnect;\n    this.reconnecting = false;\n    this.reconnectionAttempts = reconnectionAttempts;\n    this.lazy = !!lazy;\n    this.inactivityTimeout = inactivityTimeout;\n    this.closedByUser = false;\n    this.backoff = new Backoff({ jitter: 0.5 });\n    this.eventEmitter = new EventEmitter();\n    this.middlewares = [];\n    this.client = null;\n    this.maxConnectTimeGenerator = this.createMaxConnectTimeGenerator();\n    this.connectionParams = this.getConnectionParams(connectionParams);\n    this.wsOptionArguments = wsOptionArguments;\n\n    if (!this.lazy) {\n      this.connect();\n    }\n  }\n\n  public get status() {\n    if (this.client === null) {\n      return this.wsImpl.CLOSED;\n    }\n\n    return this.client.readyState;\n  }\n\n  public close(isForced = true, closedByUser = true) {\n    this.clearInactivityTimeout();\n    if (this.client !== null) {\n      this.closedByUser = closedByUser;\n\n      if (isForced) {\n        this.clearCheckConnectionInterval();\n        this.clearMaxConnectTimeout();\n        this.clearTryReconnectTimeout();\n        this.unsubscribeAll();\n        this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_TERMINATE, null);\n      }\n\n      this.client.close();\n      this.client.onopen = null;\n      this.client.onclose = null;\n      this.client.onerror = null;\n      this.client.onmessage = null;\n      this.client = null;\n      this.eventEmitter.emit('disconnected');\n\n      if (!isForced) {\n        this.tryReconnect();\n      }\n    }\n  }\n\n  public request(request: OperationOptions): Observable<ExecutionResult> {\n    const getObserver = this.getObserver.bind(this);\n    const executeOperation = this.executeOperation.bind(this);\n    const unsubscribe = this.unsubscribe.bind(this);\n\n    let opId: string;\n\n    this.clearInactivityTimeout();\n\n    return {\n      [$$observable]() {\n        return this;\n      },\n      subscribe(\n        observerOrNext: ((Observer<ExecutionResult>) | ((v: ExecutionResult) => void)),\n        onError?: (error: Error) => void,\n        onComplete?: () => void,\n      ) {\n        const observer = getObserver(observerOrNext, onError, onComplete);\n\n        opId = executeOperation(request, (error: Error[], result: any) => {\n          if ( error === null && result === null ) {\n            if ( observer.complete ) {\n              observer.complete();\n            }\n          } else if (error) {\n            if ( observer.error ) {\n              observer.error(error[0]);\n            }\n          } else {\n            if ( observer.next ) {\n              observer.next(result);\n            }\n          }\n        });\n\n        return {\n          unsubscribe: () => {\n            if ( opId ) {\n              unsubscribe(opId);\n              opId = null;\n            }\n          },\n        };\n      },\n    };\n  }\n\n  public on(eventName: string, callback: ListenerFn, context?: any): Function {\n    const handler = this.eventEmitter.on(eventName, callback, context);\n\n    return () => {\n      handler.off(eventName, callback, context);\n    };\n  }\n\n  public onConnected(callback: ListenerFn, context?: any): Function {\n    return this.on('connected', callback, context);\n  }\n\n  public onConnecting(callback: ListenerFn, context?: any): Function {\n    return this.on('connecting', callback, context);\n  }\n\n  public onDisconnected(callback: ListenerFn, context?: any): Function {\n    return this.on('disconnected', callback, context);\n  }\n\n  public onReconnected(callback: ListenerFn, context?: any): Function {\n    return this.on('reconnected', callback, context);\n  }\n\n  public onReconnecting(callback: ListenerFn, context?: any): Function {\n    return this.on('reconnecting', callback, context);\n  }\n\n  public onError(callback: ListenerFn, context?: any): Function {\n    return this.on('error', callback, context);\n  }\n\n  public unsubscribeAll() {\n    Object.keys(this.operations).forEach( subId => {\n      this.unsubscribe(subId);\n    });\n  }\n\n  public applyMiddlewares(options: OperationOptions): Promise<OperationOptions> {\n    return new Promise((resolve, reject) => {\n      const queue = (funcs: Middleware[], scope: any) => {\n        const next = (error?: any) => {\n          if (error) {\n            reject(error);\n          } else {\n            if (funcs.length > 0) {\n              const f = funcs.shift();\n              if (f) {\n                f.applyMiddleware.apply(scope, [options, next]);\n              }\n            } else {\n              resolve(options);\n            }\n          }\n        };\n        next();\n      };\n\n      queue([...this.middlewares], this);\n    });\n  }\n\n  public use(middlewares: Middleware[]): SubscriptionClient {\n    middlewares.map((middleware) => {\n      if (typeof middleware.applyMiddleware === 'function') {\n        this.middlewares.push(middleware);\n      } else {\n        throw new Error('Middleware must implement the applyMiddleware function.');\n      }\n    });\n\n    return this;\n  }\n\n  private getConnectionParams(connectionParams: ConnectionParamsOptions): Function {\n    return (): Promise<ConnectionParams> => new Promise((resolve, reject) => {\n      if (typeof connectionParams === 'function') {\n        try {\n          return resolve(connectionParams.call(null));\n        } catch (error) {\n          return reject(error);\n        }\n      }\n\n      resolve(connectionParams);\n    });\n  }\n\n  private executeOperation(options: OperationOptions, handler: (error: Error[], result?: any) => void): string {\n    if (this.client === null) {\n      this.connect();\n    }\n\n    const opId = this.generateOperationId();\n    this.operations[opId] = { options: options, handler };\n\n    this.applyMiddlewares(options)\n      .then(processedOptions => {\n        this.checkOperationOptions(processedOptions, handler);\n        if (this.operations[opId]) {\n          this.operations[opId] = { options: processedOptions, handler };\n          this.sendMessage(opId, MessageTypes.GQL_START, processedOptions);\n        }\n      })\n      .catch(error => {\n        this.unsubscribe(opId);\n        handler(this.formatErrors(error));\n      });\n\n    return opId;\n  }\n\n  private getObserver<T>(\n    observerOrNext: ((Observer<T>) | ((v: T) => void)),\n    error?: (e: Error) => void,\n    complete?: () => void,\n  ) {\n    if ( typeof observerOrNext === 'function' ) {\n      return {\n        next: (v: T) => observerOrNext(v),\n        error: (e: Error) => error && error(e),\n        complete: () => complete && complete(),\n      };\n    }\n\n    return observerOrNext;\n  }\n\n  private createMaxConnectTimeGenerator() {\n    const minValue = this.minWsTimeout;\n    const maxValue = this.wsTimeout;\n\n    return new Backoff({\n      min: minValue,\n      max: maxValue,\n      factor: 1.2,\n    });\n  }\n\n  private clearCheckConnectionInterval() {\n    if (this.checkConnectionIntervalId) {\n      clearInterval(this.checkConnectionIntervalId);\n      this.checkConnectionIntervalId = null;\n    }\n  }\n\n  private clearMaxConnectTimeout() {\n    if (this.maxConnectTimeoutId) {\n      clearTimeout(this.maxConnectTimeoutId);\n      this.maxConnectTimeoutId = null;\n    }\n    }\n\n  private clearTryReconnectTimeout() {\n    if (this.tryReconnectTimeoutId) {\n      clearTimeout(this.tryReconnectTimeoutId);\n      this.tryReconnectTimeoutId = null;\n    }\n  }\n\n  private clearInactivityTimeout() {\n    if (this.inactivityTimeoutId) {\n      clearTimeout(this.inactivityTimeoutId);\n      this.inactivityTimeoutId = null;\n    }\n  }\n\n  private setInactivityTimeout() {\n    if (this.inactivityTimeout > 0 && Object.keys(this.operations).length === 0) {\n      this.inactivityTimeoutId = setTimeout(() => {\n        if (Object.keys(this.operations).length === 0) {\n          this.close();\n        }\n      }, this.inactivityTimeout);\n    }\n  }\n\n  private checkOperationOptions(options: OperationOptions, handler: (error: Error[], result?: any) => void) {\n    const { query, variables, operationName } = options;\n\n    if (!query) {\n      throw new Error('Must provide a query.');\n    }\n\n    if (!handler) {\n      throw new Error('Must provide an handler.');\n    }\n\n    if (\n      ( !isString(query) && !getOperationAST(query, operationName)) ||\n      ( operationName && !isString(operationName)) ||\n      ( variables && !isObject(variables))\n    ) {\n      throw new Error('Incorrect option types. query must be a string or a document,' +\n        '`operationName` must be a string, and `variables` must be an object.');\n    }\n  }\n\n  private buildMessage(id: string, type: string, payload: any) {\n    const payloadToReturn = payload && payload.query ?\n      {\n        ...payload,\n        query: typeof payload.query === 'string' ? payload.query : print(payload.query),\n      } :\n      payload;\n\n    return {\n      id,\n      type,\n      payload: payloadToReturn,\n    };\n  }\n\n  // ensure we have an array of errors\n  private formatErrors(errors: any): FormatedError[] {\n    if (Array.isArray(errors)) {\n      return errors;\n    }\n\n    // TODO  we should not pass ValidationError to callback in the future.\n    // ValidationError\n    if (errors && errors.errors) {\n      return this.formatErrors(errors.errors);\n    }\n\n    if (errors && errors.message) {\n      return [errors];\n    }\n\n    return [{\n      name: 'FormatedError',\n      message: 'Unknown error',\n      originalError: errors,\n    }];\n  }\n\n  private sendMessage(id: string, type: string, payload: any) {\n    this.sendMessageRaw(this.buildMessage(id, type, payload));\n  }\n\n  // send message, or queue it if connection is not open\n  private sendMessageRaw(message: Object) {\n    switch (this.status) {\n      case this.wsImpl.OPEN:\n        let serializedMessage: string = JSON.stringify(message);\n        try {\n          JSON.parse(serializedMessage);\n        } catch (e) {\n          this.eventEmitter.emit('error', new Error(`Message must be JSON-serializable. Got: ${message}`));\n        }\n\n        this.client.send(serializedMessage);\n        break;\n      case this.wsImpl.CONNECTING:\n        this.unsentMessagesQueue.push(message);\n\n        break;\n      default:\n        if (!this.reconnecting) {\n          this.eventEmitter.emit('error', new Error('A message was not sent because socket is not connected, is closing or ' +\n            'is already closed. Message was: ' + JSON.stringify(message)));\n        }\n    }\n  }\n\n  private generateOperationId(): string {\n    return String(++this.nextOperationId);\n  }\n\n  private tryReconnect() {\n    if (!this.reconnect || this.backoff.attempts >= this.reconnectionAttempts) {\n      return;\n    }\n\n    if (!this.reconnecting) {\n      Object.keys(this.operations).forEach((key) => {\n        this.unsentMessagesQueue.push(\n          this.buildMessage(key, MessageTypes.GQL_START, this.operations[key].options),\n        );\n      });\n      this.reconnecting = true;\n    }\n\n    this.clearTryReconnectTimeout();\n\n    const delay = this.backoff.duration();\n    this.tryReconnectTimeoutId = setTimeout(() => {\n      this.connect();\n    }, delay);\n  }\n\n  private flushUnsentMessagesQueue() {\n    this.unsentMessagesQueue.forEach((message) => {\n      this.sendMessageRaw(message);\n    });\n    this.unsentMessagesQueue = [];\n  }\n\n  private checkConnection() {\n    if (this.wasKeepAliveReceived) {\n      this.wasKeepAliveReceived = false;\n      return;\n    }\n\n    if (!this.reconnecting) {\n      this.close(false, true);\n    }\n  }\n\n  private checkMaxConnectTimeout() {\n    this.clearMaxConnectTimeout();\n\n    // Max timeout trying to connect\n    this.maxConnectTimeoutId = setTimeout(() => {\n      if (this.status !== this.wsImpl.OPEN) {\n        this.reconnecting = true;\n        this.close(false, true);\n      }\n    }, this.maxConnectTimeGenerator.duration());\n  }\n\n  private connect() {\n    this.client = new this.wsImpl(this.url, this.wsProtocols, ...this.wsOptionArguments);\n\n    this.checkMaxConnectTimeout();\n\n    this.client.onopen = async () => {\n      if (this.status === this.wsImpl.OPEN) {\n        this.clearMaxConnectTimeout();\n        this.closedByUser = false;\n        this.eventEmitter.emit(this.reconnecting ? 'reconnecting' : 'connecting');\n\n        try {\n          const connectionParams: ConnectionParams = await this.connectionParams();\n\n          // Send CONNECTION_INIT message, no need to wait for connection to success (reduce roundtrips)\n          this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_INIT, connectionParams);\n          this.flushUnsentMessagesQueue();\n        } catch (error) {\n          this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_ERROR, error);\n          this.flushUnsentMessagesQueue();\n        }\n      }\n    };\n\n    this.client.onclose = () => {\n      if (!this.closedByUser) {\n        this.close(false, false);\n      }\n    };\n\n    this.client.onerror = (err: Error) => {\n      // Capture and ignore errors to prevent unhandled exceptions, wait for\n      // onclose to fire before attempting a reconnect.\n      this.eventEmitter.emit('error', err);\n    };\n\n    this.client.onmessage = ({ data }: {data: any}) => {\n      this.processReceivedData(data);\n    };\n  }\n\n  private processReceivedData(receivedData: any) {\n    let parsedMessage: any;\n    let opId: string;\n\n    try {\n      parsedMessage = JSON.parse(receivedData);\n      opId = parsedMessage.id;\n    } catch (e) {\n      throw new Error(`Message must be JSON-parseable. Got: ${receivedData}`);\n    }\n\n    if (\n      [ MessageTypes.GQL_DATA,\n        MessageTypes.GQL_COMPLETE,\n        MessageTypes.GQL_ERROR,\n      ].indexOf(parsedMessage.type) !== -1 && !this.operations[opId]\n    ) {\n      this.unsubscribe(opId);\n\n      return;\n    }\n\n    switch (parsedMessage.type) {\n      case MessageTypes.GQL_CONNECTION_ERROR:\n        if (this.connectionCallback) {\n          this.connectionCallback(parsedMessage.payload);\n        }\n        break;\n\n      case MessageTypes.GQL_CONNECTION_ACK:\n        this.eventEmitter.emit(this.reconnecting ? 'reconnected' : 'connected', parsedMessage.payload);\n        this.reconnecting = false;\n        this.backoff.reset();\n        this.maxConnectTimeGenerator.reset();\n\n        if (this.connectionCallback) {\n          this.connectionCallback();\n        }\n        break;\n\n      case MessageTypes.GQL_COMPLETE:\n        const handler = this.operations[opId].handler;\n        delete this.operations[opId];\n        handler.call(this, null, null);\n        break;\n\n      case MessageTypes.GQL_ERROR:\n        this.operations[opId].handler(this.formatErrors(parsedMessage.payload), null);\n        delete this.operations[opId];\n        break;\n\n      case MessageTypes.GQL_DATA:\n        const parsedPayload = !parsedMessage.payload.errors ?\n          parsedMessage.payload : {...parsedMessage.payload, errors: this.formatErrors(parsedMessage.payload.errors)};\n        this.operations[opId].handler(null, parsedPayload);\n        break;\n\n      case MessageTypes.GQL_CONNECTION_KEEP_ALIVE:\n        const firstKA = typeof this.wasKeepAliveReceived === 'undefined';\n        this.wasKeepAliveReceived = true;\n\n        if (firstKA) {\n          this.checkConnection();\n        }\n\n        if (this.checkConnectionIntervalId) {\n          clearInterval(this.checkConnectionIntervalId);\n          this.checkConnection();\n        }\n        this.checkConnectionIntervalId = setInterval(this.checkConnection.bind(this), this.wsTimeout);\n        break;\n\n      default:\n        throw new Error('Invalid message type!');\n    }\n  }\n\n  private unsubscribe(opId: string) {\n    if (this.operations[opId]) {\n      delete this.operations[opId];\n      this.setInactivityTimeout();\n      this.sendMessage(opId, MessageTypes.GQL_STOP, undefined);\n    }\n  }\n}\n", "'use strict';\n\nexports.isIterable = isIterable;\nexports.isArrayLike = isArrayLike;\nexports.isCollection = isCollection;\nexports.getIterator = getIterator;\nexports.getIteratorMethod = getIteratorMethod;\nexports.createIterator = createIterator;\nexports.forEach = forEach;\nexports.isAsyncIterable = isAsyncIterable;\nexports.getAsyncIterator = getAsyncIterator;\nexports.getAsyncIteratorMethod = getAsyncIteratorMethod;\nexports.createAsyncIterator = createAsyncIterator;\nexports.forAwaitEach = forAwaitEach;\n\nvar SYMBOL = typeof Symbol === 'function' ? Symbol : void 0;\n\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator;\n\nvar $$iterator = exports.$$iterator = SYMBOL_ITERATOR || '@@iterator';\n\nfunction isIterable(obj) {\n  return !!getIteratorMethod(obj);\n}\n\nfunction isArrayLike(obj) {\n  var length = obj != null && obj.length;\n  return typeof length === 'number' && length >= 0 && length % 1 === 0;\n}\n\nfunction isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj));\n}\n\nfunction getIterator(iterable) {\n  var method = getIteratorMethod(iterable);\n  if (method) {\n    return method.call(iterable);\n  }\n}\n\nfunction getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method = SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR] || iterable['@@iterator'];\n    if (typeof method === 'function') {\n      return method;\n    }\n  }\n}\n\nfunction createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection);\n    if (iterator) {\n      return iterator;\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection);\n    }\n  }\n}\n\nfunction ArrayLikeIterator(obj) {\n  this._o = obj;\n  this._i = 0;\n}\n\nArrayLikeIterator.prototype[$$iterator] = function () {\n  return this;\n};\n\nArrayLikeIterator.prototype.next = function () {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0;\n    return { value: void 0, done: true };\n  }\n  return { value: this._o[this._i++], done: false };\n};\n\nfunction forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg);\n    }\n    var i = 0;\n    var iterator = getIterator(collection);\n    if (iterator) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection);\n\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.');\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection);\n        }\n      }\n    }\n  }\n}\n\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator;\n\nvar $$asyncIterator = exports.$$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator';\n\nfunction isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj);\n}\n\nfunction getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable);\n  if (method) {\n    return method.call(asyncIterable);\n  }\n}\n\nfunction getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method = SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR] || asyncIterable['@@asyncIterator'];\n    if (typeof method === 'function') {\n      return method;\n    }\n  }\n}\n\nfunction createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source);\n    if (asyncIterator) {\n      return asyncIterator;\n    }\n    var iterator = createIterator(source);\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator);\n    }\n  }\n}\n\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator;\n}\n\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function () {\n  return this;\n};\n\nAsyncFromSyncIterator.prototype.next = function (value) {\n  return unwrapAsyncFromSync(this._i, 'next', value);\n};\n\nAsyncFromSyncIterator.prototype.return = function (value) {\n  return this._i.return ? unwrapAsyncFromSync(this._i, 'return', value) : Promise.resolve({ value: value, done: true });\n};\n\nAsyncFromSyncIterator.prototype.throw = function (value) {\n  return this._i.throw ? unwrapAsyncFromSync(this._i, 'throw', value) : Promise.reject(value);\n};\n\nfunction unwrapAsyncFromSync(iterator, fn, value) {\n  var step;\n  return new Promise(function (resolve) {\n    step = iterator[fn](value);\n    resolve(step.value);\n  }).then(function (value) {\n    return { value: value, done: step.done };\n  });\n}\n\nfunction forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source);\n  if (asyncIterator) {\n    var i = 0;\n    return new Promise(function (resolve, reject) {\n      function next() {\n        asyncIterator.next().then(function (step) {\n          if (!step.done) {\n            Promise.resolve(callback.call(thisArg, step.value, i++, source)).then(next).catch(reject);\n          } else {\n            resolve();\n          }\n\n          return null;\n        }).catch(reject);\n\n        return null;\n      }\n      next();\n    });\n  }\n}\n\n", "import { $$asyncIterator } from 'iterall';\n\ntype EmptyIterable = AsyncIterator<any> & { [$$asyncIterator]: any };\n\nexport const createEmptyIterable = (): EmptyIterable => {\n  return {\n    next() {\n      return Promise.resolve({ value: undefined, done: true });\n    },\n    return() {\n      return Promise.resolve({ value: undefined, done: true });\n    },\n    throw(e: Error) {\n      return Promise.reject(e);\n    },\n    [$$asyncIterator]() {\n      return this;\n    },\n  } as any;\n};\n", "import { DocumentNode, getOperationAST } from 'graphql';\n\nexport const isASubscriptionOperation = (document: DocumentNode, operationName: string): boolean => {\n  const operationAST = getOperationAST(document, operationName);\n\n  return !!operationAST && operationAST.operation === 'subscription';\n};\n", "import { ConnectionContext } from '../server';\nimport MessageTypes from '../message-types';\n\nexport const parseLegacyProtocolMessage = (connectionContext: ConnectionContext, message: any) => {\n  let messageToReturn = message;\n\n  switch (message.type) {\n    case MessageTypes.INIT:\n      connectionContext.isLegacy = true;\n      messageToReturn = { ...message, type: MessageTypes.GQL_CONNECTION_INIT };\n      break;\n    case MessageTypes.SUBSCRIPTION_START:\n      messageToReturn = {\n        id: message.id,\n        type: MessageTypes.GQL_START,\n        payload: {\n          query: message.query,\n          operationName: message.operationName,\n          variables: message.variables,\n        },\n      };\n      break;\n    case MessageTypes.SUBSCRIPTION_END:\n      messageToReturn = { ...message, type: MessageTypes.GQL_STOP };\n      break;\n    case MessageTypes.GQL_CONNECTION_ACK:\n      if (connectionContext.isLegacy) {\n        messageToReturn = { ...message, type: MessageTypes.INIT_SUCCESS };\n      }\n      break;\n    case MessageTypes.GQL_CONNECTION_ERROR:\n      if (connectionContext.isLegacy) {\n        messageToReturn = {\n          ...message, type: MessageTypes.INIT_FAIL,\n          payload: message.payload.message ? { error: message.payload.message } : message.payload,\n        };\n      }\n      break;\n    case MessageTypes.GQL_ERROR:\n      if (connectionContext.isLegacy) {\n        messageToReturn = { ...message, type: MessageTypes.SUBSCRIPTION_FAIL };\n      }\n      break;\n    case MessageTypes.GQL_DATA:\n      if (connectionContext.isLegacy) {\n        messageToReturn = { ...message, type: MessageTypes.SUBSCRIPTION_DATA };\n      }\n      break;\n    case MessageTypes.GQL_COMPLETE:\n      if (connectionContext.isLegacy) {\n        messageToReturn = null;\n      }\n      break;\n    case MessageTypes.SUBSCRIPTION_SUCCESS:\n      if (!connectionContext.isLegacy) {\n        messageToReturn = null;\n      }\n      break;\n    default:\n      break;\n  }\n\n  return messageToReturn;\n};\n", "import * as WebSocket from 'ws';\n\nimport MessageTypes from './message-types';\nimport { GRAPHQL_WS, GRAPHQL_SUBSCRIPTIONS } from './protocol';\nimport isObject from './utils/is-object';\nimport {\n  parse,\n  ExecutionResult,\n  GraphQLSchema,\n  DocumentNode,\n  validate,\n  ValidationContext,\n  specifiedRules,\n  GraphQLFieldResolver,\n  ExecutionArgs,\n  SubscriptionArgs,\n} from 'graphql';\nimport { createEmptyIterable } from './utils/empty-iterable';\nimport { createAsyncIterator, forAwaitEach, isAsyncIterable } from 'iterall';\nimport { isASubscriptionOperation } from './utils/is-subscriptions';\nimport { parseLegacyProtocolMessage } from './legacy/parse-legacy-protocol';\nimport { IncomingMessage } from 'http';\n\nexport type ExecutionIterator = AsyncIterator<ExecutionResult>;\n\nexport interface ExecutionParams<TContext = any> {\n  query: string | DocumentNode;\n  variables: { [key: string]: any };\n  operationName: string;\n  context: TContext;\n  formatResponse?: Function;\n  formatError?: Function;\n  callback?: Function;\n  schema?: GraphQLSchema;\n}\n\nexport type ConnectionContext = {\n  initPromise?: Promise<any>,\n  isLegacy: boolean,\n  socket: WebSocket,\n  request: IncomingMessage,\n  operations: {\n    [opId: string]: ExecutionIterator,\n  },\n};\n\nexport interface OperationMessagePayload {\n  [key: string]: any; // this will support for example any options sent in init like the auth token\n  query?: string;\n  variables?: { [key: string]: any };\n  operationName?: string;\n}\n\nexport interface OperationMessage {\n  payload?: OperationMessagePayload;\n  id?: string;\n  type: string;\n}\n\nexport type ExecuteFunction = (args: ExecutionArgs) =>\n  | ExecutionResult\n  | Promise<ExecutionResult>\n  | AsyncIterator<ExecutionResult>;\n\nexport type SubscribeFunction = (args: SubscriptionArgs) =>\n  | AsyncIterator<ExecutionResult>\n  | Promise<AsyncIterator<ExecutionResult> | ExecutionResult>;\n\nexport interface ServerOptions {\n  rootValue?: any;\n  schema?: GraphQLSchema;\n  execute?: ExecuteFunction;\n  subscribe?: SubscribeFunction;\n  validationRules?:\n    Array<(context: ValidationContext) => any> | ReadonlyArray<any>;\n  onOperation?: Function;\n  onOperationComplete?: Function;\n  onConnect?: Function;\n  onDisconnect?: Function;\n  keepAlive?: number;\n}\n\nconst isWebSocketServer = (socket: any) => socket.on;\n\nexport class SubscriptionServer {\n  private onOperation: Function;\n  private onOperationComplete: Function;\n  private onConnect: Function;\n  private onDisconnect: Function;\n\n  private wsServer: WebSocket.Server;\n  private execute: ExecuteFunction;\n  private subscribe: SubscribeFunction;\n  private schema: GraphQLSchema;\n  private rootValue: any;\n  private keepAlive: number;\n  private closeHandler: () => void;\n  private specifiedRules:\n    Array<(context: ValidationContext) => any> |\n    ReadonlyArray<any>;\n\n  public static create(options: ServerOptions, socketOptionsOrServer: WebSocket.ServerOptions | WebSocket.Server) {\n    return new SubscriptionServer(options, socketOptionsOrServer);\n  }\n\n  constructor(options: ServerOptions, socketOptionsOrServer: WebSocket.ServerOptions | WebSocket.Server) {\n    const {\n      onOperation, onOperationComplete, onConnect, onDisconnect, keepAlive,\n    } = options;\n\n    this.specifiedRules = options.validationRules || specifiedRules;\n    this.loadExecutor(options);\n\n    this.onOperation = onOperation;\n    this.onOperationComplete = onOperationComplete;\n    this.onConnect = onConnect;\n    this.onDisconnect = onDisconnect;\n    this.keepAlive = keepAlive;\n\n    if (isWebSocketServer(socketOptionsOrServer)) {\n      this.wsServer = <WebSocket.Server>socketOptionsOrServer;\n    } else {\n      // Init and connect WebSocket server to http\n      this.wsServer = new WebSocket.Server(socketOptionsOrServer || {});\n    }\n\n    const connectionHandler = ((socket: WebSocket, request: IncomingMessage) => {\n      // Add `upgradeReq` to the socket object to support old API, without creating a memory leak\n      // See: https://github.com/websockets/ws/pull/1099\n      (socket as any).upgradeReq = request;\n      // NOTE: the old GRAPHQL_SUBSCRIPTIONS protocol support should be removed in the future\n      if (socket.protocol === undefined ||\n        (socket.protocol.indexOf(GRAPHQL_WS) === -1 && socket.protocol.indexOf(GRAPHQL_SUBSCRIPTIONS) === -1)) {\n        // Close the connection with an error code, ws v2 ensures that the\n        // connection is cleaned up even when the closing handshake fails.\n        // 1002: protocol error\n        socket.close(1002);\n\n        return;\n      }\n\n      const connectionContext: ConnectionContext = Object.create(null);\n      connectionContext.initPromise = Promise.resolve(true);\n      connectionContext.isLegacy = false;\n      connectionContext.socket = socket;\n      connectionContext.request = request;\n      connectionContext.operations = {};\n\n      const connectionClosedHandler = (error: any) => {\n        if (error) {\n          this.sendError(\n            connectionContext,\n            '',\n            { message: error.message ? error.message : error },\n            MessageTypes.GQL_CONNECTION_ERROR,\n          );\n\n          setTimeout(() => {\n            // 1011 is an unexpected condition prevented the request from being fulfilled\n            connectionContext.socket.close(1011);\n          }, 10);\n        }\n        this.onClose(connectionContext);\n\n        if (this.onDisconnect) {\n          this.onDisconnect(socket, connectionContext);\n        }\n      };\n\n      socket.on('error', connectionClosedHandler);\n      socket.on('close', connectionClosedHandler);\n      socket.on('message', this.onMessage(connectionContext));\n    });\n\n    this.wsServer.on('connection', connectionHandler);\n    this.closeHandler = () => {\n      this.wsServer.removeListener('connection', connectionHandler);\n      this.wsServer.close();\n    };\n  }\n\n  public get server(): WebSocket.Server {\n    return this.wsServer;\n  }\n\n  public close(): void {\n    this.closeHandler();\n  }\n\n  private loadExecutor(options: ServerOptions) {\n    const { execute, subscribe, schema, rootValue } = options;\n\n    if (!execute) {\n      throw new Error('Must provide `execute` for websocket server constructor.');\n    }\n\n    this.schema = schema;\n    this.rootValue = rootValue;\n    this.execute = execute;\n    this.subscribe = subscribe;\n  }\n\n  private unsubscribe(connectionContext: ConnectionContext, opId: string) {\n    if (connectionContext.operations && connectionContext.operations[opId]) {\n      if (connectionContext.operations[opId].return) {\n        connectionContext.operations[opId].return();\n      }\n\n      delete connectionContext.operations[opId];\n\n      if (this.onOperationComplete) {\n        this.onOperationComplete(connectionContext.socket, opId);\n      }\n    }\n  }\n\n  private onClose(connectionContext: ConnectionContext) {\n    Object.keys(connectionContext.operations).forEach((opId) => {\n      this.unsubscribe(connectionContext, opId);\n    });\n  }\n\n  private onMessage(connectionContext: ConnectionContext) {\n    return (message: any) => {\n      let parsedMessage: OperationMessage;\n      try {\n        parsedMessage = parseLegacyProtocolMessage(connectionContext, JSON.parse(message));\n      } catch (e) {\n        this.sendError(connectionContext, null, { message: e.message }, MessageTypes.GQL_CONNECTION_ERROR);\n        return;\n      }\n\n      const opId = parsedMessage.id;\n      switch (parsedMessage.type) {\n        case MessageTypes.GQL_CONNECTION_INIT:\n          if (this.onConnect) {\n            connectionContext.initPromise = new Promise((resolve, reject) => {\n              try {\n                // TODO - this should become a function call with just 2 arguments in the future\n                // when we release the breaking change api: parsedMessage.payload and connectionContext\n                resolve(this.onConnect(parsedMessage.payload, connectionContext.socket, connectionContext));\n              } catch (e) {\n                reject(e);\n              }\n            });\n          }\n\n          connectionContext.initPromise.then((result) => {\n            if (result === false) {\n              throw new Error('Prohibited connection!');\n            }\n\n            this.sendMessage(\n              connectionContext,\n              undefined,\n              MessageTypes.GQL_CONNECTION_ACK,\n              undefined,\n            );\n\n            if (this.keepAlive) {\n              this.sendKeepAlive(connectionContext);\n              // Regular keep alive messages if keepAlive is set\n              const keepAliveTimer = setInterval(() => {\n                if (connectionContext.socket.readyState === WebSocket.OPEN) {\n                  this.sendKeepAlive(connectionContext);\n                } else {\n                  clearInterval(keepAliveTimer);\n                }\n              }, this.keepAlive);\n            }\n          }).catch((error: Error) => {\n            this.sendError(\n              connectionContext,\n              opId,\n              { message: error.message },\n              MessageTypes.GQL_CONNECTION_ERROR,\n            );\n\n            // Close the connection with an error code, ws v2 ensures that the\n            // connection is cleaned up even when the closing handshake fails.\n            // 1011: an unexpected condition prevented the operation from being fulfilled\n            // We are using setTimeout because we want the message to be flushed before\n            // disconnecting the client\n            setTimeout(() => {\n              connectionContext.socket.close(1011);\n            }, 10);\n          });\n          break;\n\n        case MessageTypes.GQL_CONNECTION_TERMINATE:\n          connectionContext.socket.close();\n          break;\n\n        case MessageTypes.GQL_START:\n          connectionContext.initPromise.then((initResult) => {\n            // if we already have a subscription with this id, unsubscribe from it first\n            if (connectionContext.operations && connectionContext.operations[opId]) {\n              this.unsubscribe(connectionContext, opId);\n            }\n\n            const baseParams: ExecutionParams = {\n              query: parsedMessage.payload.query,\n              variables: parsedMessage.payload.variables,\n              operationName: parsedMessage.payload.operationName,\n              context: isObject(initResult) ? Object.assign(Object.create(Object.getPrototypeOf(initResult)), initResult) : {},\n              formatResponse: <any>undefined,\n              formatError: <any>undefined,\n              callback: <any>undefined,\n              schema: this.schema,\n            };\n            let promisedParams = Promise.resolve(baseParams);\n\n            // set an initial mock subscription to only registering opId\n            connectionContext.operations[opId] = createEmptyIterable();\n\n            if (this.onOperation) {\n              let messageForCallback: any = parsedMessage;\n              promisedParams = Promise.resolve(this.onOperation(messageForCallback, baseParams, connectionContext.socket));\n            }\n\n            return promisedParams.then((params) => {\n              if (typeof params !== 'object') {\n                const error = `Invalid params returned from onOperation! return values must be an object!`;\n                this.sendError(connectionContext, opId, { message: error });\n\n                throw new Error(error);\n              }\n\n              if (!params.schema) {\n                const error = 'Missing schema information. The GraphQL schema should be provided either statically in' +\n                  ' the `SubscriptionServer` constructor or as a property on the object returned from onOperation!';\n                this.sendError(connectionContext, opId, { message: error });\n\n                throw new Error(error);\n              }\n\n              const document = typeof baseParams.query !== 'string' ? baseParams.query : parse(baseParams.query);\n              let executionPromise: Promise<AsyncIterator<ExecutionResult> | ExecutionResult>;\n              const validationErrors = validate(params.schema, document, this.specifiedRules);\n\n              if ( validationErrors.length > 0 ) {\n                executionPromise = Promise.resolve({ errors: validationErrors });\n              } else {\n                let executor: SubscribeFunction | ExecuteFunction = this.execute;\n                if (this.subscribe && isASubscriptionOperation(document, params.operationName)) {\n                  executor = this.subscribe;\n                }\n                executionPromise = Promise.resolve(\n                  executor({\n                    schema: params.schema,\n                    document,\n                    rootValue: this.rootValue,\n                    contextValue: params.context,\n                    variableValues: params.variables,\n                    operationName: params.operationName,\n                  }),\n                );\n              }\n\n              return executionPromise.then((executionResult) => ({\n                executionIterable: isAsyncIterable(executionResult) ?\n                  executionResult : createAsyncIterator([ executionResult ]),\n                params,\n              }));\n            }).then(({ executionIterable, params }) => {\n              forAwaitEach(\n                executionIterable as any,\n                (value: ExecutionResult) => {\n                  let result = value;\n\n                  if (params.formatResponse) {\n                    try {\n                      result = params.formatResponse(value, params);\n                    } catch (err) {\n                      console.error('Error in formatResponse function:', err);\n                    }\n                  }\n\n                  this.sendMessage(connectionContext, opId, MessageTypes.GQL_DATA, result);\n                })\n                .then(() => {\n                  this.sendMessage(connectionContext, opId, MessageTypes.GQL_COMPLETE, null);\n                })\n                .catch((e: Error) => {\n                  let error = e;\n\n                  if (params.formatError) {\n                    try {\n                      error = params.formatError(e, params);\n                    } catch (err) {\n                      console.error('Error in formatError function: ', err);\n                    }\n                  }\n\n                  // plain Error object cannot be JSON stringified.\n                  if (Object.keys(error).length === 0) {\n                    error = { name: error.name, message: error.message };\n                  }\n\n                  this.sendError(connectionContext, opId, error);\n                });\n\n              return executionIterable;\n            }).then((subscription: ExecutionIterator) => {\n              connectionContext.operations[opId] = subscription;\n            }).then(() => {\n              // NOTE: This is a temporary code to support the legacy protocol.\n              // As soon as the old protocol has been removed, this coode should also be removed.\n              this.sendMessage(connectionContext, opId, MessageTypes.SUBSCRIPTION_SUCCESS, undefined);\n            }).catch((e: any) => {\n              if (e.errors) {\n                this.sendMessage(connectionContext, opId, MessageTypes.GQL_DATA, { errors: e.errors });\n              } else {\n                this.sendError(connectionContext, opId, { message: e.message });\n              }\n\n              // Remove the operation on the server side as it will be removed also in the client\n              this.unsubscribe(connectionContext, opId);\n              return;\n            });\n          }).catch((error) => {\n            // Handle initPromise rejected\n            this.sendError(connectionContext, opId, { message: error.message });\n            this.unsubscribe(connectionContext, opId);\n          });\n          break;\n\n        case MessageTypes.GQL_STOP:\n          // Find subscription id. Call unsubscribe.\n          this.unsubscribe(connectionContext, opId);\n          break;\n\n        default:\n          this.sendError(connectionContext, opId, { message: 'Invalid message type!' });\n      }\n    };\n  }\n\n  private sendKeepAlive(connectionContext: ConnectionContext): void {\n    if (connectionContext.isLegacy) {\n      this.sendMessage(connectionContext, undefined, MessageTypes.KEEP_ALIVE, undefined);\n    } else {\n      this.sendMessage(connectionContext, undefined, MessageTypes.GQL_CONNECTION_KEEP_ALIVE, undefined);\n    }\n  }\n\n  private sendMessage(connectionContext: ConnectionContext, opId: string, type: string, payload: any): void {\n    const parsedMessage = parseLegacyProtocolMessage(connectionContext, {\n      type,\n      id: opId,\n      payload,\n    });\n\n    if (parsedMessage && connectionContext.socket.readyState === WebSocket.OPEN) {\n      connectionContext.socket.send(JSON.stringify(parsedMessage));\n    }\n  }\n\n  private sendError(connectionContext: ConnectionContext, opId: string, errorPayload: any,\n                    overrideDefaultErrorType?: string): void {\n    const sanitizedOverrideDefaultErrorType = overrideDefaultErrorType || MessageTypes.GQL_ERROR;\n    if ([\n        MessageTypes.GQL_CONNECTION_ERROR,\n        MessageTypes.GQL_ERROR,\n      ].indexOf(sanitizedOverrideDefaultErrorType) === -1) {\n      throw new Error('overrideDefaultErrorType should be one of the allowed error messages' +\n        ' GQL_CONNECTION_ERROR or GQL_ERROR');\n    }\n\n    this.sendMessage(\n      connectionContext,\n      opId,\n      sanitizedOverrideDefaultErrorType,\n      errorPayload,\n    );\n  }\n}\n\n", "export * from './client';\nexport * from './server';\nexport { default as MessageTypes } from './message-types';\nexport * from './protocol';\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", null, null, null, null, null, null, null, "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", null, null, null, null, null, "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n", "/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n", "/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n", "/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n", "/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n", "var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n", "var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n", "var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n", null, null, null, null, null, null, "'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst graphql = require('graphql');\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        graphql.parse(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[\u2018\u201C!%&^<=>`]/;\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    var _a, _b;\n    let name;\n    if ('alias' in a) {\n        name = (_a = a.alias) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    if (name == null && 'name' in a) {\n        name = (_b = a.name) === null || _b === void 0 ? void 0 : _b.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n\n// Taken from graphql-js\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/inspect.ts\n/* eslint-disable @typescript-eslint/ban-types */\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\nfunction inspect(value) {\n    return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n    switch (typeof value) {\n        case 'string':\n            return JSON.stringify(value);\n        case 'function':\n            return value.name ? `[function ${value.name}]` : '[function]';\n        case 'object':\n            return formatObjectValue(value, seenValues);\n        default:\n            return String(value);\n    }\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n    if (value === null) {\n        return 'null';\n    }\n    if (previouslySeenValues.includes(value)) {\n        return '[Circular]';\n    }\n    const seenValues = [...previouslySeenValues, value];\n    if (isJSONable(value)) {\n        const jsonValue = value.toJSON();\n        // check for infinite recursion\n        if (jsonValue !== value) {\n            return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n        }\n    }\n    else if (Array.isArray(value)) {\n        return formatArray(value, seenValues);\n    }\n    return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n    return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n    const entries = Object.entries(object);\n    if (entries.length === 0) {\n        return '{}';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[' + getObjectTag(object) + ']';\n    }\n    const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n    return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n    if (array.length === 0) {\n        return '[]';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[Array]';\n    }\n    const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n    const remaining = array.length - len;\n    const items = [];\n    for (let i = 0; i < len; ++i) {\n        items.push(formatValue(array[i], seenValues));\n    }\n    if (remaining === 1) {\n        items.push('... 1 more item');\n    }\n    else if (remaining > 1) {\n        items.push(`... ${remaining} more items`);\n    }\n    return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n    const tag = Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object /, '')\n        .replace(/]$/, '');\n    if (tag === 'Object' && typeof object.constructor === 'function') {\n        const name = object.constructor.name;\n        if (typeof name === 'string' && name !== '') {\n            return name;\n        }\n    }\n    return tag;\n}\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    var _a;\n    const variableMap = Object.entries(variableValues).reduce((prev, [key, value]) => ({\n        ...prev,\n        [key]: value,\n    }), {});\n    const coercedValues = {};\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const argumentNodes = (_a = node.arguments) !== null && _a !== void 0 ? _a : [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if (graphql.isNonNullType(argType)) {\n                throw new graphql.GraphQLError(`Argument \"${name}\" of required type \"${inspect(argType)}\" ` + 'was not provided.', node);\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql.Kind.NULL;\n        if (valueNode.kind === graphql.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !variableMap[variableName]) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if (graphql.isNonNullType(argType)) {\n                    throw new graphql.GraphQLError(`Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, valueNode);\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && graphql.isNonNullType(argType)) {\n            throw new graphql.GraphQLError(`Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` + 'must not be null.', valueNode);\n        }\n        const coercedValue = graphql.valueFromAST(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw new graphql.GraphQLError(`Argument \"${name}\" has invalid value ${graphql.print(valueNode)}.`, valueNode);\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    return pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n}\nfunction _getDirectiveInExtensions(directivesInExtensions, directiveName) {\n    const directiveInExtensions = directivesInExtensions.filter(directiveAnnotation => directiveAnnotation.name === directiveName);\n    if (!directiveInExtensions.length) {\n        return undefined;\n    }\n    return directiveInExtensions.map(directive => { var _a; return (_a = directive.args) !== null && _a !== void 0 ? _a : {}; });\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n    if (directivesInExtensions === undefined) {\n        return undefined;\n    }\n    if (Array.isArray(directivesInExtensions)) {\n        return _getDirectiveInExtensions(directivesInExtensions, directiveName);\n    }\n    // Support condensed format by converting to longer format\n    // The condensed format does not preserve ordering of directives when  repeatable directives are used.\n    // See https://github.com/ardatan/graphql-tools/issues/2534\n    const reformattedDirectivesInExtensions = [];\n    for (const [name, argsOrArrayOfArgs] of Object.entries(directivesInExtensions)) {\n        if (Array.isArray(argsOrArrayOfArgs)) {\n            for (const args of argsOrArrayOfArgs) {\n                reformattedDirectivesInExtensions.push({ name, args });\n            }\n        }\n        else {\n            reformattedDirectivesInExtensions.push({ name, args: argsOrArrayOfArgs });\n        }\n    }\n    return _getDirectiveInExtensions(reformattedDirectivesInExtensions, directiveName);\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = getDirectivesInExtensions(node, pathToDirectivesInExtensions);\n    if (directivesInExtensions != null && directivesInExtensions.length > 0) {\n        return directivesInExtensions;\n    }\n    const schemaDirectives = schema && schema.getDirectives ? schema.getDirectives() : [];\n    const schemaDirectiveMap = schemaDirectives.reduce((schemaDirectiveMap, schemaDirective) => {\n        schemaDirectiveMap[schemaDirective.name] = schemaDirective;\n        return schemaDirectiveMap;\n    }, {});\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                const schemaDirective = schemaDirectiveMap[directiveNode.name.value];\n                if (schemaDirective) {\n                    result.push({ name: directiveNode.name.value, args: getArgumentValues(schemaDirective, directiveNode) });\n                }\n            }\n        }\n    }\n    return result;\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveInExtensions = getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions);\n    if (directiveInExtensions != null) {\n        return directiveInExtensions;\n    }\n    const schemaDirective = schema && schema.getDirective ? schema.getDirective(directiveName) : undefined;\n    if (schemaDirective == null) {\n        return undefined;\n    }\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                if (directiveNode.name.value === directiveName) {\n                    result.push(getArgumentValues(schemaDirective, directiveNode));\n                }\n            }\n        }\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    return result;\n}\n\nfunction parseDirectiveValue(value) {\n    switch (value.kind) {\n        case graphql.Kind.INT:\n            return parseInt(value.value);\n        case graphql.Kind.FLOAT:\n            return parseFloat(value.value);\n        case graphql.Kind.BOOLEAN:\n            return Boolean(value.value);\n        case graphql.Kind.STRING:\n        case graphql.Kind.ENUM:\n            return value.value;\n        case graphql.Kind.LIST:\n            return value.values.map(v => parseDirectiveValue(v));\n        case graphql.Kind.OBJECT:\n            return value.fields.reduce((prev, v) => ({ ...prev, [v.name.value]: parseDirectiveValue(v.value) }), {});\n        case graphql.Kind.NULL:\n            return null;\n        default:\n            return null;\n    }\n}\nfunction getFieldsWithDirectives(documentNode, options = {}) {\n    const result = {};\n    let selected = ['ObjectTypeDefinition', 'ObjectTypeExtension'];\n    if (options.includeInputTypes) {\n        selected = [...selected, 'InputObjectTypeDefinition', 'InputObjectTypeExtension'];\n    }\n    const allTypes = documentNode.definitions.filter(obj => selected.includes(obj.kind));\n    for (const type of allTypes) {\n        const typeName = type.name.value;\n        if (type.fields == null) {\n            continue;\n        }\n        for (const field of type.fields) {\n            if (field.directives && field.directives.length > 0) {\n                const fieldName = field.name.value;\n                const key = `${typeName}.${fieldName}`;\n                const directives = field.directives.map(d => ({\n                    name: d.name.value,\n                    args: (d.arguments || []).reduce((prev, arg) => ({ ...prev, [arg.name.value]: parseDirectiveValue(arg.value) }), {}),\n                }));\n                result[key] = directives;\n            }\n        }\n    }\n    return result;\n}\n\nfunction getImplementingTypes(interfaceName, schema) {\n    const allTypesMap = schema.getTypeMap();\n    const result = [];\n    for (const graphqlTypeName in allTypesMap) {\n        const graphqlType = allTypesMap[graphqlTypeName];\n        if (graphql.isObjectType(graphqlType)) {\n            const allInterfaces = graphqlType.getInterfaces();\n            if (allInterfaces.find(int => int.name === interfaceName)) {\n                result.push(graphqlType.name);\n            }\n        }\n    }\n    return result;\n}\n\nfunction astFromType(type) {\n    if (graphql.isNonNullType(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${inspect(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if (graphql.isListType(type)) {\n        return {\n            kind: graphql.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql.Kind.OBJECT_FIELD,\n                    name: { kind: graphql.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql.Kind.BOOLEAN, value };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql.Kind.INT, value: stringNum }\n            : { kind: graphql.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nconst memoize2of4cache = new WeakMap();\nfunction memoize2of4(fn) {\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n\nfunction getDefinedRootType(schema, operation) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw new Error(`Root type for operation \"${operation}\" not defined by the given schema.`);\n    }\n    return rootType;\n}\nconst getRootTypeNames = memoize1(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = memoize1(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = memoize1(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if (graphql.isSpecifiedDirective(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = graphql.isSpecifiedScalarType(type);\n        const isIntrospection = graphql.isIntrospectionType(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if (graphql.isObjectType(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (graphql.isInterfaceType(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (graphql.isUnionType(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (graphql.isInputObjectType(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (graphql.isEnumType(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (graphql.isScalarType(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return graphql.print(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = getRootTypeMap(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = astFromType(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql.Kind.SCHEMA_DEFINITION : graphql.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    // This code is so weird because it needs to support GraphQL.js 14\n    // In GraphQL.js 14 there is no `description` value on schemaNode\n    schemaNode.description =\n        ((_b = (_a = schema.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : schema.description != null)\n            ? {\n                kind: graphql.Kind.STRING,\n                value: schema.description,\n                block: true,\n            }\n            : undefined;\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c, _d;\n    return {\n        kind: graphql.Kind.DIRECTIVE_DEFINITION,\n        description: (_b = (_a = directive.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (directive.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: directive.description,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: (_c = directive.args) === null || _c === void 0 ? void 0 : _c.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: ((_d = directive.locations) === null || _d === void 0 ? void 0 : _d.map(location => ({\n            kind: graphql.Kind.NAME,\n            value: location,\n        }))) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = getDirectivesInExtensions(entity, pathToDirectivesInExtensions);\n    let nodes = [];\n    if (entity.astNode != null) {\n        nodes.push(entity.astNode);\n    }\n    if ('extensionASTNodes' in entity && entity.extensionASTNodes != null) {\n        nodes = nodes.concat(entity.extensionASTNodes);\n    }\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = [];\n        for (const node of nodes) {\n            if (node.directives) {\n                directives.push(...node.directives);\n            }\n        }\n    }\n    return directives;\n}\nfunction getDeprecatableDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    let directiveNodesBesidesDeprecated = [];\n    let deprecatedDirectiveNode = null;\n    const directivesInExtensions = getDirectivesInExtensions(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = (_a = entity.astNode) === null || _a === void 0 ? void 0 : _a.directives;\n    }\n    if (directives != null) {\n        directiveNodesBesidesDeprecated = directives.filter(directive => directive.name.value !== 'deprecated');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = (_b = directives.filter(directive => directive.name.value === 'deprecated')) === null || _b === void 0 ? void 0 : _b[0];\n        }\n    }\n    if (entity.deprecationReason != null &&\n        deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    return deprecatedDirectiveNode == null\n        ? directiveNodesBesidesDeprecated\n        : [deprecatedDirectiveNode].concat(directiveNodesBesidesDeprecated);\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = arg.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (arg.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: arg.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: arg.name,\n        },\n        type: astFromType(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined ? (_c = graphql.astFromValue(arg.defaultValue, arg.type)) !== null && _c !== void 0 ? _c : undefined : undefined,\n        directives: getDeprecatableDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => astFromType(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const node = {\n        kind: graphql.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => astFromType(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.UNION_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => astFromType(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.ENUM_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    const directivesInExtensions = getDirectivesInExtensions(type, pathToDirectivesInExtensions);\n    const directives = directivesInExtensions\n        ? makeDirectiveNodes(schema, directivesInExtensions)\n        : ((_a = type.astNode) === null || _a === void 0 ? void 0 : _a.directives) || [];\n    const specifiedByValue = (type['specifiedByUrl'] || type['specifiedByURL']);\n    if (specifiedByValue && !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql.Kind.SCALAR_TYPE_DEFINITION,\n        description: (_c = (_b = type.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : (type.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.FIELD_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: astFromType(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: field.name,\n        },\n        type: astFromType(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (_c = graphql.astFromValue(field.defaultValue, field.type)) !== null && _c !== void 0 ? _c : undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql.Kind.ENUM_VALUE_DEFINITION,\n        description: (_b = (_a = value.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (value.description\n            ? {\n                kind: graphql.Kind.STRING,\n                value: value.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql.Kind.NAME,\n            value: value.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    if (directive != null) {\n        for (const arg of directive.args) {\n            const argName = arg.name;\n            const argValue = args[argName];\n            if (argValue !== undefined) {\n                const value = graphql.astFromValue(argValue, arg.type);\n                if (value) {\n                    directiveArguments.push({\n                        kind: graphql.Kind.ARGUMENT,\n                        name: {\n                            kind: graphql.Kind.NAME,\n                            value: argName,\n                        },\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    else {\n        for (const argName in args) {\n            const argValue = args[argName];\n            const value = astFromValueUntyped(argValue);\n            if (value) {\n                directiveArguments.push({\n                    kind: graphql.Kind.ARGUMENT,\n                    name: {\n                        kind: graphql.Kind.NAME,\n                        value: argName,\n                    },\n                    value,\n                });\n            }\n        }\n    }\n    return {\n        kind: graphql.Kind.DIRECTIVE,\n        name: {\n            kind: graphql.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const directiveName in directiveValues) {\n        const arrayOrSingleValue = directiveValues[directiveName];\n        const directive = schema === null || schema === void 0 ? void 0 : schema.getDirective(directiveName);\n        if (Array.isArray(arrayOrSingleValue)) {\n            for (const value of arrayOrSingleValue) {\n                directiveNodes.push(makeDirectiveNode(directiveName, value, directive));\n            }\n        }\n        else {\n            directiveNodes.push(makeDirectiveNode(directiveName, arrayOrSingleValue, directive));\n        }\n    }\n    return directiveNodes;\n}\n\nexports.AggregateError = globalThis.AggregateError;\nif (typeof exports.AggregateError === 'undefined') {\n    class AggregateErrorClass extends Error {\n        constructor(errors, message = '') {\n            super(message);\n            this.errors = errors;\n            this.name = 'AggregateError';\n            Error.captureStackTrace(this, AggregateErrorClass);\n        }\n    }\n    exports.AggregateError = function (errors, message) {\n        return new AggregateErrorClass(errors, message);\n    };\n}\n\nasync function validateGraphQlDocuments(schema, documentFiles, effectiveRules = createDefaultRules()) {\n    const allFragmentMap = new Map();\n    const documentFileObjectsToValidate = [];\n    for (const documentFile of documentFiles) {\n        if (documentFile.document) {\n            const definitionsToValidate = [];\n            for (const definitionNode of documentFile.document.definitions) {\n                if (definitionNode.kind === graphql.Kind.FRAGMENT_DEFINITION) {\n                    allFragmentMap.set(definitionNode.name.value, definitionNode);\n                }\n                else {\n                    definitionsToValidate.push(definitionNode);\n                }\n            }\n            documentFileObjectsToValidate.push({\n                location: documentFile.location,\n                document: {\n                    kind: graphql.Kind.DOCUMENT,\n                    definitions: definitionsToValidate,\n                },\n            });\n        }\n    }\n    const allErrors = [];\n    const allFragmentsDocument = {\n        kind: graphql.Kind.DOCUMENT,\n        definitions: [...allFragmentMap.values()],\n    };\n    await Promise.all(documentFileObjectsToValidate.map(async (documentFile) => {\n        const documentToValidate = graphql.concatAST([allFragmentsDocument, documentFile.document]);\n        const errors = graphql.validate(schema, documentToValidate, effectiveRules);\n        if (errors.length > 0) {\n            allErrors.push({\n                filePath: documentFile.location,\n                errors,\n            });\n        }\n    }));\n    return allErrors;\n}\nfunction checkValidationErrors(loadDocumentErrors) {\n    if (loadDocumentErrors.length > 0) {\n        const errors = [];\n        for (const loadDocumentError of loadDocumentErrors) {\n            for (const graphQLError of loadDocumentError.errors) {\n                const error = new Error();\n                error.name = 'GraphQLDocumentError';\n                error.message = `${error.name}: ${graphQLError.message}`;\n                error.stack = error.message;\n                if (graphQLError.locations) {\n                    for (const location of graphQLError.locations) {\n                        error.stack += `\\n    at ${loadDocumentError.filePath}:${location.line}:${location.column}`;\n                    }\n                }\n                errors.push(error);\n            }\n        }\n        throw new exports.AggregateError(errors, `GraphQL Document Validation failed with ${errors.length} errors;\n  ${errors.map((error, index) => `Error ${index}: ${error.stack}`).join('\\n\\n')}`);\n    }\n}\nfunction createDefaultRules() {\n    let ignored = ['NoUnusedFragmentsRule', 'NoUnusedVariablesRule', 'KnownDirectivesRule'];\n    if (graphql.versionInfo.major < 15) {\n        ignored = ignored.map(rule => rule.replace(/Rule$/, ''));\n    }\n    return graphql.specifiedRules.filter((f) => !ignored.includes(f.name));\n}\n\nfunction stripBOM(content) {\n    content = content.toString();\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xfeff) {\n        content = content.slice(1);\n    }\n    return content;\n}\nfunction parseBOM(content) {\n    return JSON.parse(stripBOM(content));\n}\nfunction parseGraphQLJSON(location, jsonContent, options) {\n    let parsedJson = parseBOM(jsonContent);\n    if (parsedJson.data) {\n        parsedJson = parsedJson.data;\n    }\n    if (parsedJson.kind === 'Document') {\n        return {\n            location,\n            document: parsedJson,\n        };\n    }\n    else if (parsedJson.__schema) {\n        const schema = graphql.buildClientSchema(parsedJson, options);\n        return {\n            location,\n            schema,\n        };\n    }\n    else if (typeof parsedJson === 'string') {\n        return {\n            location,\n            rawSDL: parsedJson,\n        };\n    }\n    throw new Error(`Not valid JSON content`);\n}\n\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nfunction collectComment(node) {\n    var _a;\n    const entityName = (_a = node.name) === null || _a === void 0 ? void 0 : _a.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    var _a;\n    return (_a = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(str => str.includes('\\n'))) !== null && _a !== void 0 ? _a : false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        var _a;\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, (_a = parent === null || parent === void 0 ? void 0 : parent.name) === null || _a === void 0 ? void 0 : _a.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return graphql.visit(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options === null || options === void 0 ? void 0 : options.commentDescriptions) {\n        return getComment(node);\n    }\n}\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n\nfunction parseGraphQLSDL(location, rawSDL, options = {}) {\n    let document;\n    try {\n        if (options.commentDescriptions && rawSDL.includes('#')) {\n            document = transformCommentsToDescriptions(rawSDL, options);\n            // If noLocation=true, we need to make sure to print and parse it again, to remove locations,\n            // since `transformCommentsToDescriptions` must have locations set in order to transform the comments\n            // into descriptions.\n            if (options.noLocation) {\n                document = graphql.parse(graphql.print(document), options);\n            }\n        }\n        else {\n            document = graphql.parse(new graphql.Source(rawSDL, location), options);\n        }\n    }\n    catch (e) {\n        if (e.message.includes('EOF') && rawSDL.replace(/(\\#[^*]*)/g, '').trim() === '') {\n            document = {\n                kind: graphql.Kind.DOCUMENT,\n                definitions: [],\n            };\n        }\n        else {\n            throw e;\n        }\n    }\n    return {\n        location,\n        document,\n    };\n}\nfunction transformCommentsToDescriptions(sourceSdl, options = {}) {\n    const parsedDoc = graphql.parse(sourceSdl, {\n        ...options,\n        noLocation: false,\n    });\n    const modifiedDoc = graphql.visit(parsedDoc, {\n        leave: (node) => {\n            if (isDescribable(node)) {\n                const rawValue = getLeadingCommentBlock(node);\n                if (rawValue !== undefined) {\n                    const commentsBlock = dedentBlockStringValue('\\n' + rawValue);\n                    const isBlock = commentsBlock.includes('\\n');\n                    if (!node.description) {\n                        return {\n                            ...node,\n                            description: {\n                                kind: graphql.Kind.STRING,\n                                value: commentsBlock,\n                                block: isBlock,\n                            },\n                        };\n                    }\n                    else {\n                        return {\n                            ...node,\n                            description: {\n                                ...node.description,\n                                value: node.description.value + '\\n' + commentsBlock,\n                                block: true,\n                            },\n                        };\n                    }\n                }\n            }\n        },\n    });\n    return modifiedDoc;\n}\nfunction isDescribable(node) {\n    return (graphql.isTypeSystemDefinitionNode(node) ||\n        node.kind === graphql.Kind.FIELD_DEFINITION ||\n        node.kind === graphql.Kind.INPUT_VALUE_DEFINITION ||\n        node.kind === graphql.Kind.ENUM_VALUE_DEFINITION);\n}\n\nlet operationVariables = [];\nlet fieldTypeMap = new Map();\nfunction addOperationVariable(variable) {\n    operationVariables.push(variable);\n}\nfunction resetOperationVariables() {\n    operationVariables = [];\n}\nfunction resetFieldMap() {\n    fieldTypeMap = new Map();\n}\nfunction buildOperationNodeForField({ schema, kind, field, models, ignore = [], depthLimit, circularReferenceDepth, argNames, selectedFields = true, }) {\n    resetOperationVariables();\n    resetFieldMap();\n    const rootTypeNames = getRootTypeNames(schema);\n    const operationNode = buildOperationAndCollectVariables({\n        schema,\n        fieldName: field,\n        kind,\n        models: models || [],\n        ignore,\n        depthLimit: depthLimit || Infinity,\n        circularReferenceDepth: circularReferenceDepth || 1,\n        argNames,\n        selectedFields,\n        rootTypeNames,\n    });\n    // attach variables\n    operationNode.variableDefinitions = [...operationVariables];\n    resetOperationVariables();\n    resetFieldMap();\n    return operationNode;\n}\nfunction buildOperationAndCollectVariables({ schema, fieldName, kind, models, ignore, depthLimit, circularReferenceDepth, argNames, selectedFields, rootTypeNames, }) {\n    const type = getDefinedRootType(schema, kind);\n    const field = type.getFields()[fieldName];\n    const operationName = `${fieldName}_${kind}`;\n    if (field.args) {\n        for (const arg of field.args) {\n            const argName = arg.name;\n            if (!argNames || argNames.includes(argName)) {\n                addOperationVariable(resolveVariable(arg, argName));\n            }\n        }\n    }\n    return {\n        kind: graphql.Kind.OPERATION_DEFINITION,\n        operation: kind,\n        name: {\n            kind: graphql.Kind.NAME,\n            value: operationName,\n        },\n        variableDefinitions: [],\n        selectionSet: {\n            kind: graphql.Kind.SELECTION_SET,\n            selections: [\n                resolveField({\n                    type,\n                    field,\n                    models,\n                    firstCall: true,\n                    path: [],\n                    ancestors: [],\n                    ignore,\n                    depthLimit,\n                    circularReferenceDepth,\n                    schema,\n                    depth: 0,\n                    argNames,\n                    selectedFields,\n                    rootTypeNames,\n                }),\n            ],\n        },\n    };\n}\nfunction resolveSelectionSet({ parent, type, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    if (typeof selectedFields === 'boolean' && depth > depthLimit) {\n        return;\n    }\n    if (graphql.isUnionType(type)) {\n        const types = type.getTypes();\n        return {\n            kind: graphql.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if (graphql.isInterfaceType(type)) {\n        const types = Object.values(schema.getTypeMap()).filter((t) => graphql.isObjectType(t) && t.getInterfaces().includes(type));\n        return {\n            kind: graphql.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if (graphql.isObjectType(type) && !rootTypeNames.has(type.name)) {\n        const isIgnored = ignore.includes(type.name) || ignore.includes(`${parent.name}.${path[path.length - 1]}`);\n        const isModel = models.includes(type.name);\n        if (!firstCall && isModel && !isIgnored) {\n            return {\n                kind: graphql.Kind.SELECTION_SET,\n                selections: [\n                    {\n                        kind: graphql.Kind.FIELD,\n                        name: {\n                            kind: graphql.Kind.NAME,\n                            value: 'id',\n                        },\n                    },\n                ],\n            };\n        }\n        const fields = type.getFields();\n        return {\n            kind: graphql.Kind.SELECTION_SET,\n            selections: Object.keys(fields)\n                .filter(fieldName => {\n                return !hasCircularRef([...ancestors, graphql.getNamedType(fields[fieldName].type)], {\n                    depth: circularReferenceDepth,\n                });\n            })\n                .map(fieldName => {\n                const selectedSubFields = typeof selectedFields === 'object' ? selectedFields[fieldName] : true;\n                if (selectedSubFields) {\n                    return resolveField({\n                        type: type,\n                        field: fields[fieldName],\n                        models,\n                        path: [...path, fieldName],\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields: selectedSubFields,\n                        rootTypeNames,\n                    });\n                }\n                return null;\n            })\n                .filter((f) => {\n                var _a, _b;\n                if (f == null) {\n                    return false;\n                }\n                else if ('selectionSet' in f) {\n                    return !!((_b = (_a = f.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length);\n                }\n                return true;\n            }),\n        };\n    }\n}\nfunction resolveVariable(arg, name) {\n    function resolveVariableType(type) {\n        if (graphql.isListType(type)) {\n            return {\n                kind: graphql.Kind.LIST_TYPE,\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        if (graphql.isNonNullType(type)) {\n            return {\n                kind: graphql.Kind.NON_NULL_TYPE,\n                // for v16 compatibility\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        return {\n            kind: graphql.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql.Kind.NAME,\n                value: type.name,\n            },\n        };\n    }\n    return {\n        kind: graphql.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql.Kind.VARIABLE,\n            name: {\n                kind: graphql.Kind.NAME,\n                value: name || arg.name,\n            },\n        },\n        type: resolveVariableType(arg.type),\n    };\n}\nfunction getArgumentName(name, path) {\n    return [...path, name].join('_');\n}\nfunction resolveField({ type, field, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    const namedType = graphql.getNamedType(field.type);\n    let args = [];\n    let removeField = false;\n    if (field.args && field.args.length) {\n        args = field.args\n            .map(arg => {\n            const argumentName = getArgumentName(arg.name, path);\n            if (argNames && !argNames.includes(argumentName)) {\n                if (graphql.isNonNullType(arg.type)) {\n                    removeField = true;\n                }\n                return null;\n            }\n            if (!firstCall) {\n                addOperationVariable(resolveVariable(arg, argumentName));\n            }\n            return {\n                kind: graphql.Kind.ARGUMENT,\n                name: {\n                    kind: graphql.Kind.NAME,\n                    value: arg.name,\n                },\n                value: {\n                    kind: graphql.Kind.VARIABLE,\n                    name: {\n                        kind: graphql.Kind.NAME,\n                        value: getArgumentName(arg.name, path),\n                    },\n                },\n            };\n        })\n            .filter(Boolean);\n    }\n    if (removeField) {\n        return null;\n    }\n    const fieldPath = [...path, field.name];\n    const fieldPathStr = fieldPath.join('.');\n    let fieldName = field.name;\n    if (fieldTypeMap.has(fieldPathStr) && fieldTypeMap.get(fieldPathStr) !== field.type.toString()) {\n        fieldName += field.type.toString().replace('!', 'NonNull');\n    }\n    fieldTypeMap.set(fieldPathStr, field.type.toString());\n    if (!graphql.isScalarType(namedType) && !graphql.isEnumType(namedType)) {\n        return {\n            kind: graphql.Kind.FIELD,\n            name: {\n                kind: graphql.Kind.NAME,\n                value: field.name,\n            },\n            ...(fieldName !== field.name && { alias: { kind: graphql.Kind.NAME, value: fieldName } }),\n            selectionSet: resolveSelectionSet({\n                parent: type,\n                type: namedType,\n                models,\n                firstCall,\n                path: fieldPath,\n                ancestors: [...ancestors, type],\n                ignore,\n                depthLimit,\n                circularReferenceDepth,\n                schema,\n                depth: depth + 1,\n                argNames,\n                selectedFields,\n                rootTypeNames,\n            }) || undefined,\n            arguments: args,\n        };\n    }\n    return {\n        kind: graphql.Kind.FIELD,\n        name: {\n            kind: graphql.Kind.NAME,\n            value: field.name,\n        },\n        ...(fieldName !== field.name && { alias: { kind: graphql.Kind.NAME, value: fieldName } }),\n        arguments: args,\n    };\n}\nfunction hasCircularRef(types, config = {\n    depth: 1,\n}) {\n    const type = types[types.length - 1];\n    if (graphql.isScalarType(type)) {\n        return false;\n    }\n    const size = types.filter(t => t.name === type.name).length;\n    return size > config.depth;\n}\n\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(exports.MapperKind || (exports.MapperKind = {}));\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if (graphql.isObjectType(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql.Kind.LIST_TYPE:\n            return new graphql.GraphQLList(createStub(node.type, type));\n        case graphql.Kind.NON_NULL_TYPE:\n            return new graphql.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql.GraphQLInt.name:\n            return graphql.GraphQLInt;\n        case graphql.GraphQLFloat.name:\n            return graphql.GraphQLFloat;\n        case graphql.GraphQLString.name:\n            return graphql.GraphQLString;\n        case graphql.GraphQLBoolean.name:\n            return graphql.GraphQLBoolean;\n        case graphql.GraphQLID.name:\n            return graphql.GraphQLID;\n        default:\n            return type;\n    }\n}\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            throw new Error(`Duplicate schema type name ${newName}`);\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if (graphql.isSpecifiedDirective(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if (graphql.isObjectType(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql.GraphQLObjectType(newConfig);\n        }\n        else if (graphql.isInterfaceType(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql.GraphQLInterfaceType(newConfig);\n        }\n        else if (graphql.isUnionType(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql.GraphQLUnionType(newConfig);\n        }\n        else if (graphql.isInputObjectType(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql.GraphQLInputObjectType(newConfig);\n        }\n        else if (graphql.isEnumType(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql.GraphQLEnumType(enumConfig);\n        }\n        else if (graphql.isScalarType(type)) {\n            if (graphql.isSpecifiedScalarType(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if (graphql.isListType(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql.GraphQLList(rewiredType) : null;\n        }\n        else if (graphql.isNonNullType(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql.GraphQLNonNull(rewiredType) : null;\n        }\n        else if (graphql.isNamedType(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = isNamedStub(type) ? getBuiltInForStub(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = graphql.getNullableType(type);\n    if (graphql.isLeafType(nullableType)) {\n        return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n    }\n    else if (graphql.isListType(nullableType)) {\n        return value.map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if (graphql.isInputObjectType(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => t.serialize(v));\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseValue(v));\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, serializeInputValue), schema, schemaMapper, type => graphql.isLeafType(type)), schema, schemaMapper), schema, parseInputValue), schema, schemaMapper, type => !graphql.isLeafType(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = rewireTypes(newTypeMap, newDirectives);\n    return new graphql.GraphQLSchema({\n        ...schema.toConfig(),\n        query: getObjectTypeFromTypeMap(typeMap, getObjectTypeFromTypeMap(newTypeMap, schema.getQueryType())),\n        mutation: getObjectTypeFromTypeMap(typeMap, getObjectTypeFromTypeMap(newTypeMap, schema.getMutationType())),\n        subscription: getObjectTypeFromTypeMap(typeMap, getObjectTypeFromTypeMap(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [exports.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => graphql.isEnumType(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [exports.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [exports.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if (graphql.isListType(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql.GraphQLList(newType) : null;\n    }\n    else if (graphql.isNonNullType(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql.GraphQLNonNull(newType) : null;\n    }\n    else if (graphql.isNamedType(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!graphql.isObjectType(originalType) && !graphql.isInterfaceType(originalType) && !graphql.isInputObjectType(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] = newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if (graphql.isObjectType(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if (graphql.isInterfaceType(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!graphql.isObjectType(originalType) && !graphql.isInterfaceType(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if (graphql.isObjectType(originalType)) {\n                newTypeMap[typeName] = new graphql.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if (graphql.isInterfaceType(originalType)) {\n                newTypeMap[typeName] = new graphql.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [exports.MapperKind.TYPE];\n    if (graphql.isObjectType(type)) {\n        specifiers.push(exports.MapperKind.COMPOSITE_TYPE, exports.MapperKind.OBJECT_TYPE);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(exports.MapperKind.ROOT_OBJECT, exports.MapperKind.QUERY);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(exports.MapperKind.ROOT_OBJECT, exports.MapperKind.MUTATION);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(exports.MapperKind.ROOT_OBJECT, exports.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if (graphql.isInputObjectType(type)) {\n        specifiers.push(exports.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if (graphql.isInterfaceType(type)) {\n        specifiers.push(exports.MapperKind.COMPOSITE_TYPE, exports.MapperKind.ABSTRACT_TYPE, exports.MapperKind.INTERFACE_TYPE);\n    }\n    else if (graphql.isUnionType(type)) {\n        specifiers.push(exports.MapperKind.COMPOSITE_TYPE, exports.MapperKind.ABSTRACT_TYPE, exports.MapperKind.UNION_TYPE);\n    }\n    else if (graphql.isEnumType(type)) {\n        specifiers.push(exports.MapperKind.ENUM_TYPE);\n    }\n    else if (graphql.isScalarType(type)) {\n        specifiers.push(exports.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [exports.MapperKind.FIELD];\n    if (graphql.isObjectType(type)) {\n        specifiers.push(exports.MapperKind.COMPOSITE_FIELD, exports.MapperKind.OBJECT_FIELD);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(exports.MapperKind.ROOT_FIELD, exports.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(exports.MapperKind.ROOT_FIELD, exports.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(exports.MapperKind.ROOT_FIELD, exports.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if (graphql.isInterfaceType(type)) {\n        specifiers.push(exports.MapperKind.COMPOSITE_FIELD, exports.MapperKind.INTERFACE_FIELD);\n    }\n    else if (graphql.isInputObjectType(type)) {\n        specifiers.push(exports.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper !== null && fieldMapper !== void 0 ? fieldMapper : null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[exports.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[exports.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[exports.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if (graphql.isObjectType(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql.GraphQLObjectType(config);\n    }\n    else if (graphql.isInterfaceType(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql.GraphQLInterfaceType(config);\n    }\n    else if (graphql.isInputObjectType(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql.GraphQLInputObjectType(config);\n    }\n    else if (graphql.isEnumType(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n\nfunction filterSchema({ schema, typeFilter = () => true, fieldFilter = undefined, rootFieldFilter = undefined, objectFieldFilter = undefined, interfaceFieldFilter = undefined, inputObjectFieldFilter = undefined, argumentFilter = undefined, }) {\n    const filteredSchema = mapSchema(schema, {\n        [exports.MapperKind.QUERY]: (type) => filterRootFields(type, 'Query', rootFieldFilter, argumentFilter),\n        [exports.MapperKind.MUTATION]: (type) => filterRootFields(type, 'Mutation', rootFieldFilter, argumentFilter),\n        [exports.MapperKind.SUBSCRIPTION]: (type) => filterRootFields(type, 'Subscription', rootFieldFilter, argumentFilter),\n        [exports.MapperKind.OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql.GraphQLObjectType, type, objectFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [exports.MapperKind.INTERFACE_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql.GraphQLInterfaceType, type, interfaceFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [exports.MapperKind.INPUT_OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql.GraphQLInputObjectType, type, inputObjectFieldFilter || fieldFilter)\n            : null,\n        [exports.MapperKind.UNION_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [exports.MapperKind.ENUM_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [exports.MapperKind.SCALAR_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n    });\n    return filteredSchema;\n}\nfunction filterRootFields(type, operation, rootFieldFilter, argumentFilter) {\n    if (rootFieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (rootFieldFilter && !rootFieldFilter(operation, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && field.args) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(operation, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new graphql.GraphQLObjectType(config);\n    }\n    return type;\n}\nfunction filterElementFields(ElementConstructor, type, fieldFilter, argumentFilter) {\n    if (fieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (fieldFilter && !fieldFilter(type.name, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && 'args' in field) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new ElementConstructor(config);\n    }\n}\n\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualName in actualNamedTypeMap) {\n            throw new Error(`Duplicate schema type name ${actualName}`);\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if (graphql.isObjectType(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if (graphql.isInterfaceType(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if (graphql.isUnionType(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if (graphql.isInputObjectType(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if (graphql.isLeafType(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if (graphql.isListType(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql.GraphQLList(healedType) : null;\n        }\n        else if (graphql.isNonNullType(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql.GraphQLNonNull(healedType) : null;\n        }\n        else if (graphql.isNamedType(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\n\nfunction getResolversFromSchema(schema) {\n    var _a, _b;\n    const resolvers = Object.create(null);\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        if (!typeName.startsWith('__')) {\n            const type = typeMap[typeName];\n            if (graphql.isScalarType(type)) {\n                if (!graphql.isSpecifiedScalarType(type)) {\n                    const config = type.toConfig();\n                    delete config.astNode; // avoid AST duplication elsewhere\n                    resolvers[typeName] = new graphql.GraphQLScalarType(config);\n                }\n            }\n            else if (graphql.isEnumType(type)) {\n                resolvers[typeName] = {};\n                const values = type.getValues();\n                for (const value of values) {\n                    resolvers[typeName][value.name] = value.value;\n                }\n            }\n            else if (graphql.isInterfaceType(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if (graphql.isUnionType(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if (graphql.isObjectType(type)) {\n                resolvers[typeName] = {};\n                if (type.isTypeOf != null) {\n                    resolvers[typeName].__isTypeOf = type.isTypeOf;\n                }\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    if (field.subscribe != null) {\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].subscribe = field.subscribe;\n                    }\n                    if (field.resolve != null &&\n                        ((_a = field.resolve) === null || _a === void 0 ? void 0 : _a.name) !== 'defaultFieldResolver' &&\n                        ((_b = field.resolve) === null || _b === void 0 ? void 0 : _b.name) !== 'defaultMergedResolver') {\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].resolve = field.resolve;\n                    }\n                }\n            }\n        }\n    }\n    return resolvers;\n}\n\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!graphql.getNamedType(type).name.startsWith('__') && graphql.isObjectType(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\n\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!graphql.getNamedType(type).name.startsWith('__')) {\n            if (graphql.isObjectType(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if (graphql.isInputObjectType(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\n\n// addTypes uses toConfig to create a new schema with a new or replaced\nfunction addTypes(schema, newTypesOrDirectives) {\n    const config = schema.toConfig();\n    const originalTypeMap = {};\n    for (const type of config.types) {\n        originalTypeMap[type.name] = type;\n    }\n    const originalDirectiveMap = {};\n    for (const directive of config.directives) {\n        originalDirectiveMap[directive.name] = directive;\n    }\n    for (const newTypeOrDirective of newTypesOrDirectives) {\n        if (graphql.isNamedType(newTypeOrDirective)) {\n            originalTypeMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n        else if (graphql.isDirective(newTypeOrDirective)) {\n            originalDirectiveMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n    }\n    const { typeMap, directives } = rewireTypes(originalTypeMap, Object.values(originalDirectiveMap));\n    return new graphql.GraphQLSchema({\n        ...config,\n        query: getObjectTypeFromTypeMap(typeMap, schema.getQueryType()),\n        mutation: getObjectTypeFromTypeMap(typeMap, schema.getMutationType()),\n        subscription: getObjectTypeFromTypeMap(typeMap, schema.getSubscriptionType()),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\n\n/**\n * Prunes the provided schema, removing unused and empty types\n * @param schema The schema to prune\n * @param options Additional options for removing unused types from the schema\n */\nfunction pruneSchema(schema, options = {}) {\n    const pruningContext = {\n        schema,\n        unusedTypes: Object.create(null),\n        implementations: Object.create(null),\n    };\n    for (const typeName in schema.getTypeMap()) {\n        const type = schema.getType(typeName);\n        if (type && 'getInterfaces' in type) {\n            for (const iface of type.getInterfaces()) {\n                const implementations = getImplementations(pruningContext, iface);\n                if (implementations == null) {\n                    pruningContext.implementations[iface.name] = Object.create(null);\n                }\n                pruningContext.implementations[iface.name][type.name] = true;\n            }\n        }\n    }\n    visitTypes(pruningContext, schema);\n    return mapSchema(schema, {\n        [exports.MapperKind.TYPE]: (type) => {\n            // If we should NOT prune the type, return it immediately as unmodified\n            if (options.skipPruning && options.skipPruning(type)) {\n                return type;\n            }\n            if (graphql.isObjectType(type) || graphql.isInputObjectType(type)) {\n                if ((!Object.keys(type.getFields()).length && !options.skipEmptyCompositeTypePruning) ||\n                    (pruningContext.unusedTypes[type.name] && !options.skipUnusedTypesPruning)) {\n                    return null;\n                }\n            }\n            else if (graphql.isUnionType(type)) {\n                if ((!type.getTypes().length && !options.skipEmptyUnionPruning) ||\n                    (pruningContext.unusedTypes[type.name] && !options.skipUnusedTypesPruning)) {\n                    return null;\n                }\n            }\n            else if (graphql.isInterfaceType(type)) {\n                const implementations = getImplementations(pruningContext, type);\n                if ((!Object.keys(type.getFields()).length && !options.skipEmptyCompositeTypePruning) ||\n                    (implementations && !Object.keys(implementations).length && !options.skipUnimplementedInterfacesPruning) ||\n                    (pruningContext.unusedTypes[type.name] && !options.skipUnusedTypesPruning)) {\n                    return null;\n                }\n            }\n            else {\n                if (pruningContext.unusedTypes[type.name] && !options.skipUnusedTypesPruning) {\n                    return null;\n                }\n            }\n        },\n    });\n}\nfunction visitOutputType(visitedTypes, pruningContext, type) {\n    if (visitedTypes[type.name]) {\n        return;\n    }\n    visitedTypes[type.name] = true;\n    pruningContext.unusedTypes[type.name] = false;\n    if (graphql.isObjectType(type) || graphql.isInterfaceType(type)) {\n        const fields = type.getFields();\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const namedType = graphql.getNamedType(field.type);\n            visitOutputType(visitedTypes, pruningContext, namedType);\n            for (const arg of field.args) {\n                const type = graphql.getNamedType(arg.type);\n                visitInputType(visitedTypes, pruningContext, type);\n            }\n        }\n        if (graphql.isInterfaceType(type)) {\n            const implementations = getImplementations(pruningContext, type);\n            if (implementations) {\n                for (const typeName in implementations) {\n                    visitOutputType(visitedTypes, pruningContext, pruningContext.schema.getType(typeName));\n                }\n            }\n        }\n        if ('getInterfaces' in type) {\n            for (const iFace of type.getInterfaces()) {\n                visitOutputType(visitedTypes, pruningContext, iFace);\n            }\n        }\n    }\n    else if (graphql.isUnionType(type)) {\n        const types = type.getTypes();\n        for (const type of types) {\n            visitOutputType(visitedTypes, pruningContext, type);\n        }\n    }\n}\n/**\n * Get the implementations of an interface. May return undefined.\n */\nfunction getImplementations(pruningContext, type) {\n    return pruningContext.implementations[type.name];\n}\nfunction visitInputType(visitedTypes, pruningContext, type) {\n    if (visitedTypes[type.name]) {\n        return;\n    }\n    pruningContext.unusedTypes[type.name] = false;\n    visitedTypes[type.name] = true;\n    if (graphql.isInputObjectType(type)) {\n        const fields = type.getFields();\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const namedType = graphql.getNamedType(field.type);\n            visitInputType(visitedTypes, pruningContext, namedType);\n        }\n    }\n}\nfunction visitTypes(pruningContext, schema) {\n    for (const typeName in schema.getTypeMap()) {\n        if (!typeName.startsWith('__')) {\n            pruningContext.unusedTypes[typeName] = true;\n        }\n    }\n    const visitedTypes = Object.create(null);\n    const rootTypes = getRootTypes(schema);\n    for (const rootType of rootTypes) {\n        visitOutputType(visitedTypes, pruningContext, rootType);\n    }\n    for (const directive of schema.getDirectives()) {\n        for (const arg of directive.args) {\n            const type = graphql.getNamedType(arg.type);\n            visitInputType(visitedTypes, pruningContext, type);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mergeDeep(sources, respectPrototype = false) {\n    const target = sources[0] || {};\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(target)));\n    }\n    for (const source of sources) {\n        if (isObject(target) && isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if (isSome(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nfunction parseSelectionSet(selectionSet, options) {\n    const query = graphql.parse(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\n\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\n\nfunction appendObjectFields(schema, typeName, additionalFields) {\n    if (schema.getType(typeName) == null) {\n        return addTypes(schema, [\n            new graphql.GraphQLObjectType({\n                name: typeName,\n                fields: additionalFields,\n            }),\n        ]);\n    }\n    return mapSchema(schema, {\n        [exports.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    newFieldConfigMap[fieldName] = originalFieldConfigMap[fieldName];\n                }\n                for (const fieldName in additionalFields) {\n                    newFieldConfigMap[fieldName] = additionalFields[fieldName];\n                }\n                return correctASTNodes(new graphql.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n}\nfunction removeObjectFields(schema, typeName, testFn) {\n    const removedFields = {};\n    const newSchema = mapSchema(schema, {\n        [exports.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                return correctASTNodes(new graphql.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\nfunction selectObjectFields(schema, typeName, testFn) {\n    const selectedFields = {};\n    mapSchema(schema, {\n        [exports.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        selectedFields[fieldName] = originalFieldConfig;\n                    }\n                }\n            }\n            return undefined;\n        },\n    });\n    return selectedFields;\n}\nfunction modifyObjectFields(schema, typeName, testFn, newFields) {\n    const removedFields = {};\n    const newSchema = mapSchema(schema, {\n        [exports.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                for (const fieldName in newFields) {\n                    const fieldConfig = newFields[fieldName];\n                    newFieldConfigMap[fieldName] = fieldConfig;\n                }\n                return correctASTNodes(new graphql.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\n\nfunction renameType(type, newTypeName) {\n    if (graphql.isObjectType(type)) {\n        return new graphql.GraphQLObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if (graphql.isInterfaceType(type)) {\n        return new graphql.GraphQLInterfaceType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if (graphql.isUnionType(type)) {\n        return new graphql.GraphQLUnionType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if (graphql.isInputObjectType(type)) {\n        return new graphql.GraphQLInputObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if (graphql.isEnumType(type)) {\n        return new graphql.GraphQLEnumType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if (graphql.isScalarType(type)) {\n        return new graphql.GraphQLScalarType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    throw new Error(`Unknown type ${type}.`);\n}\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    let $return;\n    let abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = rejectCallback;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            return $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n\nfunction updateArgument(argumentNodes, variableDefinitionsMap, variableValues, argName, varName, type, value) {\n    argumentNodes[argName] = {\n        kind: graphql.Kind.ARGUMENT,\n        name: {\n            kind: graphql.Kind.NAME,\n            value: argName,\n        },\n        value: {\n            kind: graphql.Kind.VARIABLE,\n            name: {\n                kind: graphql.Kind.NAME,\n                value: varName,\n            },\n        },\n    };\n    variableDefinitionsMap[varName] = {\n        kind: graphql.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql.Kind.VARIABLE,\n            name: {\n                kind: graphql.Kind.NAME,\n                value: varName,\n            },\n        },\n        type: astFromType(type),\n    };\n    if (value !== undefined) {\n        variableValues[varName] = value;\n        return;\n    }\n    // including the variable in the map with value of `undefined`\n    // will actually be translated by graphql-js into `null`\n    // see https://github.com/graphql/graphql-js/issues/2533\n    if (varName in variableValues) {\n        delete variableValues[varName];\n    }\n}\nfunction createVariableNameGenerator(variableDefinitionMap) {\n    let varCounter = 0;\n    return (argName) => {\n        let varName;\n        do {\n            varName = `_v${(varCounter++).toString()}_${argName}`;\n        } while (varName in variableDefinitionMap);\n        return varName;\n    };\n}\n\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeB == null || typeA == null) {\n        return false;\n    }\n    else if (typeA === typeB) {\n        return true;\n    }\n    else if (graphql.isCompositeType(typeA) && graphql.isCompositeType(typeB)) {\n        return graphql.doTypesOverlap(schema, typeA, typeB);\n    }\n    return false;\n}\n\nfunction relocatedError(originalError, path) {\n    return new graphql.GraphQLError(originalError.message, originalError.nodes, originalError.source, originalError.positions, path === null ? undefined : path === undefined ? originalError.path : path, originalError.originalError, originalError.extensions);\n}\n\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = graphql.getOperationAST(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = memoize1(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n\n// Taken from GraphQL-JS v16 for backwards compat\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet, fields, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const name = getFieldEntryKey(selection);\n                const fieldList = fields.get(name);\n                if (fieldList !== undefined) {\n                    fieldList.push(selection);\n                }\n                else {\n                    fields.set(name, [selection]);\n                }\n                break;\n            }\n            case graphql.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                collectFields(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n                break;\n            }\n            case graphql.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (visitedFragmentNames.has(fragName) || !shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                visitedFragmentNames.add(fragName);\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                collectFields(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n                break;\n            }\n        }\n    }\n    return fields;\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = graphql.getDirectiveValues(graphql.GraphQLSkipDirective, node, variableValues);\n    if ((skip === null || skip === void 0 ? void 0 : skip['if']) === true) {\n        return false;\n    }\n    const include = graphql.getDirectiveValues(graphql.GraphQLIncludeDirective, node, variableValues);\n    if ((include === null || include === void 0 ? void 0 : include['if']) === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = graphql.typeFromAST(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if (graphql.isAbstractType(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\nconst collectSubFields = memoize5(function collectSubFields(schema, fragments, variableValues, type, fieldNodes) {\n    const subFieldNodes = new Map();\n    const visitedFragmentNames = new Set();\n    for (const fieldNode of fieldNodes) {\n        if (fieldNode.selectionSet) {\n            collectFields(schema, fragments, variableValues, type, fieldNode.selectionSet, subFieldNodes, visitedFragmentNames);\n        }\n    }\n    return subFieldNodes;\n});\n\nfunction visitData(data, enter, leave) {\n    if (Array.isArray(data)) {\n        return data.map(value => visitData(value, enter, leave));\n    }\n    else if (typeof data === 'object') {\n        const newData = enter != null ? enter(data) : data;\n        if (newData != null) {\n            for (const key in newData) {\n                const value = newData[key];\n                Object.defineProperty(newData, key, {\n                    value: visitData(value, enter, leave),\n                });\n            }\n        }\n        return leave != null ? leave(newData) : newData;\n    }\n    return data;\n}\nfunction visitErrors(errors, visitor) {\n    return errors.map(error => visitor(error));\n}\nfunction visitResult(result, request, schema, resultVisitorMap, errorVisitorMap) {\n    const fragments = request.document.definitions.reduce((acc, def) => {\n        if (def.kind === graphql.Kind.FRAGMENT_DEFINITION) {\n            acc[def.name.value] = def;\n        }\n        return acc;\n    }, {});\n    const variableValues = request.variables || {};\n    const errorInfo = {\n        segmentInfoMap: new Map(),\n        unpathedErrors: new Set(),\n    };\n    const data = result.data;\n    const errors = result.errors;\n    const visitingErrors = errors != null && errorVisitorMap != null;\n    const operationDocumentNode = getOperationASTFromRequest(request);\n    if (data != null && operationDocumentNode != null) {\n        result.data = visitRoot(data, operationDocumentNode, schema, fragments, variableValues, resultVisitorMap, visitingErrors ? errors : undefined, errorInfo);\n    }\n    if (errors != null && errorVisitorMap) {\n        result.errors = visitErrorsByType(errors, errorVisitorMap, errorInfo);\n    }\n    return result;\n}\nfunction visitErrorsByType(errors, errorVisitorMap, errorInfo) {\n    const segmentInfoMap = errorInfo.segmentInfoMap;\n    const unpathedErrors = errorInfo.unpathedErrors;\n    const unpathedErrorVisitor = errorVisitorMap['__unpathed'];\n    return errors.map(originalError => {\n        const pathSegmentsInfo = segmentInfoMap.get(originalError);\n        const newError = pathSegmentsInfo == null\n            ? originalError\n            : pathSegmentsInfo.reduceRight((acc, segmentInfo) => {\n                const typeName = segmentInfo.type.name;\n                const typeVisitorMap = errorVisitorMap[typeName];\n                if (typeVisitorMap == null) {\n                    return acc;\n                }\n                const errorVisitor = typeVisitorMap[segmentInfo.fieldName];\n                return errorVisitor == null ? acc : errorVisitor(acc, segmentInfo.pathIndex);\n            }, originalError);\n        if (unpathedErrorVisitor && unpathedErrors.has(originalError)) {\n            return unpathedErrorVisitor(newError);\n        }\n        return newError;\n    });\n}\nfunction visitRoot(root, operation, schema, fragments, variableValues, resultVisitorMap, errors, errorInfo) {\n    const operationRootType = graphql.getOperationRootType(schema, operation);\n    const collectedFields = collectFields(schema, fragments, variableValues, operationRootType, operation.selectionSet, new Map(), new Set());\n    return visitObjectValue(root, operationRootType, collectedFields, schema, fragments, variableValues, resultVisitorMap, 0, errors, errorInfo);\n}\nfunction visitObjectValue(object, type, fieldNodeMap, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    const fieldMap = type.getFields();\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[type.name];\n    const enterObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__enter;\n    const newObject = enterObject != null ? enterObject(object) : object;\n    let sortedErrors;\n    let errorMap = null;\n    if (errors != null) {\n        sortedErrors = sortErrorsByPathSegment(errors, pathIndex);\n        errorMap = sortedErrors.errorMap;\n        for (const error of sortedErrors.unpathedErrors) {\n            errorInfo.unpathedErrors.add(error);\n        }\n    }\n    for (const [responseKey, subFieldNodes] of fieldNodeMap) {\n        const fieldName = subFieldNodes[0].name.value;\n        const fieldType = fieldName === '__typename' ? graphql.TypeNameMetaFieldDef.type : fieldMap[fieldName].type;\n        const newPathIndex = pathIndex + 1;\n        let fieldErrors;\n        if (errorMap) {\n            fieldErrors = errorMap[responseKey];\n            if (fieldErrors != null) {\n                delete errorMap[responseKey];\n            }\n            addPathSegmentInfo(type, fieldName, newPathIndex, fieldErrors, errorInfo);\n        }\n        const newValue = visitFieldValue(object[responseKey], fieldType, subFieldNodes, schema, fragments, variableValues, resultVisitorMap, newPathIndex, fieldErrors, errorInfo);\n        updateObject(newObject, responseKey, newValue, typeVisitorMap, fieldName);\n    }\n    const oldTypename = newObject.__typename;\n    if (oldTypename != null) {\n        updateObject(newObject, '__typename', oldTypename, typeVisitorMap, '__typename');\n    }\n    if (errorMap) {\n        for (const errorsKey in errorMap) {\n            const errors = errorMap[errorsKey];\n            for (const error of errors) {\n                errorInfo.unpathedErrors.add(error);\n            }\n        }\n    }\n    const leaveObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__leave;\n    return leaveObject != null ? leaveObject(newObject) : newObject;\n}\nfunction updateObject(object, responseKey, newValue, typeVisitorMap, fieldName) {\n    if (typeVisitorMap == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const fieldVisitor = typeVisitorMap[fieldName];\n    if (fieldVisitor == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const visitedValue = fieldVisitor(newValue);\n    if (visitedValue === undefined) {\n        delete object[responseKey];\n        return;\n    }\n    object[responseKey] = visitedValue;\n}\nfunction visitListValue(list, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    return list.map(listMember => visitFieldValue(listMember, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex + 1, errors, errorInfo));\n}\nfunction visitFieldValue(value, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors = [], errorInfo) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = graphql.getNullableType(returnType);\n    if (graphql.isListType(nullableType)) {\n        return visitListValue(value, nullableType.ofType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if (graphql.isAbstractType(nullableType)) {\n        const finalType = schema.getType(value.__typename);\n        const collectedFields = collectSubFields(schema, fragments, variableValues, finalType, fieldNodes);\n        return visitObjectValue(value, finalType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if (graphql.isObjectType(nullableType)) {\n        const collectedFields = collectSubFields(schema, fragments, variableValues, nullableType, fieldNodes);\n        return visitObjectValue(value, nullableType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[nullableType.name];\n    if (typeVisitorMap == null) {\n        return value;\n    }\n    const visitedValue = typeVisitorMap(value);\n    return visitedValue === undefined ? value : visitedValue;\n}\nfunction sortErrorsByPathSegment(errors, pathIndex) {\n    var _a;\n    const errorMap = Object.create(null);\n    const unpathedErrors = new Set();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[pathIndex];\n        if (pathSegment == null) {\n            unpathedErrors.add(error);\n            continue;\n        }\n        if (pathSegment in errorMap) {\n            errorMap[pathSegment].push(error);\n        }\n        else {\n            errorMap[pathSegment] = [error];\n        }\n    }\n    return {\n        errorMap,\n        unpathedErrors,\n    };\n}\nfunction addPathSegmentInfo(type, fieldName, pathIndex, errors = [], errorInfo) {\n    for (const error of errors) {\n        const segmentInfo = {\n            type,\n            fieldName,\n            pathIndex,\n        };\n        const pathSegmentsInfo = errorInfo.segmentInfoMap.get(error);\n        if (pathSegmentsInfo == null) {\n            errorInfo.segmentInfoMap.set(error, [segmentInfo]);\n        }\n        else {\n            pathSegmentsInfo.push(segmentInfo);\n        }\n    }\n}\n\nfunction valueMatchesCriteria(value, criteria) {\n    if (value == null) {\n        return value === criteria;\n    }\n    else if (Array.isArray(value)) {\n        return Array.isArray(criteria) && value.every((val, index) => valueMatchesCriteria(val, criteria[index]));\n    }\n    else if (typeof value === 'object') {\n        return (typeof criteria === 'object' &&\n            criteria &&\n            Object.keys(criteria).every(propertyName => valueMatchesCriteria(value[propertyName], criteria[propertyName])));\n    }\n    else if (criteria instanceof RegExp) {\n        return criteria.test(value);\n    }\n    return value === criteria;\n}\n\nfunction isAsyncIterable(value) {\n    return typeof value === 'object' && value != null && Symbol.asyncIterator in value;\n}\n\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql.Kind.DOCUMENT;\n}\n\nfunction withCancel(asyncIteratorLike, onCancel) {\n    const asyncIterator = asyncIteratorLike[Symbol.asyncIterator]();\n    if (!asyncIterator.return) {\n        asyncIterator.return = () => Promise.resolve({ value: undefined, done: true });\n    }\n    const savedReturn = asyncIterator.return.bind(asyncIterator);\n    asyncIterator.return = () => {\n        onCancel();\n        return savedReturn();\n    };\n    return asyncIterator;\n}\n\nfunction buildFixedSchema(schema, options) {\n    const document = getDocumentNodeFromSchema(schema);\n    return graphql.buildASTSchema(document, {\n        ...(options || {}),\n    });\n}\nfunction fixSchemaAst(schema, options) {\n    // eslint-disable-next-line no-undef-init\n    let schemaWithValidAst = undefined;\n    if (!schema.astNode || !schema.extensionASTNodes) {\n        schemaWithValidAst = buildFixedSchema(schema, options);\n    }\n    if (!schema.astNode && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.astNode = schemaWithValidAst.astNode;\n    }\n    if (!schema.extensionASTNodes && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.extensionASTNodes = schemaWithValidAst.extensionASTNodes;\n    }\n    return schema;\n}\n\nexports.addTypes = addTypes;\nexports.appendObjectFields = appendObjectFields;\nexports.asArray = asArray;\nexports.assertSome = assertSome;\nexports.astFromArg = astFromArg;\nexports.astFromDirective = astFromDirective;\nexports.astFromEnumType = astFromEnumType;\nexports.astFromEnumValue = astFromEnumValue;\nexports.astFromField = astFromField;\nexports.astFromInputField = astFromInputField;\nexports.astFromInputObjectType = astFromInputObjectType;\nexports.astFromInterfaceType = astFromInterfaceType;\nexports.astFromObjectType = astFromObjectType;\nexports.astFromScalarType = astFromScalarType;\nexports.astFromSchema = astFromSchema;\nexports.astFromUnionType = astFromUnionType;\nexports.astFromValueUntyped = astFromValueUntyped;\nexports.buildOperationNodeForField = buildOperationNodeForField;\nexports.checkValidationErrors = checkValidationErrors;\nexports.collectComment = collectComment;\nexports.collectFields = collectFields;\nexports.collectSubFields = collectSubFields;\nexports.compareNodes = compareNodes;\nexports.compareStrings = compareStrings;\nexports.correctASTNodes = correctASTNodes;\nexports.createDefaultRules = createDefaultRules;\nexports.createNamedStub = createNamedStub;\nexports.createStub = createStub;\nexports.createVariableNameGenerator = createVariableNameGenerator;\nexports.dedentBlockStringValue = dedentBlockStringValue;\nexports.filterSchema = filterSchema;\nexports.fixSchemaAst = fixSchemaAst;\nexports.forEachDefaultValue = forEachDefaultValue;\nexports.forEachField = forEachField;\nexports.getArgumentValues = getArgumentValues;\nexports.getBlockStringIndentation = getBlockStringIndentation;\nexports.getBuiltInForStub = getBuiltInForStub;\nexports.getComment = getComment;\nexports.getDefinedRootType = getDefinedRootType;\nexports.getDeprecatableDirectiveNodes = getDeprecatableDirectiveNodes;\nexports.getDescription = getDescription;\nexports.getDirective = getDirective;\nexports.getDirectiveInExtensions = getDirectiveInExtensions;\nexports.getDirectiveNodes = getDirectiveNodes;\nexports.getDirectives = getDirectives;\nexports.getDirectivesInExtensions = getDirectivesInExtensions;\nexports.getDocumentNodeFromSchema = getDocumentNodeFromSchema;\nexports.getFieldsWithDirectives = getFieldsWithDirectives;\nexports.getImplementingTypes = getImplementingTypes;\nexports.getLeadingCommentBlock = getLeadingCommentBlock;\nexports.getOperationASTFromDocument = getOperationASTFromDocument;\nexports.getOperationASTFromRequest = getOperationASTFromRequest;\nexports.getResolversFromSchema = getResolversFromSchema;\nexports.getResponseKeyFromInfo = getResponseKeyFromInfo;\nexports.getRootTypeMap = getRootTypeMap;\nexports.getRootTypeNames = getRootTypeNames;\nexports.getRootTypes = getRootTypes;\nexports.healSchema = healSchema;\nexports.healTypes = healTypes;\nexports.implementsAbstractType = implementsAbstractType;\nexports.inspect = inspect;\nexports.isAsyncIterable = isAsyncIterable;\nexports.isDescribable = isDescribable;\nexports.isDocumentNode = isDocumentNode;\nexports.isDocumentString = isDocumentString;\nexports.isNamedStub = isNamedStub;\nexports.isSome = isSome;\nexports.isValidPath = isValidPath;\nexports.makeDeprecatedDirective = makeDeprecatedDirective;\nexports.makeDirectiveNode = makeDirectiveNode;\nexports.makeDirectiveNodes = makeDirectiveNodes;\nexports.mapAsyncIterator = mapAsyncIterator;\nexports.mapSchema = mapSchema;\nexports.memoize1 = memoize1;\nexports.memoize2 = memoize2;\nexports.memoize2of4 = memoize2of4;\nexports.memoize3 = memoize3;\nexports.memoize4 = memoize4;\nexports.memoize5 = memoize5;\nexports.mergeDeep = mergeDeep;\nexports.modifyObjectFields = modifyObjectFields;\nexports.nodeToString = nodeToString;\nexports.observableToAsyncIterable = observableToAsyncIterable;\nexports.parseGraphQLJSON = parseGraphQLJSON;\nexports.parseGraphQLSDL = parseGraphQLSDL;\nexports.parseInputValue = parseInputValue;\nexports.parseInputValueLiteral = parseInputValueLiteral;\nexports.parseSelectionSet = parseSelectionSet;\nexports.printComment = printComment;\nexports.printSchemaWithDirectives = printSchemaWithDirectives;\nexports.printWithComments = printWithComments;\nexports.pruneSchema = pruneSchema;\nexports.pushComment = pushComment;\nexports.relocatedError = relocatedError;\nexports.removeObjectFields = removeObjectFields;\nexports.renameType = renameType;\nexports.resetComments = resetComments;\nexports.rewireTypes = rewireTypes;\nexports.selectObjectFields = selectObjectFields;\nexports.serializeInputValue = serializeInputValue;\nexports.transformCommentsToDescriptions = transformCommentsToDescriptions;\nexports.transformInputValue = transformInputValue;\nexports.updateArgument = updateArgument;\nexports.validateGraphQlDocuments = validateGraphQlDocuments;\nexports.valueMatchesCriteria = valueMatchesCriteria;\nexports.visitData = visitData;\nexports.visitErrors = visitErrors;\nexports.visitResult = visitResult;\nexports.withCancel = withCancel;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst utils = require('@graphql-tools/utils');\nconst graphql = require('graphql');\n\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = utils.mergeDeep(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\n\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(utils.isSome));\n    if (config && config.sort) {\n        result.sort(utils.compareNodes);\n    }\n    return result;\n}\nfunction deduplicateArguments(args) {\n    return args.reduce((acc, current) => {\n        const dup = acc.find(arg => arg.name.value === current.name.value);\n        if (!dup) {\n            return acc.concat([current]);\n        }\n        return acc;\n    }, []);\n}\n\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments$1(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments$1(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(utils.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext]);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments$1(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nfunction validateInputs(node, existingNode) {\n    const printedNode = graphql.print({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = graphql.print({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n\nfunction mergeEnumValues(first, second, config) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = mergeDirectives(secondValue.directives, firstValue.directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(utils.compareNodes);\n    }\n    return result;\n}\n\nfunction mergeEnum(e1, e2, config) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: mergeDirectives(e1.directives, e2.directives, config),\n            values: mergeEnumValues(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\n\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nfunction isSourceTypes(types) {\n    return types instanceof graphql.Source;\n}\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql.Kind.NAMED_TYPE;\n}\nfunction isListTypeNode(type) {\n    return type.kind === graphql.Kind.LIST_TYPE;\n}\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql.Kind.NON_NULL_TYPE;\n}\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return exports.CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return exports.CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return exports.CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return exports.CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return exports.CompareVal.A_GREATER_THAN_B;\n    return exports.CompareVal.A_EQUALS_B;\n}\n\nfunction fieldAlreadyExists(fieldsArr, otherField, config) {\n    const result = fieldsArr.find(field => field.name.value === otherField.name.value);\n    if (result && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n        const t1 = extractType(result.type);\n        const t2 = extractType(otherField.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${otherField.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n    }\n    return !!result;\n}\nfunction mergeFields(type, f1, f2, config) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            if (fieldAlreadyExists(result, field, config)) {\n                const existing = result.find((f) => f.name.value === field.name.value);\n                if (!(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                    if (config === null || config === void 0 ? void 0 : config.throwOnConflict) {\n                        preventConflicts(type, existing, field, false);\n                    }\n                    else {\n                        preventConflicts(type, existing, field, true);\n                    }\n                    if (isNonNullTypeNode(field.type) && !isNonNullTypeNode(existing.type)) {\n                        existing.type = field.type;\n                    }\n                }\n                existing.arguments = mergeArguments(field['arguments'] || [], existing.arguments || [], config);\n                existing.directives = mergeDirectives(field.directives, existing.directives, config);\n                existing.description = field.description || existing.description;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = printTypeNode(a.type);\n    const bType = printTypeNode(b.type);\n    if (aType !== bType && !safeChangeForFieldType(a.type, b.type, ignoreNullability)) {\n        throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n    }\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!isWrappingTypeNode(oldType) && !isWrappingTypeNode(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if (isNonNullTypeNode(newType)) {\n        const ofType = isNonNullTypeNode(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if (isNonNullTypeNode(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if (isListTypeNode(oldType)) {\n        return ((isListTypeNode(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            (isNonNullTypeNode(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n\nfunction mergeInputType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n\nfunction mergeInterface(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\n\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(utils.compareNodes);\n    }\n    return result;\n}\n\nfunction mergeType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config),\n                interfaces: mergeNamedTypeArray(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n\nfunction mergeScalar(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: mergeDirectives(node.directives, existingNode.directives, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\n\nfunction mergeUnion(first, second, config) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: mergeDirectives(first.directives, second.directives, config),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql.Kind.UNION_TYPE_DEFINITION\n                : graphql.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: mergeNamedTypeArray(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\n\nconst DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql.Kind.SCHEMA_DEFINITION\n                ? graphql.Kind.SCHEMA_DEFINITION\n                : graphql.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: mergeDirectives(node.directives, existingNode.directives, config),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\n\nconst schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nfunction mergeGraphQLNodes(nodes, config) {\n    var _a, _b, _c;\n    const mergedResultMap = {};\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                utils.collectComment(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeType(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeEnum(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.UNION_TYPE_DEFINITION:\n                    case graphql.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeUnion(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeScalar(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeInputType(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeInterface(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = mergeDirective(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[schemaDefSymbol] = mergeSchemaDefs(nodeDefinition, mergedResultMap[schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\n\nfunction mergeTypeDefs(typeSource, config) {\n    utils.resetComments();\n    const doc = {\n        kind: graphql.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = utils.printWithComments(doc);\n    }\n    else {\n        result = doc;\n    }\n    utils.resetComments();\n    return result;\n}\nfunction visitTypeSources(typeSource, options, allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allNodes, visitedTypeSources);\n            }\n        }\n        else if (graphql.isSchema(typeSource)) {\n            const documentNode = utils.getDocumentNodeFromSchema(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if (isStringTypes(typeSource) || isSourceTypes(typeSource)) {\n            const documentNode = graphql.parse(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && graphql.isDefinitionNode(typeSource)) {\n            allNodes.push(typeSource);\n        }\n        else if (utils.isDocumentNode(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return allNodes;\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    utils.resetComments();\n    const allNodes = visitTypeSources(typeSource, config);\n    const mergedNodes = mergeGraphQLNodes(allNodes, config);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[schemaDefSymbol] || {\n            kind: graphql.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[schemaDefSymbol] = {\n            kind: graphql.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\n\nfunction travelSchemaPossibleExtensions(schema, hooks) {\n    hooks.onSchema(schema);\n    const typesMap = schema.getTypeMap();\n    for (const [, type] of Object.entries(typesMap)) {\n        const isPredefinedScalar = graphql.isScalarType(type) && graphql.isSpecifiedScalarType(type);\n        const isIntrospection = graphql.isIntrospectionType(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if (graphql.isObjectType(type)) {\n            hooks.onObjectType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onObjectField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onObjectFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if (graphql.isInterfaceType(type)) {\n            hooks.onInterface(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInterfaceField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onInterfaceFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if (graphql.isInputObjectType(type)) {\n            hooks.onInputType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInputFieldType(type, field);\n            }\n        }\n        else if (graphql.isUnionType(type)) {\n            hooks.onUnion(type);\n        }\n        else if (graphql.isScalarType(type)) {\n            hooks.onScalar(type);\n        }\n        else if (graphql.isEnumType(type)) {\n            hooks.onEnum(type);\n            for (const value of type.getValues()) {\n                hooks.onEnumValue(type, value);\n            }\n        }\n    }\n}\nfunction mergeExtensions(extensions) {\n    return utils.mergeDeep(extensions);\n}\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = utils.mergeDeep([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\nfunction extractExtensionsFromSchema(schema) {\n    const result = {\n        schemaExtensions: {},\n        types: {},\n    };\n    travelSchemaPossibleExtensions(schema, {\n        onSchema: schema => (result.schemaExtensions = schema.extensions || {}),\n        onObjectType: type => (result.types[type.name] = { fields: {}, type: 'object', extensions: type.extensions || {} }),\n        onObjectField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onObjectFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] = arg.extensions || {}),\n        onInterface: type => (result.types[type.name] = { fields: {}, type: 'interface', extensions: type.extensions || {} }),\n        onInterfaceField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onInterfaceFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] =\n            arg.extensions || {}),\n        onEnum: type => (result.types[type.name] = { values: {}, type: 'enum', extensions: type.extensions || {} }),\n        onEnumValue: (type, value) => (result.types[type.name].values[value.name] = value.extensions || {}),\n        onScalar: type => (result.types[type.name] = { type: 'scalar', extensions: type.extensions || {} }),\n        onUnion: type => (result.types[type.name] = { type: 'union', extensions: type.extensions || {} }),\n        onInputType: type => (result.types[type.name] = { fields: {}, type: 'input', extensions: type.extensions || {} }),\n        onInputFieldType: (type, field) => (result.types[type.name].fields[field.name] = { extensions: field.extensions || {} }),\n    });\n    return result;\n}\n\nexports.applyExtensions = applyExtensions;\nexports.defaultStringComparator = defaultStringComparator;\nexports.extractExtensionsFromSchema = extractExtensionsFromSchema;\nexports.extractType = extractType;\nexports.isListTypeNode = isListTypeNode;\nexports.isNamedDefinitionNode = isNamedDefinitionNode;\nexports.isNonNullTypeNode = isNonNullTypeNode;\nexports.isSourceTypes = isSourceTypes;\nexports.isStringTypes = isStringTypes;\nexports.isWrappingTypeNode = isWrappingTypeNode;\nexports.mergeArguments = mergeArguments;\nexports.mergeDirective = mergeDirective;\nexports.mergeDirectives = mergeDirectives;\nexports.mergeEnum = mergeEnum;\nexports.mergeEnumValues = mergeEnumValues;\nexports.mergeExtensions = mergeExtensions;\nexports.mergeFields = mergeFields;\nexports.mergeGraphQLNodes = mergeGraphQLNodes;\nexports.mergeGraphQLTypes = mergeGraphQLTypes;\nexports.mergeInputType = mergeInputType;\nexports.mergeInterface = mergeInterface;\nexports.mergeNamedTypeArray = mergeNamedTypeArray;\nexports.mergeResolvers = mergeResolvers;\nexports.mergeScalar = mergeScalar;\nexports.mergeType = mergeType;\nexports.mergeTypeDefs = mergeTypeDefs;\nexports.mergeUnion = mergeUnion;\nexports.printTypeNode = printTypeNode;\nexports.schemaDefSymbol = schemaDefSymbol;\nexports.travelSchemaPossibleExtensions = travelSchemaPossibleExtensions;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst graphql = require('graphql');\nconst utils = require('@graphql-tools/utils');\nconst merge = require('@graphql-tools/merge');\n\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    utils.forEachField(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !graphql.isScalarType(graphql.getNamedType(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            // eslint-disable-next-line no-console\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n\nfunction chainResolvers(resolvers) {\n    return (root, args, ctx, info) => resolvers.reduce((prev, curResolver) => {\n        if (curResolver != null) {\n            return curResolver(prev, args, ctx, info);\n        }\n        return graphql.defaultFieldResolver(prev, args, ctx, info);\n    }, root);\n}\n\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    utils.mapSchema(schema, {\n        [utils.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    // eslint-disable-next-line no-console\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\n\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\n\nfunction addResolversToSchema(schemaOrOptions, legacyInputResolvers, legacyInputValidationOptions) {\n    const options = graphql.isSchema(schemaOrOptions)\n        ? {\n            schema: schemaOrOptions,\n            resolvers: legacyInputResolvers !== null && legacyInputResolvers !== void 0 ? legacyInputResolvers : {},\n            resolverValidationOptions: legacyInputValidationOptions,\n        }\n        : schemaOrOptions;\n    let { schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, } = options;\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? extendResolversFromInterfaces(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                break;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if (graphql.isSpecifiedScalarType(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if (graphql.isEnumType(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if (graphql.isUnionType(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if (graphql.isObjectType(type) || graphql.isInterfaceType(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        checkForResolveTypeResolver(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if (graphql.isScalarType(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_c = (_b = (_a = resolverValue) === null || _a === void 0 ? void 0 : _a.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : type.astNode.description,\n                        directives: ((_d = type.astNode.directives) !== null && _d !== void 0 ? _d : []).concat((_g = (_f = (_e = resolverValue) === null || _e === void 0 ? void 0 : _e.astNode) === null || _f === void 0 ? void 0 : _f.directives) !== null && _g !== void 0 ? _g : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_j = (_h = resolverValue) === null || _h === void 0 ? void 0 : _h.extensionASTNodes) !== null && _j !== void 0 ? _j : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if (graphql.isEnumType(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_m = (_l = (_k = resolverValue) === null || _k === void 0 ? void 0 : _k.astNode) === null || _l === void 0 ? void 0 : _l.description) !== null && _m !== void 0 ? _m : config.astNode.description,\n                        directives: ((_o = config.astNode.directives) !== null && _o !== void 0 ? _o : []).concat((_r = (_q = (_p = resolverValue) === null || _p === void 0 ? void 0 : _p.astNode) === null || _q === void 0 ? void 0 : _q.directives) !== null && _r !== void 0 ? _r : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_t = (_s = resolverValue) === null || _s === void 0 ? void 0 : _s.extensionASTNodes) !== null && _t !== void 0 ? _t : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql.GraphQLEnumType(config);\n        }\n        else if (graphql.isUnionType(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if (graphql.isObjectType(type) || graphql.isInterfaceType(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    break;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    utils.forEachDefaultValue(schema, utils.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    utils.healSchema(schema);\n    // reparse all default values with new parsing functions.\n    utils.forEachDefaultValue(schema, utils.parseInputValue);\n    if (defaultFieldResolver != null) {\n        utils.forEachField(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = utils.mapSchema(schema, {\n        [utils.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!graphql.isSpecifiedScalarType(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_c = (_b = (_a = resolverValue) === null || _a === void 0 ? void 0 : _a.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : config.astNode.description,\n                            directives: ((_d = config.astNode.directives) !== null && _d !== void 0 ? _d : []).concat((_g = (_f = (_e = resolverValue) === null || _e === void 0 ? void 0 : _e.astNode) === null || _f === void 0 ? void 0 : _f.directives) !== null && _g !== void 0 ? _g : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_j = (_h = resolverValue) === null || _h === void 0 ? void 0 : _h.extensionASTNodes) !== null && _j !== void 0 ? _j : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql.GraphQLScalarType(config);\n            }\n        },\n        [utils.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_c = (_b = (_a = resolverValue) === null || _a === void 0 ? void 0 : _a.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : config.astNode.description,\n                            directives: ((_d = config.astNode.directives) !== null && _d !== void 0 ? _d : []).concat((_g = (_f = (_e = resolverValue) === null || _e === void 0 ? void 0 : _e.astNode) === null || _f === void 0 ? void 0 : _f.directives) !== null && _g !== void 0 ? _g : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_j = (_h = resolverValue) === null || _h === void 0 ? void 0 : _h.extensionASTNodes) !== null && _j !== void 0 ? _j : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql.GraphQLEnumType(config);\n            }\n        },\n        [utils.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql.GraphQLUnionType(config);\n            }\n        },\n        [utils.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql.GraphQLObjectType(config);\n            }\n        },\n        [utils.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql.GraphQLInterfaceType(config);\n            }\n        },\n        [utils.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = utils.mapSchema(schema, {\n            [utils.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use `graphql-tag` to not only parse a string into a\n * `DocumentNode` but also to provide additional syntax highlighting in your\n * editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = gql`\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, parseOptions = {}, inheritResolversFromInterfaces = false, pruningOptions, updateResolversInPlace = false, schemaExtensions, }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if (graphql.isSchema(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (parseOptions === null || parseOptions === void 0 ? void 0 : parseOptions.commentDescriptions) {\n        const mergedTypeDefs = merge.mergeTypeDefs(typeDefs, {\n            ...parseOptions,\n            commentDescriptions: true,\n        });\n        schema = graphql.buildSchema(mergedTypeDefs, parseOptions);\n    }\n    else {\n        const mergedTypeDefs = merge.mergeTypeDefs(typeDefs, parseOptions);\n        schema = graphql.buildASTSchema(mergedTypeDefs, parseOptions);\n    }\n    if (pruningOptions) {\n        schema = utils.pruneSchema(schema);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = addResolversToSchema({\n        schema,\n        resolvers: merge.mergeResolvers(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        assertResolversPresent(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        schemaExtensions = merge.mergeExtensions(utils.asArray(schemaExtensions));\n        merge.applyExtensions(schema, schemaExtensions);\n    }\n    return schema;\n}\n\n/**\n * Synchronously merges multiple schemas, typeDefinitions and/or resolvers into a single schema.\n * @param config Configuration object\n */\nfunction mergeSchemas(config) {\n    const extractedTypeDefs = utils.asArray(config.typeDefs || []);\n    const extractedResolvers = utils.asArray(config.resolvers || []);\n    const extractedSchemaExtensions = utils.asArray(config.schemaExtensions || []);\n    const schemas = config.schemas || [];\n    for (const schema of schemas) {\n        extractedTypeDefs.push(schema);\n        extractedResolvers.push(utils.getResolversFromSchema(schema));\n        extractedSchemaExtensions.push(merge.extractExtensionsFromSchema(schema));\n    }\n    return makeExecutableSchema({\n        parseOptions: config,\n        ...config,\n        typeDefs: extractedTypeDefs,\n        resolvers: extractedResolvers,\n        schemaExtensions: extractedSchemaExtensions,\n    });\n}\n\nexports.addResolversToSchema = addResolversToSchema;\nexports.assertResolversPresent = assertResolversPresent;\nexports.chainResolvers = chainResolvers;\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces;\nexports.makeExecutableSchema = makeExecutableSchema;\nexports.mergeSchemas = mergeSchemas;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nconst graphql = require('graphql');\nconst stringify = _interopDefault(require('fast-json-stable-stringify'));\nconst utils = require('@graphql-tools/utils');\nconst schema = require('@graphql-tools/schema');\n\nfunction isRef(maybeRef) {\n    return !!(maybeRef && typeof maybeRef === 'object' && '$ref' in maybeRef);\n}\nfunction assertIsRef(maybeRef, message) {\n    if (!isRef(maybeRef)) {\n        throw new Error(message || `Expected ${maybeRef} to be a valid Ref.`);\n    }\n}\nfunction isRecord(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line eqeqeq\n        const v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nconst randomListLength = () => {\n    // Mocking has always returned list of length 2 by default\n    // return 1 + Math.round(Math.random() * 10)\n    return 2;\n};\nconst takeRandom = (arr) => arr[Math.floor(Math.random() * arr.length)];\nfunction makeRef(typeName, key) {\n    return { $ref: { key, typeName } };\n}\nfunction isObject(thing) {\n    return thing === Object(thing) && !Array.isArray(thing);\n}\nfunction copyOwnPropsIfNotPresent(target, source) {\n    for (const prop of Object.getOwnPropertyNames(source)) {\n        if (!Object.getOwnPropertyDescriptor(target, prop)) {\n            const propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);\n            Object.defineProperty(target, prop, propertyDescriptor == null ? {} : propertyDescriptor);\n        }\n    }\n}\nfunction copyOwnProps(target, ...sources) {\n    for (const source of sources) {\n        let chain = source;\n        while (chain != null) {\n            copyOwnPropsIfNotPresent(target, chain);\n            chain = Object.getPrototypeOf(chain);\n        }\n    }\n    return target;\n}\n\n/**\n * @internal\n */\nfunction isMockList(obj) {\n    if (typeof (obj === null || obj === void 0 ? void 0 : obj.len) === 'number' || (Array.isArray(obj === null || obj === void 0 ? void 0 : obj.len) && typeof (obj === null || obj === void 0 ? void 0 : obj.len[0]) === 'number')) {\n        if (typeof obj.wrappedFunction === 'undefined' || typeof obj.wrappedFunction === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * This is an object you can return from your mock resolvers which calls the\n * provided `mockFunction` once for each list item.\n */\nclass MockList {\n    /**\n     * @param length Either the exact length of items to return or an inclusive\n     * range of possible lengths.\n     * @param mockFunction The function to call for each item in the list to\n     * resolve it. It can return another MockList or a value.\n     */\n    constructor(length, mockFunction) {\n        this.len = length;\n        if (typeof mockFunction !== 'undefined') {\n            if (typeof mockFunction !== 'function') {\n                throw new Error('Second argument to MockList must be a function or undefined');\n            }\n            this.wrappedFunction = mockFunction;\n        }\n    }\n    /**\n     * @internal\n     */\n    mock() {\n        let arr;\n        if (Array.isArray(this.len)) {\n            arr = new Array(this.randint(this.len[0], this.len[1]));\n        }\n        else {\n            arr = new Array(this.len);\n        }\n        for (let i = 0; i < arr.length; i++) {\n            if (typeof this.wrappedFunction === 'function') {\n                const res = this.wrappedFunction();\n                if (isMockList(res)) {\n                    arr[i] = res.mock();\n                }\n                else {\n                    arr[i] = res;\n                }\n            }\n            else {\n                arr[i] = undefined;\n            }\n        }\n        return arr;\n    }\n    randint(low, high) {\n        return Math.floor(Math.random() * (high - low + 1) + low);\n    }\n}\nfunction deepResolveMockList(mockList) {\n    return mockList.mock().map(v => {\n        if (isMockList(v))\n            return deepResolveMockList(v);\n        return v;\n    });\n}\n\nconst defaultMocks = {\n    Int: () => Math.round(Math.random() * 200) - 100,\n    Float: () => Math.random() * 200 - 100,\n    String: () => 'Hello World',\n    Boolean: () => Math.random() > 0.5,\n    ID: () => uuidv4(),\n};\nconst defaultKeyFieldNames = ['id', '_id'];\nclass MockStore {\n    constructor({ schema, mocks, typePolicies, }) {\n        this.store = {};\n        this.schema = schema;\n        this.mocks = { ...defaultMocks, ...mocks };\n        this.typePolicies = typePolicies || {};\n    }\n    has(typeName, key) {\n        return !!this.store[typeName] && !!this.store[typeName][key];\n    }\n    get(_typeName, _key, _fieldName, _fieldArgs) {\n        if (typeof _typeName !== 'string') {\n            if (_key === undefined) {\n                if (isRef(_typeName)) {\n                    throw new Error(\"Can't provide a ref as first argument and no other argument\");\n                }\n                // get({...})\n                return this.getImpl(_typeName);\n            }\n            else {\n                assertIsRef(_typeName);\n                const { $ref } = _typeName;\n                // arguments shift\n                _fieldArgs = _fieldName;\n                _fieldName = _key;\n                _key = $ref.key;\n                _typeName = $ref.typeName;\n            }\n        }\n        const args = {\n            typeName: _typeName,\n        };\n        if (isRecord(_key) || _key === undefined) {\n            // get('User', { name: 'Alex'})\n            args.defaultValue = _key;\n            return this.getImpl(args);\n        }\n        args.key = _key;\n        if (Array.isArray(_fieldName) && _fieldName.length === 1) {\n            _fieldName = _fieldName[0];\n        }\n        if (typeof _fieldName !== 'string' && !Array.isArray(_fieldName)) {\n            // get('User', 'me', { name: 'Alex'})\n            args.defaultValue = _fieldName;\n            return this.getImpl(args);\n        }\n        if (Array.isArray(_fieldName)) {\n            // get('User', 'me', ['father', 'name'])\n            const ref = this.get(_typeName, _key, _fieldName[0], _fieldArgs);\n            assertIsRef(ref);\n            return this.get(ref.$ref.typeName, ref.$ref.key, _fieldName.slice(1, _fieldName.length));\n        }\n        // get('User', 'me', 'name'...);\n        args.fieldName = _fieldName;\n        args.fieldArgs = _fieldArgs;\n        return this.getImpl(args);\n    }\n    set(_typeName, _key, _fieldName, _value) {\n        if (typeof _typeName !== 'string') {\n            if (_key === undefined) {\n                if (isRef(_typeName)) {\n                    throw new Error(\"Can't provide a ref as first argument and no other argument\");\n                }\n                // set({...})\n                return this.setImpl(_typeName);\n            }\n            else {\n                assertIsRef(_typeName);\n                const { $ref } = _typeName;\n                // arguments shift\n                _value = _fieldName;\n                _fieldName = _key;\n                _key = $ref.key;\n                _typeName = $ref.typeName;\n            }\n        }\n        assertIsDefined(_key, 'key was not provided');\n        const args = {\n            typeName: _typeName,\n            key: _key,\n        };\n        if (typeof _fieldName !== 'string') {\n            // set('User', 1, { name: 'Foo' })\n            if (!isRecord(_fieldName))\n                throw new Error('Expected value to be a record');\n            args.value = _fieldName;\n            return this.setImpl(args);\n        }\n        args.fieldName = _fieldName;\n        args.value = _value;\n        return this.setImpl(args);\n    }\n    reset() {\n        this.store = {};\n    }\n    filter(key, predicate) {\n        const entity = this.store[key];\n        return Object.values(entity).filter(predicate);\n    }\n    find(key, predicate) {\n        const entity = this.store[key];\n        return Object.values(entity).find(predicate);\n    }\n    getImpl(args) {\n        const { typeName, key, fieldName, fieldArgs, defaultValue } = args;\n        if (!fieldName) {\n            if (defaultValue !== undefined && !isRecord(defaultValue)) {\n                throw new Error('`defaultValue` should be an object');\n            }\n            let valuesToInsert = defaultValue || {};\n            if (key) {\n                valuesToInsert = { ...valuesToInsert, ...makeRef(typeName, key) };\n            }\n            return this.insert(typeName, valuesToInsert, true);\n        }\n        assertIsDefined(key, 'key argument should be given when fieldName is given');\n        const fieldNameInStore = getFieldNameInStore(fieldName, fieldArgs);\n        if (this.store[typeName] === undefined ||\n            this.store[typeName][key] === undefined ||\n            this.store[typeName][key][fieldNameInStore] === undefined) {\n            let value;\n            if (defaultValue !== undefined) {\n                value = defaultValue;\n            }\n            else if (this.isKeyField(typeName, fieldName)) {\n                value = key;\n            }\n            else {\n                value = this.generateFieldValue(typeName, fieldName, (otherFieldName, otherValue) => {\n                    // if we get a key field in the mix we don't care\n                    if (this.isKeyField(typeName, otherFieldName))\n                        return;\n                    this.set({ typeName, key, fieldName: otherFieldName, value: otherValue, noOverride: true });\n                });\n            }\n            this.set({ typeName, key, fieldName, fieldArgs, value, noOverride: true });\n        }\n        return this.store[typeName][key][fieldNameInStore];\n    }\n    setImpl(args) {\n        const { typeName, key, fieldName, fieldArgs, noOverride } = args;\n        let { value } = args;\n        if (isMockList(value)) {\n            value = deepResolveMockList(value);\n        }\n        if (this.store[typeName] === undefined) {\n            this.store[typeName] = {};\n        }\n        if (this.store[typeName][key] === undefined) {\n            this.store[typeName][key] = {};\n        }\n        if (!fieldName) {\n            if (!isRecord(value)) {\n                throw new Error('When no `fieldName` is provided, `value` should be a record.');\n            }\n            for (const fieldName in value) {\n                this.setImpl({\n                    typeName,\n                    key,\n                    fieldName,\n                    value: value[fieldName],\n                    noOverride,\n                });\n            }\n            return;\n        }\n        const fieldNameInStore = getFieldNameInStore(fieldName, fieldArgs);\n        if (this.isKeyField(typeName, fieldName) && value !== key) {\n            throw new Error(`Field ${fieldName} is a key field of ${typeName} and you are trying to set it to ${value} while the key is ${key}`);\n        }\n        // if already set and we don't override\n        if (this.store[typeName][key][fieldNameInStore] !== undefined && noOverride) {\n            return;\n        }\n        const fieldType = this.getFieldType(typeName, fieldName);\n        const currentValue = this.store[typeName][key][fieldNameInStore];\n        let valueToStore;\n        try {\n            valueToStore = this.normalizeValueToStore(fieldType, value, currentValue, (typeName, values) => this.insert(typeName, values, noOverride));\n        }\n        catch (e) {\n            throw new Error(`Value to set in ${typeName}.${fieldName} in not normalizable: ${e.message}`);\n        }\n        this.store[typeName][key] = {\n            ...this.store[typeName][key],\n            [fieldNameInStore]: valueToStore,\n        };\n    }\n    normalizeValueToStore(fieldType, value, currentValue, onInsertType) {\n        const fieldTypeName = fieldType.toString();\n        if (value === null) {\n            if (!graphql.isNullableType(fieldType)) {\n                throw new Error(`should not be null because ${fieldTypeName} is not nullable. Received null.`);\n            }\n            return null;\n        }\n        const nullableFieldType = graphql.getNullableType(fieldType);\n        if (value === undefined)\n            return this.generateValueFromType(nullableFieldType);\n        // deal with nesting insert\n        if (graphql.isCompositeType(nullableFieldType)) {\n            if (!isRecord(value))\n                throw new Error(`should be an object or null or undefined. Received ${value}`);\n            let joinedTypeName;\n            if (graphql.isAbstractType(nullableFieldType)) {\n                if (isRef(value)) {\n                    joinedTypeName = value.$ref.typeName;\n                }\n                else {\n                    if (typeof value['__typename'] !== 'string') {\n                        throw new Error(`should contain a '__typename' because ${nullableFieldType.name} an abstract type`);\n                    }\n                    joinedTypeName = value['__typename'];\n                }\n            }\n            else {\n                joinedTypeName = nullableFieldType.name;\n            }\n            return onInsertType(joinedTypeName, isRef(currentValue) ? { ...currentValue, ...value } : value);\n        }\n        if (graphql.isListType(nullableFieldType)) {\n            if (!Array.isArray(value))\n                throw new Error(`should be an array or null or undefined. Received ${value}`);\n            return value.map((v, index) => {\n                return this.normalizeValueToStore(nullableFieldType.ofType, v, typeof currentValue === 'object' && currentValue != null && currentValue[index] ? currentValue : undefined, onInsertType);\n            });\n        }\n        return value;\n    }\n    insert(typeName, values, noOverride) {\n        const keyFieldName = this.getKeyFieldName(typeName);\n        let key;\n        // when we generate a key for the type, we might produce\n        // other associated values with it\n        // We keep track of them and we'll insert them, with propririty\n        // for the ones that we areasked to insert\n        const otherValues = {};\n        if (isRef(values)) {\n            key = values.$ref.key;\n        }\n        else if (keyFieldName && keyFieldName in values) {\n            key = values[keyFieldName];\n        }\n        else {\n            key = this.generateKeyForType(typeName, (otherFieldName, otherFieldValue) => {\n                otherValues[otherFieldName] = otherFieldValue;\n            });\n        }\n        const toInsert = { ...otherValues, ...values };\n        for (const fieldName in toInsert) {\n            if (fieldName === '$ref')\n                continue;\n            if (fieldName === '__typename')\n                continue;\n            this.set({\n                typeName,\n                key,\n                fieldName,\n                value: toInsert[fieldName],\n                noOverride,\n            });\n        }\n        if (this.store[typeName] === undefined) {\n            this.store[typeName] = {};\n        }\n        if (this.store[typeName][key] === undefined) {\n            this.store[typeName][key] = {};\n        }\n        return makeRef(typeName, key);\n    }\n    generateFieldValue(typeName, fieldName, onOtherFieldsGenerated) {\n        const mockedValue = this.generateFieldValueFromMocks(typeName, fieldName, onOtherFieldsGenerated);\n        if (mockedValue !== undefined)\n            return mockedValue;\n        const fieldType = this.getFieldType(typeName, fieldName);\n        return this.generateValueFromType(fieldType);\n    }\n    generateFieldValueFromMocks(typeName, fieldName, onOtherFieldsGenerated) {\n        let value;\n        const mock = this.mocks ? this.mocks[typeName] : undefined;\n        if (mock) {\n            if (typeof mock === 'function') {\n                const values = mock();\n                if (typeof values !== 'object' || values == null) {\n                    throw new Error(`Value returned by the mock for ${typeName} is not an object`);\n                }\n                for (const otherFieldName in values) {\n                    if (otherFieldName === fieldName)\n                        continue;\n                    if (typeof values[otherFieldName] === 'function')\n                        continue;\n                    onOtherFieldsGenerated && onOtherFieldsGenerated(otherFieldName, values[otherFieldName]);\n                }\n                value = values[fieldName];\n                if (typeof value === 'function')\n                    value = value();\n            }\n            else if (typeof mock === 'object' && mock != null && typeof mock[fieldName] === 'function') {\n                value = mock[fieldName]();\n            }\n        }\n        if (value !== undefined)\n            return value;\n        const type = this.getType(typeName);\n        // GraphQL 14 Compatibility\n        const interfaces = 'getInterfaces' in type ? type.getInterfaces() : [];\n        if (interfaces.length > 0) {\n            for (const interface_ of interfaces) {\n                if (value)\n                    break;\n                value = this.generateFieldValueFromMocks(interface_.name, fieldName, onOtherFieldsGenerated);\n            }\n        }\n        return value;\n    }\n    generateKeyForType(typeName, onOtherFieldsGenerated) {\n        const keyFieldName = this.getKeyFieldName(typeName);\n        if (!keyFieldName)\n            return uuidv4();\n        return this.generateFieldValue(typeName, keyFieldName, onOtherFieldsGenerated);\n    }\n    generateValueFromType(fieldType) {\n        const nullableType = graphql.getNullableType(fieldType);\n        if (graphql.isScalarType(nullableType)) {\n            const mockFn = this.mocks[nullableType.name];\n            if (typeof mockFn !== 'function')\n                throw new Error(`No mock defined for type \"${nullableType.name}\"`);\n            return mockFn();\n        }\n        else if (graphql.isEnumType(nullableType)) {\n            const mockFn = this.mocks[nullableType.name];\n            if (typeof mockFn === 'function')\n                return mockFn();\n            const values = nullableType.getValues().map(v => v.value);\n            return takeRandom(values);\n        }\n        else if (graphql.isObjectType(nullableType)) {\n            // this will create a new random ref\n            return this.insert(nullableType.name, {});\n        }\n        else if (graphql.isListType(nullableType)) {\n            return [...new Array(randomListLength())].map(() => this.generateValueFromType(nullableType.ofType));\n        }\n        else if (graphql.isAbstractType(nullableType)) {\n            const mock = this.mocks[nullableType.name];\n            let typeName;\n            let values = {};\n            if (!mock) {\n                typeName = takeRandom(this.schema.getPossibleTypes(nullableType).map(t => t.name));\n            }\n            else if (typeof mock === 'function') {\n                const mockRes = mock();\n                if (mockRes === null)\n                    return null;\n                if (!isRecord(mockRes)) {\n                    throw new Error(`Value returned by the mock for ${nullableType.name} is not an object or null`);\n                }\n                values = mockRes;\n                if (typeof values['__typename'] !== 'string') {\n                    throw new Error(`Please return a __typename in \"${nullableType.name}\"`);\n                }\n                typeName = values['__typename'];\n            }\n            else if (typeof mock === 'object' && mock != null && typeof mock['__typename'] === 'function') {\n                const mockRes = mock['__typename']();\n                if (typeof mockRes !== 'string')\n                    throw new Error(`'__typename' returned by the mock for abstract type ${nullableType.name} is not a string`);\n                typeName = mockRes;\n            }\n            else {\n                throw new Error(`Please return a __typename in \"${nullableType.name}\"`);\n            }\n            const toInsert = {};\n            for (const fieldName in values) {\n                if (fieldName === '__typename')\n                    continue;\n                const fieldValue = values[fieldName];\n                toInsert[fieldName] = typeof fieldValue === 'function' ? fieldValue() : fieldValue;\n            }\n            return this.insert(typeName, toInsert);\n        }\n        else {\n            throw new Error(`${nullableType} not implemented`);\n        }\n    }\n    getFieldType(typeName, fieldName) {\n        if (fieldName === '__typename') {\n            return graphql.GraphQLString;\n        }\n        const type = this.getType(typeName);\n        const field = type.getFields()[fieldName];\n        if (!field) {\n            throw new Error(`${fieldName} does not exist on type ${typeName}`);\n        }\n        return field.type;\n    }\n    getType(typeName) {\n        const type = this.schema.getType(typeName);\n        if (!type || !(graphql.isObjectType(type) || graphql.isInterfaceType(type))) {\n            throw new Error(`${typeName} does not exist on schema or is not an object or interface`);\n        }\n        return type;\n    }\n    isKeyField(typeName, fieldName) {\n        return this.getKeyFieldName(typeName) === fieldName;\n    }\n    getKeyFieldName(typeName) {\n        var _a;\n        const typePolicyKeyField = (_a = this.typePolicies[typeName]) === null || _a === void 0 ? void 0 : _a.keyFieldName;\n        if (typePolicyKeyField !== undefined) {\n            if (typePolicyKeyField === false)\n                return null;\n            return typePolicyKeyField;\n        }\n        // How about common key field names?\n        const gqlType = this.getType(typeName);\n        for (const fieldName in gqlType.getFields()) {\n            if (defaultKeyFieldNames.includes(fieldName)) {\n                return fieldName;\n            }\n        }\n        return null;\n    }\n}\nconst getFieldNameInStore = (fieldName, fieldArgs) => {\n    if (!fieldArgs)\n        return fieldName;\n    if (typeof fieldArgs === 'string') {\n        return `${fieldName}:${fieldArgs}`;\n    }\n    // empty args\n    if (Object.keys(fieldArgs).length === 0) {\n        return fieldName;\n    }\n    return `${fieldName}:${stringify(fieldArgs)}`;\n};\nfunction assertIsDefined(value, message) {\n    if (value !== undefined && value !== null) {\n        return;\n    }\n    throw new Error(process.env['NODE_ENV'] === 'production' ? 'Invariant failed:' : `Invariant failed: ${message || ''}`);\n}\n/**\n * Will create `MockStore` for the given `schema`.\n *\n * A `MockStore` will generate mock values for the given schem when queried.\n *\n * It will stores generated mocks, so that, provided with same arguments\n * the returned values will be the same.\n *\n * Its API also allows to modify the stored values.\n *\n * Basic example:\n * ```ts\n * store.get('User', 1, 'name');\n * // > \"Hello World\"\n * store.set('User', 1, 'name', 'Alexandre');\n * store.get('User', 1, 'name');\n * // > \"Alexandre\"\n * ```\n *\n * The storage key will correspond to the \"key field\"\n * of the type. Field with name `id` or `_id` will be\n * by default considered as the key field for the type.\n * However, use `typePolicies` to precise the field to use\n * as key.\n */\nfunction createMockStore(options) {\n    return new MockStore(options);\n}\n\n// todo: add option to preserve resolver\n/**\n * Given a `schema` and a `MockStore`, returns an executable schema that\n * will use the provided `MockStore` to execute queries.\n *\n * ```ts\n * const schema = buildSchema(`\n *  type User {\n *    id: ID!\n *    name: String!\n *  }\n *  type Query {\n *    me: User!\n *  }\n * `)\n *\n * const store = createMockStore({ schema });\n * const mockedSchema = addMocksToSchema({ schema, store });\n * ```\n *\n *\n * If a `resolvers` parameter is passed, the query execution will use\n * the provided `resolvers` if, one exists, instead of the default mock\n * resolver.\n *\n *\n * ```ts\n * const schema = buildSchema(`\n *   type User {\n *     id: ID!\n *     name: String!\n *   }\n *   type Query {\n *     me: User!\n *   }\n *   type Mutation {\n *     setMyName(newName: String!): User!\n *   }\n * `)\n *\n * const store = createMockStore({ schema });\n * const mockedSchema = addMocksToSchema({\n *   schema,\n *   store,\n *   resolvers: {\n *     Mutation: {\n *       setMyName: (_, { newName }) => {\n *          const ref = store.get('Query', 'ROOT', 'viewer');\n *          store.set(ref, 'name', newName);\n *          return ref;\n *       }\n *     }\n *   }\n *  });\n * ```\n *\n *\n * `Query` and `Mutation` type will use `key` `'ROOT'`.\n */\nfunction addMocksToSchema({ schema: schema$1, store: maybeStore, mocks, typePolicies, resolvers: resolversOrFnResolvers, preserveResolvers = false, }) {\n    if (!schema$1) {\n        throw new Error('Must provide schema to mock');\n    }\n    if (!graphql.isSchema(schema$1)) {\n        throw new Error('Value at \"schema\" must be of type GraphQLSchema');\n    }\n    if (mocks && !isObject(mocks)) {\n        throw new Error('mocks must be of type Object');\n    }\n    const store = maybeStore ||\n        createMockStore({\n            schema: schema$1,\n            mocks,\n            typePolicies,\n        });\n    const resolvers = typeof resolversOrFnResolvers === 'function' ? resolversOrFnResolvers(store) : resolversOrFnResolvers;\n    const mockResolver = (source, args, contex, info) => {\n        const defaultResolvedValue = graphql.defaultFieldResolver(source, args, contex, info);\n        // priority to default resolved value\n        if (defaultResolvedValue !== undefined)\n            return defaultResolvedValue;\n        if (isRef(source)) {\n            return store.get({\n                typeName: source.$ref.typeName,\n                key: source.$ref.key,\n                fieldName: info.fieldName,\n                fieldArgs: args,\n            });\n        }\n        // we have to handle the root mutation, root query and root subscription types\n        // differently, because no resolver is called at the root\n        if (isRootType(info.parentType, info.schema)) {\n            return store.get({\n                typeName: info.parentType.name,\n                key: 'ROOT',\n                fieldName: info.fieldName,\n                fieldArgs: args,\n            });\n        }\n        return undefined;\n    };\n    const typeResolver = data => {\n        if (isRef(data)) {\n            return data.$ref.typeName;\n        }\n    };\n    const mockSubscriber = () => ({\n        [Symbol.asyncIterator]() {\n            return {\n                async next() {\n                    return {\n                        done: true,\n                        value: {},\n                    };\n                },\n            };\n        },\n    });\n    const schemaWithMocks = utils.mapSchema(schema$1, {\n        [utils.MapperKind.OBJECT_FIELD]: fieldConfig => {\n            const newFieldConfig = {\n                ...fieldConfig,\n            };\n            const oldResolver = fieldConfig.resolve;\n            if (!preserveResolvers || !oldResolver) {\n                newFieldConfig.resolve = mockResolver;\n            }\n            else {\n                newFieldConfig.resolve = async (rootObject, args, context, info) => {\n                    const [mockedValue, resolvedValue] = await Promise.all([\n                        mockResolver(rootObject, args, context, info),\n                        oldResolver(rootObject, args, context, info),\n                    ]);\n                    // In case we couldn't mock\n                    if (mockedValue instanceof Error) {\n                        // only if value was not resolved, populate the error.\n                        if (undefined === resolvedValue) {\n                            throw mockedValue;\n                        }\n                        return resolvedValue;\n                    }\n                    if (resolvedValue instanceof Date && mockedValue instanceof Date) {\n                        return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                    }\n                    if (isObject(mockedValue) && isObject(resolvedValue)) {\n                        // Object.assign() won't do here, as we need to all properties, including\n                        // the non-enumerable ones and defined using Object.defineProperty\n                        const emptyObject = Object.create(Object.getPrototypeOf(resolvedValue));\n                        return copyOwnProps(emptyObject, resolvedValue, mockedValue);\n                    }\n                    return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                };\n            }\n            const fieldSubscriber = fieldConfig.subscribe;\n            if (!preserveResolvers || !fieldSubscriber) {\n                newFieldConfig.subscribe = mockSubscriber;\n            }\n            else {\n                newFieldConfig.subscribe = async (rootObject, args, context, info) => {\n                    const [mockAsyncIterable, oldAsyncIterable] = await Promise.all([\n                        mockSubscriber(),\n                        fieldSubscriber(rootObject, args, context, info),\n                    ]);\n                    return oldAsyncIterable || mockAsyncIterable;\n                };\n            }\n            return newFieldConfig;\n        },\n        [utils.MapperKind.ABSTRACT_TYPE]: type => {\n            if (preserveResolvers && type.resolveType != null && type.resolveType.length) {\n                return;\n            }\n            if (graphql.isUnionType(type)) {\n                return new graphql.GraphQLUnionType({\n                    ...type.toConfig(),\n                    resolveType: typeResolver,\n                });\n            }\n            else {\n                return new graphql.GraphQLInterfaceType({\n                    ...type.toConfig(),\n                    resolveType: typeResolver,\n                });\n            }\n        },\n    });\n    return resolvers ? schema.addResolversToSchema(schemaWithMocks, resolvers) : schemaWithMocks;\n}\nconst isRootType = (type, schema) => {\n    const rootTypeNames = utils.getRootTypeNames(schema);\n    return rootTypeNames.has(type.name);\n};\n\n/**\n * A convenience wrapper on top of addMocksToSchema. It adds your mock resolvers\n * to your schema and returns a client that will correctly execute your query with\n * variables. Note: when executing queries from the returned server, context and\n * root will both equal `{}`.\n * @param schema The schema to which to add mocks. This can also be a set of type\n * definitions instead.\n * @param mocks The mocks to add to the schema.\n * @param preserveResolvers Set to `true` to prevent existing resolvers from being\n * overwritten to provide mock data. This can be used to mock some parts of the\n * server and not others.\n */\nfunction mockServer(schema$1, mocks, preserveResolvers = false) {\n    const mockedSchema = addMocksToSchema({\n        schema: graphql.isSchema(schema$1)\n            ? schema$1\n            : schema.makeExecutableSchema({\n                typeDefs: schema$1,\n            }),\n        mocks,\n        preserveResolvers,\n    });\n    return {\n        query: (query, vars) => graphql.graphql({\n            schema: mockedSchema,\n            source: query,\n            rootValue: {},\n            contextValue: {},\n            variableValues: vars,\n        }),\n    };\n}\n\nexports.MockList = MockList;\nexports.MockStore = MockStore;\nexports.addMocksToSchema = addMocksToSchema;\nexports.assertIsRef = assertIsRef;\nexports.createMockStore = createMockStore;\nexports.deepResolveMockList = deepResolveMockList;\nexports.defaultMocks = defaultMocks;\nexports.isMockList = isMockList;\nexports.isRecord = isRecord;\nexports.isRef = isRef;\nexports.mockServer = mockServer;\n", "/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=resolverMap.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=resolveObject.js.map", null, null, null, null, "function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n", "var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n", "module.exports = require('./lib/retry');", "// Packages\nvar retrier = require('retry');\n\nfunction retry(fn, opts) {\n  function run(resolve, reject) {\n    var options = opts || {};\n    var op;\n\n    // Default `randomize` to true\n    if (!('randomize' in options)) {\n      options.randomize = true;\n    }\n\n    op = retrier.operation(options);\n\n    // We allow the user to abort retrying\n    // this makes sense in the cases where\n    // knowledge is obtained that retrying\n    // would be futile (e.g.: auth errors)\n\n    function bail(err) {\n      reject(err || new Error('Aborted'));\n    }\n\n    function onError(err, num) {\n      if (err.bail) {\n        bail(err);\n        return;\n      }\n\n      if (!op.retry(err)) {\n        reject(op.mainError());\n      } else if (options.onRetry) {\n        options.onRetry(err, num);\n      }\n    }\n\n    function runAttempt(num) {\n      var val;\n\n      try {\n        val = fn(bail, num);\n      } catch (err) {\n        onError(err, num);\n        return;\n      }\n\n      Promise.resolve(val)\n        .then(resolve)\n        .catch(function catchIt(err) {\n          onError(err, num);\n        });\n    }\n\n    op.attempt(runAttempt);\n  }\n\n  return new Promise(run);\n}\n\nmodule.exports = retry;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, function(o) { return o.user; });\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n *\n * _.sortBy(users, 'user', function(o) {\n *   return Math.floor(o.age / 10);\n * });\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = sortBy;\n", null, null, null, null, null, null, "var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n", "var FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (bind ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n", "var FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar callBind = bind && bind.bind(call);\n\nmodule.exports = bind ? function (fn) {\n  return fn && callBind(call, fn);\n} : function (fn) {\n  return fn && function () {\n    return call.apply(fn, arguments);\n  };\n};\n", "// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = function (argument) {\n  return typeof argument == 'function';\n};\n", "module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n", "var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n", "var call = Function.prototype.call;\n\nmodule.exports = call.bind ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n", "'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n", "module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n", "var global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar Object = global.Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : Object(it);\n} : Object;\n", "var global = require('../internals/global');\n\nvar TypeError = global.TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n", "// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n", "var isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n", "module.exports = {};\n", "var path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n", "var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n", "var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n", "/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n", "/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n", "var global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Object = global.Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n", "var global = require('../internals/global');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  try {\n    return String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n", "var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a function');\n};\n", "var aCallable = require('../internals/a-callable');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable(func);\n};\n", "var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar TypeError = global.TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n", "module.exports = true;\n", "var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n", "var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n", "var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.19.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '\u00A9 2021 Denis Pushkarev (zloirock.ru)'\n});\n", "var global = require('../internals/global');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar Object = global.Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n", "var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n", "var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n", "var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n", "var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n", "var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : bind ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n", "var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar String = global.String;\nvar TypeError = global.TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw TypeError(String(argument) + ' is not an object');\n};\n", "var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar TypeError = global.TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n", "'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n  options.name        - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind timers to global for call from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && !targetPrototype[key]) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n", "var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n", "var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- safe\n  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n", "var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n", "var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n", "'use strict';\nvar global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar bind = require('../internals/function-bind-context');\n\nvar TypeError = global.TypeError;\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg) : false;\n  var element, elementLen;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        elementLen = lengthOfArrayLike(element);\n        targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n", "var global = require('../internals/global');\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Object = global.Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function (argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function (argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n    // we can't check .prototype since constructors produced by .bind haven't it\n  } return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n};\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n", "var global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n", "var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = lengthOfArrayLike(O);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));\n    return A;\n  }\n});\n", "module.exports = function () { /* empty */ };\n", "// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flat');\n", "var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn;\n", "require('../../modules/es.array.flat');\nrequire('../../modules/es.array.unscopables.flat');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('Array', 'flat');\n", "var parent = require('../../es/array/flat');\n\nmodule.exports = parent;\n", "var parent = require('../../stable/array/flat');\n\nmodule.exports = parent;\n", null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=resolverMap.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=resolveObject.js.map", null, null, "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/*\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/*\n * Long.js's Long class if available.\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/*\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/*\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/*\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/*\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/*\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/*\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/*\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Set up buffer utility according to the environment\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"@apollo/protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Trace = (function() {\n\n    /**\n     * Properties of a Trace.\n     * @exports ITrace\n     * @interface ITrace\n     * @property {google.protobuf.ITimestamp|null} [startTime] Trace startTime\n     * @property {google.protobuf.ITimestamp|null} [endTime] Trace endTime\n     * @property {number|null} [durationNs] Trace durationNs\n     * @property {Trace.INode|null} [root] Trace root\n     * @property {string|null} [signature] Trace signature\n     * @property {string|null} [unexecutedOperationBody] Trace unexecutedOperationBody\n     * @property {string|null} [unexecutedOperationName] Trace unexecutedOperationName\n     * @property {Trace.IDetails|null} [details] Trace details\n     * @property {string|null} [clientName] Trace clientName\n     * @property {string|null} [clientVersion] Trace clientVersion\n     * @property {string|null} [clientAddress] Trace clientAddress\n     * @property {string|null} [clientReferenceId] Trace clientReferenceId\n     * @property {Trace.IHTTP|null} [http] Trace http\n     * @property {Trace.ICachePolicy|null} [cachePolicy] Trace cachePolicy\n     * @property {Trace.IQueryPlanNode|null} [queryPlan] Trace queryPlan\n     * @property {boolean|null} [fullQueryCacheHit] Trace fullQueryCacheHit\n     * @property {boolean|null} [persistedQueryHit] Trace persistedQueryHit\n     * @property {boolean|null} [persistedQueryRegister] Trace persistedQueryRegister\n     * @property {boolean|null} [registeredOperation] Trace registeredOperation\n     * @property {boolean|null} [forbiddenOperation] Trace forbiddenOperation\n     */\n\n    /**\n     * Constructs a new Trace.\n     * @exports Trace\n     * @classdesc Represents a Trace.\n     * @implements ITrace\n     * @constructor\n     * @param {ITrace=} [properties] Properties to set\n     */\n    function Trace(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Trace startTime.\n     * @member {google.protobuf.ITimestamp|null|undefined} startTime\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.startTime = null;\n\n    /**\n     * Trace endTime.\n     * @member {google.protobuf.ITimestamp|null|undefined} endTime\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.endTime = null;\n\n    /**\n     * Trace durationNs.\n     * @member {number} durationNs\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.durationNs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Trace root.\n     * @member {Trace.INode|null|undefined} root\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.root = null;\n\n    /**\n     * Trace signature.\n     * @member {string} signature\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.signature = \"\";\n\n    /**\n     * Trace unexecutedOperationBody.\n     * @member {string} unexecutedOperationBody\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.unexecutedOperationBody = \"\";\n\n    /**\n     * Trace unexecutedOperationName.\n     * @member {string} unexecutedOperationName\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.unexecutedOperationName = \"\";\n\n    /**\n     * Trace details.\n     * @member {Trace.IDetails|null|undefined} details\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.details = null;\n\n    /**\n     * Trace clientName.\n     * @member {string} clientName\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.clientName = \"\";\n\n    /**\n     * Trace clientVersion.\n     * @member {string} clientVersion\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.clientVersion = \"\";\n\n    /**\n     * Trace clientAddress.\n     * @member {string} clientAddress\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.clientAddress = \"\";\n\n    /**\n     * Trace clientReferenceId.\n     * @member {string} clientReferenceId\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.clientReferenceId = \"\";\n\n    /**\n     * Trace http.\n     * @member {Trace.IHTTP|null|undefined} http\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.http = null;\n\n    /**\n     * Trace cachePolicy.\n     * @member {Trace.ICachePolicy|null|undefined} cachePolicy\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.cachePolicy = null;\n\n    /**\n     * Trace queryPlan.\n     * @member {Trace.IQueryPlanNode|null|undefined} queryPlan\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.queryPlan = null;\n\n    /**\n     * Trace fullQueryCacheHit.\n     * @member {boolean} fullQueryCacheHit\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.fullQueryCacheHit = false;\n\n    /**\n     * Trace persistedQueryHit.\n     * @member {boolean} persistedQueryHit\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.persistedQueryHit = false;\n\n    /**\n     * Trace persistedQueryRegister.\n     * @member {boolean} persistedQueryRegister\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.persistedQueryRegister = false;\n\n    /**\n     * Trace registeredOperation.\n     * @member {boolean} registeredOperation\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.registeredOperation = false;\n\n    /**\n     * Trace forbiddenOperation.\n     * @member {boolean} forbiddenOperation\n     * @memberof Trace\n     * @instance\n     */\n    Trace.prototype.forbiddenOperation = false;\n\n    /**\n     * Creates a new Trace instance using the specified properties.\n     * @function create\n     * @memberof Trace\n     * @static\n     * @param {ITrace=} [properties] Properties to set\n     * @returns {Trace} Trace instance\n     */\n    Trace.create = function create(properties) {\n        return new Trace(properties);\n    };\n\n    /**\n     * Encodes the specified Trace message. Does not implicitly {@link Trace.verify|verify} messages.\n     * @function encode\n     * @memberof Trace\n     * @static\n     * @param {ITrace} message Trace message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trace.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n            $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.startTime != null && Object.hasOwnProperty.call(message, \"startTime\"))\n            $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.details != null && Object.hasOwnProperty.call(message, \"details\"))\n            $root.Trace.Details.encode(message.details, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.clientName != null && Object.hasOwnProperty.call(message, \"clientName\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientName);\n        if (message.clientVersion != null && Object.hasOwnProperty.call(message, \"clientVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.clientVersion);\n        if (message.clientAddress != null && Object.hasOwnProperty.call(message, \"clientAddress\"))\n            writer.uint32(/* id 9, wireType 2 =*/74).string(message.clientAddress);\n        if (message.http != null && Object.hasOwnProperty.call(message, \"http\"))\n            $root.Trace.HTTP.encode(message.http, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.durationNs != null && Object.hasOwnProperty.call(message, \"durationNs\"))\n            writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.durationNs);\n        if (message.root != null && Object.hasOwnProperty.call(message, \"root\"))\n            $root.Trace.Node.encode(message.root, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.cachePolicy != null && Object.hasOwnProperty.call(message, \"cachePolicy\"))\n            $root.Trace.CachePolicy.encode(message.cachePolicy, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.signature != null && Object.hasOwnProperty.call(message, \"signature\"))\n            writer.uint32(/* id 19, wireType 2 =*/154).string(message.signature);\n        if (message.fullQueryCacheHit != null && Object.hasOwnProperty.call(message, \"fullQueryCacheHit\"))\n            writer.uint32(/* id 20, wireType 0 =*/160).bool(message.fullQueryCacheHit);\n        if (message.persistedQueryHit != null && Object.hasOwnProperty.call(message, \"persistedQueryHit\"))\n            writer.uint32(/* id 21, wireType 0 =*/168).bool(message.persistedQueryHit);\n        if (message.persistedQueryRegister != null && Object.hasOwnProperty.call(message, \"persistedQueryRegister\"))\n            writer.uint32(/* id 22, wireType 0 =*/176).bool(message.persistedQueryRegister);\n        if (message.clientReferenceId != null && Object.hasOwnProperty.call(message, \"clientReferenceId\"))\n            writer.uint32(/* id 23, wireType 2 =*/186).string(message.clientReferenceId);\n        if (message.registeredOperation != null && Object.hasOwnProperty.call(message, \"registeredOperation\"))\n            writer.uint32(/* id 24, wireType 0 =*/192).bool(message.registeredOperation);\n        if (message.forbiddenOperation != null && Object.hasOwnProperty.call(message, \"forbiddenOperation\"))\n            writer.uint32(/* id 25, wireType 0 =*/200).bool(message.forbiddenOperation);\n        if (message.queryPlan != null && Object.hasOwnProperty.call(message, \"queryPlan\"))\n            $root.Trace.QueryPlanNode.encode(message.queryPlan, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n        if (message.unexecutedOperationBody != null && Object.hasOwnProperty.call(message, \"unexecutedOperationBody\"))\n            writer.uint32(/* id 27, wireType 2 =*/218).string(message.unexecutedOperationBody);\n        if (message.unexecutedOperationName != null && Object.hasOwnProperty.call(message, \"unexecutedOperationName\"))\n            writer.uint32(/* id 28, wireType 2 =*/226).string(message.unexecutedOperationName);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Trace message, length delimited. Does not implicitly {@link Trace.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Trace\n     * @static\n     * @param {ITrace} message Trace message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trace.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Trace message from the specified reader or buffer.\n     * @function decode\n     * @memberof Trace\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Trace} Trace\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trace.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 4:\n                message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.durationNs = reader.uint64();\n                break;\n            case 14:\n                message.root = $root.Trace.Node.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.signature = reader.string();\n                break;\n            case 27:\n                message.unexecutedOperationBody = reader.string();\n                break;\n            case 28:\n                message.unexecutedOperationName = reader.string();\n                break;\n            case 6:\n                message.details = $root.Trace.Details.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.clientName = reader.string();\n                break;\n            case 8:\n                message.clientVersion = reader.string();\n                break;\n            case 9:\n                message.clientAddress = reader.string();\n                break;\n            case 23:\n                message.clientReferenceId = reader.string();\n                break;\n            case 10:\n                message.http = $root.Trace.HTTP.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.cachePolicy = $root.Trace.CachePolicy.decode(reader, reader.uint32());\n                break;\n            case 26:\n                message.queryPlan = $root.Trace.QueryPlanNode.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.fullQueryCacheHit = reader.bool();\n                break;\n            case 21:\n                message.persistedQueryHit = reader.bool();\n                break;\n            case 22:\n                message.persistedQueryRegister = reader.bool();\n                break;\n            case 24:\n                message.registeredOperation = reader.bool();\n                break;\n            case 25:\n                message.forbiddenOperation = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Trace message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Trace\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Trace} Trace\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trace.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Trace message.\n     * @function verify\n     * @memberof Trace\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Trace.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\")) {\n            var error = $root.google.protobuf.Timestamp.verify(message.startTime);\n            if (error)\n                return \"startTime.\" + error;\n        }\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\")) {\n            var error = $root.google.protobuf.Timestamp.verify(message.endTime);\n            if (error)\n                return \"endTime.\" + error;\n        }\n        if (message.durationNs != null && message.hasOwnProperty(\"durationNs\"))\n            if (!$util.isInteger(message.durationNs) && !(message.durationNs && $util.isInteger(message.durationNs.low) && $util.isInteger(message.durationNs.high)))\n                return \"durationNs: integer|Long expected\";\n        if (message.root != null && message.hasOwnProperty(\"root\")) {\n            var error = $root.Trace.Node.verify(message.root);\n            if (error)\n                return \"root.\" + error;\n        }\n        if (message.signature != null && message.hasOwnProperty(\"signature\"))\n            if (!$util.isString(message.signature))\n                return \"signature: string expected\";\n        if (message.unexecutedOperationBody != null && message.hasOwnProperty(\"unexecutedOperationBody\"))\n            if (!$util.isString(message.unexecutedOperationBody))\n                return \"unexecutedOperationBody: string expected\";\n        if (message.unexecutedOperationName != null && message.hasOwnProperty(\"unexecutedOperationName\"))\n            if (!$util.isString(message.unexecutedOperationName))\n                return \"unexecutedOperationName: string expected\";\n        if (message.details != null && message.hasOwnProperty(\"details\")) {\n            var error = $root.Trace.Details.verify(message.details);\n            if (error)\n                return \"details.\" + error;\n        }\n        if (message.clientName != null && message.hasOwnProperty(\"clientName\"))\n            if (!$util.isString(message.clientName))\n                return \"clientName: string expected\";\n        if (message.clientVersion != null && message.hasOwnProperty(\"clientVersion\"))\n            if (!$util.isString(message.clientVersion))\n                return \"clientVersion: string expected\";\n        if (message.clientAddress != null && message.hasOwnProperty(\"clientAddress\"))\n            if (!$util.isString(message.clientAddress))\n                return \"clientAddress: string expected\";\n        if (message.clientReferenceId != null && message.hasOwnProperty(\"clientReferenceId\"))\n            if (!$util.isString(message.clientReferenceId))\n                return \"clientReferenceId: string expected\";\n        if (message.http != null && message.hasOwnProperty(\"http\")) {\n            var error = $root.Trace.HTTP.verify(message.http);\n            if (error)\n                return \"http.\" + error;\n        }\n        if (message.cachePolicy != null && message.hasOwnProperty(\"cachePolicy\")) {\n            var error = $root.Trace.CachePolicy.verify(message.cachePolicy);\n            if (error)\n                return \"cachePolicy.\" + error;\n        }\n        if (message.queryPlan != null && message.hasOwnProperty(\"queryPlan\")) {\n            var error = $root.Trace.QueryPlanNode.verify(message.queryPlan);\n            if (error)\n                return \"queryPlan.\" + error;\n        }\n        if (message.fullQueryCacheHit != null && message.hasOwnProperty(\"fullQueryCacheHit\"))\n            if (typeof message.fullQueryCacheHit !== \"boolean\")\n                return \"fullQueryCacheHit: boolean expected\";\n        if (message.persistedQueryHit != null && message.hasOwnProperty(\"persistedQueryHit\"))\n            if (typeof message.persistedQueryHit !== \"boolean\")\n                return \"persistedQueryHit: boolean expected\";\n        if (message.persistedQueryRegister != null && message.hasOwnProperty(\"persistedQueryRegister\"))\n            if (typeof message.persistedQueryRegister !== \"boolean\")\n                return \"persistedQueryRegister: boolean expected\";\n        if (message.registeredOperation != null && message.hasOwnProperty(\"registeredOperation\"))\n            if (typeof message.registeredOperation !== \"boolean\")\n                return \"registeredOperation: boolean expected\";\n        if (message.forbiddenOperation != null && message.hasOwnProperty(\"forbiddenOperation\"))\n            if (typeof message.forbiddenOperation !== \"boolean\")\n                return \"forbiddenOperation: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a Trace message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Trace\n     * @static\n     * @param {Trace} message Trace\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Trace.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.endTime = null;\n            object.startTime = null;\n            object.details = null;\n            object.clientName = \"\";\n            object.clientVersion = \"\";\n            object.clientAddress = \"\";\n            object.http = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.durationNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.durationNs = options.longs === String ? \"0\" : 0;\n            object.root = null;\n            object.cachePolicy = null;\n            object.signature = \"\";\n            object.fullQueryCacheHit = false;\n            object.persistedQueryHit = false;\n            object.persistedQueryRegister = false;\n            object.clientReferenceId = \"\";\n            object.registeredOperation = false;\n            object.forbiddenOperation = false;\n            object.queryPlan = null;\n            object.unexecutedOperationBody = \"\";\n            object.unexecutedOperationName = \"\";\n        }\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);\n        if (message.details != null && message.hasOwnProperty(\"details\"))\n            object.details = $root.Trace.Details.toObject(message.details, options);\n        if (message.clientName != null && message.hasOwnProperty(\"clientName\"))\n            object.clientName = message.clientName;\n        if (message.clientVersion != null && message.hasOwnProperty(\"clientVersion\"))\n            object.clientVersion = message.clientVersion;\n        if (message.clientAddress != null && message.hasOwnProperty(\"clientAddress\"))\n            object.clientAddress = message.clientAddress;\n        if (message.http != null && message.hasOwnProperty(\"http\"))\n            object.http = $root.Trace.HTTP.toObject(message.http, options);\n        if (message.durationNs != null && message.hasOwnProperty(\"durationNs\"))\n            if (typeof message.durationNs === \"number\")\n                object.durationNs = options.longs === String ? String(message.durationNs) : message.durationNs;\n            else\n                object.durationNs = options.longs === String ? $util.Long.prototype.toString.call(message.durationNs) : options.longs === Number ? new $util.LongBits(message.durationNs.low >>> 0, message.durationNs.high >>> 0).toNumber(true) : message.durationNs;\n        if (message.root != null && message.hasOwnProperty(\"root\"))\n            object.root = $root.Trace.Node.toObject(message.root, options);\n        if (message.cachePolicy != null && message.hasOwnProperty(\"cachePolicy\"))\n            object.cachePolicy = $root.Trace.CachePolicy.toObject(message.cachePolicy, options);\n        if (message.signature != null && message.hasOwnProperty(\"signature\"))\n            object.signature = message.signature;\n        if (message.fullQueryCacheHit != null && message.hasOwnProperty(\"fullQueryCacheHit\"))\n            object.fullQueryCacheHit = message.fullQueryCacheHit;\n        if (message.persistedQueryHit != null && message.hasOwnProperty(\"persistedQueryHit\"))\n            object.persistedQueryHit = message.persistedQueryHit;\n        if (message.persistedQueryRegister != null && message.hasOwnProperty(\"persistedQueryRegister\"))\n            object.persistedQueryRegister = message.persistedQueryRegister;\n        if (message.clientReferenceId != null && message.hasOwnProperty(\"clientReferenceId\"))\n            object.clientReferenceId = message.clientReferenceId;\n        if (message.registeredOperation != null && message.hasOwnProperty(\"registeredOperation\"))\n            object.registeredOperation = message.registeredOperation;\n        if (message.forbiddenOperation != null && message.hasOwnProperty(\"forbiddenOperation\"))\n            object.forbiddenOperation = message.forbiddenOperation;\n        if (message.queryPlan != null && message.hasOwnProperty(\"queryPlan\"))\n            object.queryPlan = $root.Trace.QueryPlanNode.toObject(message.queryPlan, options);\n        if (message.unexecutedOperationBody != null && message.hasOwnProperty(\"unexecutedOperationBody\"))\n            object.unexecutedOperationBody = message.unexecutedOperationBody;\n        if (message.unexecutedOperationName != null && message.hasOwnProperty(\"unexecutedOperationName\"))\n            object.unexecutedOperationName = message.unexecutedOperationName;\n        return object;\n    };\n\n    /**\n     * Converts this Trace to JSON.\n     * @function toJSON\n     * @memberof Trace\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Trace.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    Trace.CachePolicy = (function() {\n\n        /**\n         * Properties of a CachePolicy.\n         * @memberof Trace\n         * @interface ICachePolicy\n         * @property {Trace.CachePolicy.Scope|null} [scope] CachePolicy scope\n         * @property {number|null} [maxAgeNs] CachePolicy maxAgeNs\n         */\n\n        /**\n         * Constructs a new CachePolicy.\n         * @memberof Trace\n         * @classdesc Represents a CachePolicy.\n         * @implements ICachePolicy\n         * @constructor\n         * @param {Trace.ICachePolicy=} [properties] Properties to set\n         */\n        function CachePolicy(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CachePolicy scope.\n         * @member {Trace.CachePolicy.Scope} scope\n         * @memberof Trace.CachePolicy\n         * @instance\n         */\n        CachePolicy.prototype.scope = 0;\n\n        /**\n         * CachePolicy maxAgeNs.\n         * @member {number} maxAgeNs\n         * @memberof Trace.CachePolicy\n         * @instance\n         */\n        CachePolicy.prototype.maxAgeNs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new CachePolicy instance using the specified properties.\n         * @function create\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {Trace.ICachePolicy=} [properties] Properties to set\n         * @returns {Trace.CachePolicy} CachePolicy instance\n         */\n        CachePolicy.create = function create(properties) {\n            return new CachePolicy(properties);\n        };\n\n        /**\n         * Encodes the specified CachePolicy message. Does not implicitly {@link Trace.CachePolicy.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {Trace.ICachePolicy} message CachePolicy message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CachePolicy.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.scope != null && Object.hasOwnProperty.call(message, \"scope\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scope);\n            if (message.maxAgeNs != null && Object.hasOwnProperty.call(message, \"maxAgeNs\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.maxAgeNs);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CachePolicy message, length delimited. Does not implicitly {@link Trace.CachePolicy.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {Trace.ICachePolicy} message CachePolicy message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CachePolicy.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CachePolicy message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.CachePolicy} CachePolicy\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CachePolicy.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.CachePolicy();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.scope = reader.int32();\n                    break;\n                case 2:\n                    message.maxAgeNs = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CachePolicy message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.CachePolicy} CachePolicy\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CachePolicy.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CachePolicy message.\n         * @function verify\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CachePolicy.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.scope != null && message.hasOwnProperty(\"scope\"))\n                switch (message.scope) {\n                default:\n                    return \"scope: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                    break;\n                }\n            if (message.maxAgeNs != null && message.hasOwnProperty(\"maxAgeNs\"))\n                if (!$util.isInteger(message.maxAgeNs) && !(message.maxAgeNs && $util.isInteger(message.maxAgeNs.low) && $util.isInteger(message.maxAgeNs.high)))\n                    return \"maxAgeNs: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a CachePolicy message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.CachePolicy\n         * @static\n         * @param {Trace.CachePolicy} message CachePolicy\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CachePolicy.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.scope = options.enums === String ? \"UNKNOWN\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.maxAgeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.maxAgeNs = options.longs === String ? \"0\" : 0;\n            }\n            if (message.scope != null && message.hasOwnProperty(\"scope\"))\n                object.scope = options.enums === String ? $root.Trace.CachePolicy.Scope[message.scope] : message.scope;\n            if (message.maxAgeNs != null && message.hasOwnProperty(\"maxAgeNs\"))\n                if (typeof message.maxAgeNs === \"number\")\n                    object.maxAgeNs = options.longs === String ? String(message.maxAgeNs) : message.maxAgeNs;\n                else\n                    object.maxAgeNs = options.longs === String ? $util.Long.prototype.toString.call(message.maxAgeNs) : options.longs === Number ? new $util.LongBits(message.maxAgeNs.low >>> 0, message.maxAgeNs.high >>> 0).toNumber() : message.maxAgeNs;\n            return object;\n        };\n\n        /**\n         * Converts this CachePolicy to JSON.\n         * @function toJSON\n         * @memberof Trace.CachePolicy\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CachePolicy.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Scope enum.\n         * @name Trace.CachePolicy.Scope\n         * @enum {string}\n         * @property {number} UNKNOWN=0 UNKNOWN value\n         * @property {number} PUBLIC=1 PUBLIC value\n         * @property {number} PRIVATE=2 PRIVATE value\n         */\n        CachePolicy.Scope = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNKNOWN\"] = 0;\n            values[valuesById[1] = \"PUBLIC\"] = 1;\n            values[valuesById[2] = \"PRIVATE\"] = 2;\n            return values;\n        })();\n\n        return CachePolicy;\n    })();\n\n    Trace.Details = (function() {\n\n        /**\n         * Properties of a Details.\n         * @memberof Trace\n         * @interface IDetails\n         * @property {Object.<string,string>|null} [variablesJson] Details variablesJson\n         * @property {string|null} [operationName] Details operationName\n         */\n\n        /**\n         * Constructs a new Details.\n         * @memberof Trace\n         * @classdesc Represents a Details.\n         * @implements IDetails\n         * @constructor\n         * @param {Trace.IDetails=} [properties] Properties to set\n         */\n        function Details(properties) {\n            this.variablesJson = {};\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Details variablesJson.\n         * @member {Object.<string,string>} variablesJson\n         * @memberof Trace.Details\n         * @instance\n         */\n        Details.prototype.variablesJson = $util.emptyObject;\n\n        /**\n         * Details operationName.\n         * @member {string} operationName\n         * @memberof Trace.Details\n         * @instance\n         */\n        Details.prototype.operationName = \"\";\n\n        /**\n         * Creates a new Details instance using the specified properties.\n         * @function create\n         * @memberof Trace.Details\n         * @static\n         * @param {Trace.IDetails=} [properties] Properties to set\n         * @returns {Trace.Details} Details instance\n         */\n        Details.create = function create(properties) {\n            return new Details(properties);\n        };\n\n        /**\n         * Encodes the specified Details message. Does not implicitly {@link Trace.Details.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.Details\n         * @static\n         * @param {Trace.IDetails} message Details message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Details.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.operationName != null && Object.hasOwnProperty.call(message, \"operationName\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.operationName);\n            if (message.variablesJson != null && Object.hasOwnProperty.call(message, \"variablesJson\"))\n                for (var keys = Object.keys(message.variablesJson), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.variablesJson[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Details message, length delimited. Does not implicitly {@link Trace.Details.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.Details\n         * @static\n         * @param {Trace.IDetails} message Details message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Details.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Details message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.Details\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.Details} Details\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Details.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.Details(), key;\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 4:\n                    reader.skip().pos++;\n                    if (message.variablesJson === $util.emptyObject)\n                        message.variablesJson = {};\n                    key = reader.string();\n                    reader.pos++;\n                    message.variablesJson[key] = reader.string();\n                    break;\n                case 3:\n                    message.operationName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Details message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.Details\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.Details} Details\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Details.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Details message.\n         * @function verify\n         * @memberof Trace.Details\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Details.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.variablesJson != null && message.hasOwnProperty(\"variablesJson\")) {\n                if (!$util.isObject(message.variablesJson))\n                    return \"variablesJson: object expected\";\n                var key = Object.keys(message.variablesJson);\n                for (var i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.variablesJson[key[i]]))\n                        return \"variablesJson: string{k:string} expected\";\n            }\n            if (message.operationName != null && message.hasOwnProperty(\"operationName\"))\n                if (!$util.isString(message.operationName))\n                    return \"operationName: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a Details message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.Details\n         * @static\n         * @param {Trace.Details} message Details\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Details.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.objects || options.defaults)\n                object.variablesJson = {};\n            if (options.defaults)\n                object.operationName = \"\";\n            if (message.operationName != null && message.hasOwnProperty(\"operationName\"))\n                object.operationName = message.operationName;\n            var keys2;\n            if (message.variablesJson && (keys2 = Object.keys(message.variablesJson)).length) {\n                object.variablesJson = {};\n                for (var j = 0; j < keys2.length; ++j)\n                    object.variablesJson[keys2[j]] = message.variablesJson[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this Details to JSON.\n         * @function toJSON\n         * @memberof Trace.Details\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Details.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Details;\n    })();\n\n    Trace.Error = (function() {\n\n        /**\n         * Properties of an Error.\n         * @memberof Trace\n         * @interface IError\n         * @property {string|null} [message] Error message\n         * @property {Array.<Trace.ILocation>|null} [location] Error location\n         * @property {number|null} [timeNs] Error timeNs\n         * @property {string|null} [json] Error json\n         */\n\n        /**\n         * Constructs a new Error.\n         * @memberof Trace\n         * @classdesc Represents an Error.\n         * @implements IError\n         * @constructor\n         * @param {Trace.IError=} [properties] Properties to set\n         */\n        function Error(properties) {\n            this.location = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Error message.\n         * @member {string} message\n         * @memberof Trace.Error\n         * @instance\n         */\n        Error.prototype.message = \"\";\n\n        /**\n         * Error location.\n         * @member {Array.<Trace.ILocation>} location\n         * @memberof Trace.Error\n         * @instance\n         */\n        Error.prototype.location = $util.emptyArray;\n\n        /**\n         * Error timeNs.\n         * @member {number} timeNs\n         * @memberof Trace.Error\n         * @instance\n         */\n        Error.prototype.timeNs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * Error json.\n         * @member {string} json\n         * @memberof Trace.Error\n         * @instance\n         */\n        Error.prototype.json = \"\";\n\n        /**\n         * Creates a new Error instance using the specified properties.\n         * @function create\n         * @memberof Trace.Error\n         * @static\n         * @param {Trace.IError=} [properties] Properties to set\n         * @returns {Trace.Error} Error instance\n         */\n        Error.create = function create(properties) {\n            return new Error(properties);\n        };\n\n        /**\n         * Encodes the specified Error message. Does not implicitly {@link Trace.Error.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.Error\n         * @static\n         * @param {Trace.IError} message Error message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Error.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.message != null && Object.hasOwnProperty.call(message, \"message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);\n            if (message.location != null && message.location.length)\n                for (var i = 0; i < message.location.length; ++i)\n                    $root.Trace.Location.encode(message.location[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.timeNs != null && Object.hasOwnProperty.call(message, \"timeNs\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.timeNs);\n            if (message.json != null && Object.hasOwnProperty.call(message, \"json\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.json);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Error message, length delimited. Does not implicitly {@link Trace.Error.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.Error\n         * @static\n         * @param {Trace.IError} message Error message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Error.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an Error message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.Error\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.Error} Error\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Error.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.Error();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                case 2:\n                    if (!(message.location && message.location.length))\n                        message.location = [];\n                    message.location.push($root.Trace.Location.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.timeNs = reader.uint64();\n                    break;\n                case 4:\n                    message.json = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an Error message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.Error\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.Error} Error\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Error.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an Error message.\n         * @function verify\n         * @memberof Trace.Error\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Error.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.message != null && message.hasOwnProperty(\"message\"))\n                if (!$util.isString(message.message))\n                    return \"message: string expected\";\n            if (message.location != null && message.hasOwnProperty(\"location\")) {\n                if (!Array.isArray(message.location))\n                    return \"location: array expected\";\n                for (var i = 0; i < message.location.length; ++i) {\n                    var error = $root.Trace.Location.verify(message.location[i]);\n                    if (error)\n                        return \"location.\" + error;\n                }\n            }\n            if (message.timeNs != null && message.hasOwnProperty(\"timeNs\"))\n                if (!$util.isInteger(message.timeNs) && !(message.timeNs && $util.isInteger(message.timeNs.low) && $util.isInteger(message.timeNs.high)))\n                    return \"timeNs: integer|Long expected\";\n            if (message.json != null && message.hasOwnProperty(\"json\"))\n                if (!$util.isString(message.json))\n                    return \"json: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a plain object from an Error message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.Error\n         * @static\n         * @param {Trace.Error} message Error\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Error.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.location = [];\n            if (options.defaults) {\n                object.message = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.timeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.timeNs = options.longs === String ? \"0\" : 0;\n                object.json = \"\";\n            }\n            if (message.message != null && message.hasOwnProperty(\"message\"))\n                object.message = message.message;\n            if (message.location && message.location.length) {\n                object.location = [];\n                for (var j = 0; j < message.location.length; ++j)\n                    object.location[j] = $root.Trace.Location.toObject(message.location[j], options);\n            }\n            if (message.timeNs != null && message.hasOwnProperty(\"timeNs\"))\n                if (typeof message.timeNs === \"number\")\n                    object.timeNs = options.longs === String ? String(message.timeNs) : message.timeNs;\n                else\n                    object.timeNs = options.longs === String ? $util.Long.prototype.toString.call(message.timeNs) : options.longs === Number ? new $util.LongBits(message.timeNs.low >>> 0, message.timeNs.high >>> 0).toNumber(true) : message.timeNs;\n            if (message.json != null && message.hasOwnProperty(\"json\"))\n                object.json = message.json;\n            return object;\n        };\n\n        /**\n         * Converts this Error to JSON.\n         * @function toJSON\n         * @memberof Trace.Error\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Error.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Error;\n    })();\n\n    Trace.HTTP = (function() {\n\n        /**\n         * Properties of a HTTP.\n         * @memberof Trace\n         * @interface IHTTP\n         * @property {Trace.HTTP.Method|null} [method] HTTP method\n         * @property {string|null} [host] HTTP host\n         * @property {string|null} [path] HTTP path\n         * @property {Object.<string,Trace.HTTP.IValues>|null} [requestHeaders] HTTP requestHeaders\n         * @property {Object.<string,Trace.HTTP.IValues>|null} [responseHeaders] HTTP responseHeaders\n         * @property {number|null} [statusCode] HTTP statusCode\n         * @property {boolean|null} [secure] HTTP secure\n         * @property {string|null} [protocol] HTTP protocol\n         */\n\n        /**\n         * Constructs a new HTTP.\n         * @memberof Trace\n         * @classdesc Represents a HTTP.\n         * @implements IHTTP\n         * @constructor\n         * @param {Trace.IHTTP=} [properties] Properties to set\n         */\n        function HTTP(properties) {\n            this.requestHeaders = {};\n            this.responseHeaders = {};\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * HTTP method.\n         * @member {Trace.HTTP.Method} method\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.method = 0;\n\n        /**\n         * HTTP host.\n         * @member {string} host\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.host = \"\";\n\n        /**\n         * HTTP path.\n         * @member {string} path\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.path = \"\";\n\n        /**\n         * HTTP requestHeaders.\n         * @member {Object.<string,Trace.HTTP.IValues>} requestHeaders\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.requestHeaders = $util.emptyObject;\n\n        /**\n         * HTTP responseHeaders.\n         * @member {Object.<string,Trace.HTTP.IValues>} responseHeaders\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.responseHeaders = $util.emptyObject;\n\n        /**\n         * HTTP statusCode.\n         * @member {number} statusCode\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.statusCode = 0;\n\n        /**\n         * HTTP secure.\n         * @member {boolean} secure\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.secure = false;\n\n        /**\n         * HTTP protocol.\n         * @member {string} protocol\n         * @memberof Trace.HTTP\n         * @instance\n         */\n        HTTP.prototype.protocol = \"\";\n\n        /**\n         * Creates a new HTTP instance using the specified properties.\n         * @function create\n         * @memberof Trace.HTTP\n         * @static\n         * @param {Trace.IHTTP=} [properties] Properties to set\n         * @returns {Trace.HTTP} HTTP instance\n         */\n        HTTP.create = function create(properties) {\n            return new HTTP(properties);\n        };\n\n        /**\n         * Encodes the specified HTTP message. Does not implicitly {@link Trace.HTTP.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.HTTP\n         * @static\n         * @param {Trace.IHTTP} message HTTP message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HTTP.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.method != null && Object.hasOwnProperty.call(message, \"method\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.method);\n            if (message.host != null && Object.hasOwnProperty.call(message, \"host\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.host);\n            if (message.path != null && Object.hasOwnProperty.call(message, \"path\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.path);\n            if (message.requestHeaders != null && Object.hasOwnProperty.call(message, \"requestHeaders\"))\n                for (var keys = Object.keys(message.requestHeaders), i = 0; i < keys.length; ++i) {\n                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                    $root.Trace.HTTP.Values.encode(message.requestHeaders[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                }\n            if (message.responseHeaders != null && Object.hasOwnProperty.call(message, \"responseHeaders\"))\n                for (var keys = Object.keys(message.responseHeaders), i = 0; i < keys.length; ++i) {\n                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                    $root.Trace.HTTP.Values.encode(message.responseHeaders[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                }\n            if (message.statusCode != null && Object.hasOwnProperty.call(message, \"statusCode\"))\n                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.statusCode);\n            if (message.secure != null && Object.hasOwnProperty.call(message, \"secure\"))\n                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.secure);\n            if (message.protocol != null && Object.hasOwnProperty.call(message, \"protocol\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).string(message.protocol);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified HTTP message, length delimited. Does not implicitly {@link Trace.HTTP.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.HTTP\n         * @static\n         * @param {Trace.IHTTP} message HTTP message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HTTP.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HTTP message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.HTTP\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.HTTP} HTTP\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HTTP.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.HTTP(), key;\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.method = reader.int32();\n                    break;\n                case 2:\n                    message.host = reader.string();\n                    break;\n                case 3:\n                    message.path = reader.string();\n                    break;\n                case 4:\n                    reader.skip().pos++;\n                    if (message.requestHeaders === $util.emptyObject)\n                        message.requestHeaders = {};\n                    key = reader.string();\n                    reader.pos++;\n                    message.requestHeaders[key] = $root.Trace.HTTP.Values.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    reader.skip().pos++;\n                    if (message.responseHeaders === $util.emptyObject)\n                        message.responseHeaders = {};\n                    key = reader.string();\n                    reader.pos++;\n                    message.responseHeaders[key] = $root.Trace.HTTP.Values.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.statusCode = reader.uint32();\n                    break;\n                case 8:\n                    message.secure = reader.bool();\n                    break;\n                case 9:\n                    message.protocol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a HTTP message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.HTTP\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.HTTP} HTTP\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HTTP.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a HTTP message.\n         * @function verify\n         * @memberof Trace.HTTP\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        HTTP.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.method != null && message.hasOwnProperty(\"method\"))\n                switch (message.method) {\n                default:\n                    return \"method: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                    break;\n                }\n            if (message.host != null && message.hasOwnProperty(\"host\"))\n                if (!$util.isString(message.host))\n                    return \"host: string expected\";\n            if (message.path != null && message.hasOwnProperty(\"path\"))\n                if (!$util.isString(message.path))\n                    return \"path: string expected\";\n            if (message.requestHeaders != null && message.hasOwnProperty(\"requestHeaders\")) {\n                if (!$util.isObject(message.requestHeaders))\n                    return \"requestHeaders: object expected\";\n                var key = Object.keys(message.requestHeaders);\n                for (var i = 0; i < key.length; ++i) {\n                    var error = $root.Trace.HTTP.Values.verify(message.requestHeaders[key[i]]);\n                    if (error)\n                        return \"requestHeaders.\" + error;\n                }\n            }\n            if (message.responseHeaders != null && message.hasOwnProperty(\"responseHeaders\")) {\n                if (!$util.isObject(message.responseHeaders))\n                    return \"responseHeaders: object expected\";\n                var key = Object.keys(message.responseHeaders);\n                for (var i = 0; i < key.length; ++i) {\n                    var error = $root.Trace.HTTP.Values.verify(message.responseHeaders[key[i]]);\n                    if (error)\n                        return \"responseHeaders.\" + error;\n                }\n            }\n            if (message.statusCode != null && message.hasOwnProperty(\"statusCode\"))\n                if (!$util.isInteger(message.statusCode))\n                    return \"statusCode: integer expected\";\n            if (message.secure != null && message.hasOwnProperty(\"secure\"))\n                if (typeof message.secure !== \"boolean\")\n                    return \"secure: boolean expected\";\n            if (message.protocol != null && message.hasOwnProperty(\"protocol\"))\n                if (!$util.isString(message.protocol))\n                    return \"protocol: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a HTTP message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.HTTP\n         * @static\n         * @param {Trace.HTTP} message HTTP\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        HTTP.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.objects || options.defaults) {\n                object.requestHeaders = {};\n                object.responseHeaders = {};\n            }\n            if (options.defaults) {\n                object.method = options.enums === String ? \"UNKNOWN\" : 0;\n                object.host = \"\";\n                object.path = \"\";\n                object.statusCode = 0;\n                object.secure = false;\n                object.protocol = \"\";\n            }\n            if (message.method != null && message.hasOwnProperty(\"method\"))\n                object.method = options.enums === String ? $root.Trace.HTTP.Method[message.method] : message.method;\n            if (message.host != null && message.hasOwnProperty(\"host\"))\n                object.host = message.host;\n            if (message.path != null && message.hasOwnProperty(\"path\"))\n                object.path = message.path;\n            var keys2;\n            if (message.requestHeaders && (keys2 = Object.keys(message.requestHeaders)).length) {\n                object.requestHeaders = {};\n                for (var j = 0; j < keys2.length; ++j)\n                    object.requestHeaders[keys2[j]] = $root.Trace.HTTP.Values.toObject(message.requestHeaders[keys2[j]], options);\n            }\n            if (message.responseHeaders && (keys2 = Object.keys(message.responseHeaders)).length) {\n                object.responseHeaders = {};\n                for (var j = 0; j < keys2.length; ++j)\n                    object.responseHeaders[keys2[j]] = $root.Trace.HTTP.Values.toObject(message.responseHeaders[keys2[j]], options);\n            }\n            if (message.statusCode != null && message.hasOwnProperty(\"statusCode\"))\n                object.statusCode = message.statusCode;\n            if (message.secure != null && message.hasOwnProperty(\"secure\"))\n                object.secure = message.secure;\n            if (message.protocol != null && message.hasOwnProperty(\"protocol\"))\n                object.protocol = message.protocol;\n            return object;\n        };\n\n        /**\n         * Converts this HTTP to JSON.\n         * @function toJSON\n         * @memberof Trace.HTTP\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        HTTP.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        HTTP.Values = (function() {\n\n            /**\n             * Properties of a Values.\n             * @memberof Trace.HTTP\n             * @interface IValues\n             * @property {Array.<string>|null} [value] Values value\n             */\n\n            /**\n             * Constructs a new Values.\n             * @memberof Trace.HTTP\n             * @classdesc Represents a Values.\n             * @implements IValues\n             * @constructor\n             * @param {Trace.HTTP.IValues=} [properties] Properties to set\n             */\n            function Values(properties) {\n                this.value = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Values value.\n             * @member {Array.<string>} value\n             * @memberof Trace.HTTP.Values\n             * @instance\n             */\n            Values.prototype.value = $util.emptyArray;\n\n            /**\n             * Creates a new Values instance using the specified properties.\n             * @function create\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {Trace.HTTP.IValues=} [properties] Properties to set\n             * @returns {Trace.HTTP.Values} Values instance\n             */\n            Values.create = function create(properties) {\n                return new Values(properties);\n            };\n\n            /**\n             * Encodes the specified Values message. Does not implicitly {@link Trace.HTTP.Values.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {Trace.HTTP.IValues} message Values message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Values.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.value != null && message.value.length)\n                    for (var i = 0; i < message.value.length; ++i)\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value[i]);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Values message, length delimited. Does not implicitly {@link Trace.HTTP.Values.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {Trace.HTTP.IValues} message Values message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Values.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Values message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.HTTP.Values} Values\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Values.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.HTTP.Values();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.value && message.value.length))\n                            message.value = [];\n                        message.value.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Values message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.HTTP.Values} Values\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Values.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Values message.\n             * @function verify\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Values.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.value != null && message.hasOwnProperty(\"value\")) {\n                    if (!Array.isArray(message.value))\n                        return \"value: array expected\";\n                    for (var i = 0; i < message.value.length; ++i)\n                        if (!$util.isString(message.value[i]))\n                            return \"value: string[] expected\";\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a Values message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.HTTP.Values\n             * @static\n             * @param {Trace.HTTP.Values} message Values\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Values.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.value = [];\n                if (message.value && message.value.length) {\n                    object.value = [];\n                    for (var j = 0; j < message.value.length; ++j)\n                        object.value[j] = message.value[j];\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Values to JSON.\n             * @function toJSON\n             * @memberof Trace.HTTP.Values\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Values.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Values;\n        })();\n\n        /**\n         * Method enum.\n         * @name Trace.HTTP.Method\n         * @enum {string}\n         * @property {number} UNKNOWN=0 UNKNOWN value\n         * @property {number} OPTIONS=1 OPTIONS value\n         * @property {number} GET=2 GET value\n         * @property {number} HEAD=3 HEAD value\n         * @property {number} POST=4 POST value\n         * @property {number} PUT=5 PUT value\n         * @property {number} DELETE=6 DELETE value\n         * @property {number} TRACE=7 TRACE value\n         * @property {number} CONNECT=8 CONNECT value\n         * @property {number} PATCH=9 PATCH value\n         */\n        HTTP.Method = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNKNOWN\"] = 0;\n            values[valuesById[1] = \"OPTIONS\"] = 1;\n            values[valuesById[2] = \"GET\"] = 2;\n            values[valuesById[3] = \"HEAD\"] = 3;\n            values[valuesById[4] = \"POST\"] = 4;\n            values[valuesById[5] = \"PUT\"] = 5;\n            values[valuesById[6] = \"DELETE\"] = 6;\n            values[valuesById[7] = \"TRACE\"] = 7;\n            values[valuesById[8] = \"CONNECT\"] = 8;\n            values[valuesById[9] = \"PATCH\"] = 9;\n            return values;\n        })();\n\n        return HTTP;\n    })();\n\n    Trace.Location = (function() {\n\n        /**\n         * Properties of a Location.\n         * @memberof Trace\n         * @interface ILocation\n         * @property {number|null} [line] Location line\n         * @property {number|null} [column] Location column\n         */\n\n        /**\n         * Constructs a new Location.\n         * @memberof Trace\n         * @classdesc Represents a Location.\n         * @implements ILocation\n         * @constructor\n         * @param {Trace.ILocation=} [properties] Properties to set\n         */\n        function Location(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Location line.\n         * @member {number} line\n         * @memberof Trace.Location\n         * @instance\n         */\n        Location.prototype.line = 0;\n\n        /**\n         * Location column.\n         * @member {number} column\n         * @memberof Trace.Location\n         * @instance\n         */\n        Location.prototype.column = 0;\n\n        /**\n         * Creates a new Location instance using the specified properties.\n         * @function create\n         * @memberof Trace.Location\n         * @static\n         * @param {Trace.ILocation=} [properties] Properties to set\n         * @returns {Trace.Location} Location instance\n         */\n        Location.create = function create(properties) {\n            return new Location(properties);\n        };\n\n        /**\n         * Encodes the specified Location message. Does not implicitly {@link Trace.Location.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.Location\n         * @static\n         * @param {Trace.ILocation} message Location message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Location.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.line != null && Object.hasOwnProperty.call(message, \"line\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.line);\n            if (message.column != null && Object.hasOwnProperty.call(message, \"column\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.column);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Location message, length delimited. Does not implicitly {@link Trace.Location.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.Location\n         * @static\n         * @param {Trace.ILocation} message Location message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Location.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Location message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.Location\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.Location} Location\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Location.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.Location();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.line = reader.uint32();\n                    break;\n                case 2:\n                    message.column = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Location message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.Location\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.Location} Location\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Location.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Location message.\n         * @function verify\n         * @memberof Trace.Location\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Location.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.line != null && message.hasOwnProperty(\"line\"))\n                if (!$util.isInteger(message.line))\n                    return \"line: integer expected\";\n            if (message.column != null && message.hasOwnProperty(\"column\"))\n                if (!$util.isInteger(message.column))\n                    return \"column: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a Location message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.Location\n         * @static\n         * @param {Trace.Location} message Location\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Location.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.line = 0;\n                object.column = 0;\n            }\n            if (message.line != null && message.hasOwnProperty(\"line\"))\n                object.line = message.line;\n            if (message.column != null && message.hasOwnProperty(\"column\"))\n                object.column = message.column;\n            return object;\n        };\n\n        /**\n         * Converts this Location to JSON.\n         * @function toJSON\n         * @memberof Trace.Location\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Location.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Location;\n    })();\n\n    Trace.Node = (function() {\n\n        /**\n         * Properties of a Node.\n         * @memberof Trace\n         * @interface INode\n         * @property {string|null} [responseName] Node responseName\n         * @property {number|null} [index] Node index\n         * @property {string|null} [originalFieldName] Node originalFieldName\n         * @property {string|null} [type] Node type\n         * @property {string|null} [parentType] Node parentType\n         * @property {Trace.ICachePolicy|null} [cachePolicy] Node cachePolicy\n         * @property {number|null} [startTime] Node startTime\n         * @property {number|null} [endTime] Node endTime\n         * @property {Array.<Trace.IError>|null} [error] Node error\n         * @property {Array.<Trace.INode>|null} [child] Node child\n         */\n\n        /**\n         * Constructs a new Node.\n         * @memberof Trace\n         * @classdesc Represents a Node.\n         * @implements INode\n         * @constructor\n         * @param {Trace.INode=} [properties] Properties to set\n         */\n        function Node(properties) {\n            this.error = [];\n            this.child = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Node responseName.\n         * @member {string} responseName\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.responseName = \"\";\n\n        /**\n         * Node index.\n         * @member {number} index\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.index = 0;\n\n        /**\n         * Node originalFieldName.\n         * @member {string} originalFieldName\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.originalFieldName = \"\";\n\n        /**\n         * Node type.\n         * @member {string} type\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.type = \"\";\n\n        /**\n         * Node parentType.\n         * @member {string} parentType\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.parentType = \"\";\n\n        /**\n         * Node cachePolicy.\n         * @member {Trace.ICachePolicy|null|undefined} cachePolicy\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.cachePolicy = null;\n\n        /**\n         * Node startTime.\n         * @member {number} startTime\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * Node endTime.\n         * @member {number} endTime\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * Node error.\n         * @member {Array.<Trace.IError>} error\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.error = $util.emptyArray;\n\n        /**\n         * Node child.\n         * @member {Array.<Trace.INode>} child\n         * @memberof Trace.Node\n         * @instance\n         */\n        Node.prototype.child = $util.emptyArray;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * Node id.\n         * @member {\"responseName\"|\"index\"|undefined} id\n         * @memberof Trace.Node\n         * @instance\n         */\n        Object.defineProperty(Node.prototype, \"id\", {\n            get: $util.oneOfGetter($oneOfFields = [\"responseName\", \"index\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Node instance using the specified properties.\n         * @function create\n         * @memberof Trace.Node\n         * @static\n         * @param {Trace.INode=} [properties] Properties to set\n         * @returns {Trace.Node} Node instance\n         */\n        Node.create = function create(properties) {\n            return new Node(properties);\n        };\n\n        /**\n         * Encodes the specified Node message. Does not implicitly {@link Trace.Node.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.Node\n         * @static\n         * @param {Trace.INode} message Node message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Node.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.responseName != null && Object.hasOwnProperty.call(message, \"responseName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseName);\n            if (message.index != null && Object.hasOwnProperty.call(message, \"index\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.index);\n            if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);\n            if (message.cachePolicy != null && Object.hasOwnProperty.call(message, \"cachePolicy\"))\n                $root.Trace.CachePolicy.encode(message.cachePolicy, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.startTime != null && Object.hasOwnProperty.call(message, \"startTime\"))\n                writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.startTime);\n            if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n                writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.endTime);\n            if (message.error != null && message.error.length)\n                for (var i = 0; i < message.error.length; ++i)\n                    $root.Trace.Error.encode(message.error[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.child != null && message.child.length)\n                for (var i = 0; i < message.child.length; ++i)\n                    $root.Trace.Node.encode(message.child[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.parentType != null && Object.hasOwnProperty.call(message, \"parentType\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.parentType);\n            if (message.originalFieldName != null && Object.hasOwnProperty.call(message, \"originalFieldName\"))\n                writer.uint32(/* id 14, wireType 2 =*/114).string(message.originalFieldName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Node message, length delimited. Does not implicitly {@link Trace.Node.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.Node\n         * @static\n         * @param {Trace.INode} message Node message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Node.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Node message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.Node\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.Node} Node\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Node.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.Node();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.responseName = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 14:\n                    message.originalFieldName = reader.string();\n                    break;\n                case 3:\n                    message.type = reader.string();\n                    break;\n                case 13:\n                    message.parentType = reader.string();\n                    break;\n                case 5:\n                    message.cachePolicy = $root.Trace.CachePolicy.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.startTime = reader.uint64();\n                    break;\n                case 9:\n                    message.endTime = reader.uint64();\n                    break;\n                case 11:\n                    if (!(message.error && message.error.length))\n                        message.error = [];\n                    message.error.push($root.Trace.Error.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.child && message.child.length))\n                        message.child = [];\n                    message.child.push($root.Trace.Node.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Node message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.Node\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.Node} Node\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Node.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Node message.\n         * @function verify\n         * @memberof Trace.Node\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Node.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.responseName != null && message.hasOwnProperty(\"responseName\")) {\n                properties.id = 1;\n                if (!$util.isString(message.responseName))\n                    return \"responseName: string expected\";\n            }\n            if (message.index != null && message.hasOwnProperty(\"index\")) {\n                if (properties.id === 1)\n                    return \"id: multiple values\";\n                properties.id = 1;\n                if (!$util.isInteger(message.index))\n                    return \"index: integer expected\";\n            }\n            if (message.originalFieldName != null && message.hasOwnProperty(\"originalFieldName\"))\n                if (!$util.isString(message.originalFieldName))\n                    return \"originalFieldName: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                if (!$util.isString(message.type))\n                    return \"type: string expected\";\n            if (message.parentType != null && message.hasOwnProperty(\"parentType\"))\n                if (!$util.isString(message.parentType))\n                    return \"parentType: string expected\";\n            if (message.cachePolicy != null && message.hasOwnProperty(\"cachePolicy\")) {\n                var error = $root.Trace.CachePolicy.verify(message.cachePolicy);\n                if (error)\n                    return \"cachePolicy.\" + error;\n            }\n            if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n                if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                    return \"startTime: integer|Long expected\";\n            if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n                if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                    return \"endTime: integer|Long expected\";\n            if (message.error != null && message.hasOwnProperty(\"error\")) {\n                if (!Array.isArray(message.error))\n                    return \"error: array expected\";\n                for (var i = 0; i < message.error.length; ++i) {\n                    var error = $root.Trace.Error.verify(message.error[i]);\n                    if (error)\n                        return \"error.\" + error;\n                }\n            }\n            if (message.child != null && message.hasOwnProperty(\"child\")) {\n                if (!Array.isArray(message.child))\n                    return \"child: array expected\";\n                for (var i = 0; i < message.child.length; ++i) {\n                    var error = $root.Trace.Node.verify(message.child[i]);\n                    if (error)\n                        return \"child.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a Node message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.Node\n         * @static\n         * @param {Trace.Node} message Node\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Node.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.error = [];\n                object.child = [];\n            }\n            if (options.defaults) {\n                object.type = \"\";\n                object.cachePolicy = null;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.startTime = options.longs === String ? \"0\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.endTime = options.longs === String ? \"0\" : 0;\n                object.parentType = \"\";\n                object.originalFieldName = \"\";\n            }\n            if (message.responseName != null && message.hasOwnProperty(\"responseName\")) {\n                object.responseName = message.responseName;\n                if (options.oneofs)\n                    object.id = \"responseName\";\n            }\n            if (message.index != null && message.hasOwnProperty(\"index\")) {\n                object.index = message.index;\n                if (options.oneofs)\n                    object.id = \"index\";\n            }\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = message.type;\n            if (message.cachePolicy != null && message.hasOwnProperty(\"cachePolicy\"))\n                object.cachePolicy = $root.Trace.CachePolicy.toObject(message.cachePolicy, options);\n            if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n                if (typeof message.startTime === \"number\")\n                    object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n                else\n                    object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber(true) : message.startTime;\n            if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n                if (typeof message.endTime === \"number\")\n                    object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n                else\n                    object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber(true) : message.endTime;\n            if (message.error && message.error.length) {\n                object.error = [];\n                for (var j = 0; j < message.error.length; ++j)\n                    object.error[j] = $root.Trace.Error.toObject(message.error[j], options);\n            }\n            if (message.child && message.child.length) {\n                object.child = [];\n                for (var j = 0; j < message.child.length; ++j)\n                    object.child[j] = $root.Trace.Node.toObject(message.child[j], options);\n            }\n            if (message.parentType != null && message.hasOwnProperty(\"parentType\"))\n                object.parentType = message.parentType;\n            if (message.originalFieldName != null && message.hasOwnProperty(\"originalFieldName\"))\n                object.originalFieldName = message.originalFieldName;\n            return object;\n        };\n\n        /**\n         * Converts this Node to JSON.\n         * @function toJSON\n         * @memberof Trace.Node\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Node.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Node;\n    })();\n\n    Trace.QueryPlanNode = (function() {\n\n        /**\n         * Properties of a QueryPlanNode.\n         * @memberof Trace\n         * @interface IQueryPlanNode\n         * @property {Trace.QueryPlanNode.ISequenceNode|null} [sequence] QueryPlanNode sequence\n         * @property {Trace.QueryPlanNode.IParallelNode|null} [parallel] QueryPlanNode parallel\n         * @property {Trace.QueryPlanNode.IFetchNode|null} [fetch] QueryPlanNode fetch\n         * @property {Trace.QueryPlanNode.IFlattenNode|null} [flatten] QueryPlanNode flatten\n         */\n\n        /**\n         * Constructs a new QueryPlanNode.\n         * @memberof Trace\n         * @classdesc Represents a QueryPlanNode.\n         * @implements IQueryPlanNode\n         * @constructor\n         * @param {Trace.IQueryPlanNode=} [properties] Properties to set\n         */\n        function QueryPlanNode(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * QueryPlanNode sequence.\n         * @member {Trace.QueryPlanNode.ISequenceNode|null|undefined} sequence\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         */\n        QueryPlanNode.prototype.sequence = null;\n\n        /**\n         * QueryPlanNode parallel.\n         * @member {Trace.QueryPlanNode.IParallelNode|null|undefined} parallel\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         */\n        QueryPlanNode.prototype.parallel = null;\n\n        /**\n         * QueryPlanNode fetch.\n         * @member {Trace.QueryPlanNode.IFetchNode|null|undefined} fetch\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         */\n        QueryPlanNode.prototype.fetch = null;\n\n        /**\n         * QueryPlanNode flatten.\n         * @member {Trace.QueryPlanNode.IFlattenNode|null|undefined} flatten\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         */\n        QueryPlanNode.prototype.flatten = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * QueryPlanNode node.\n         * @member {\"sequence\"|\"parallel\"|\"fetch\"|\"flatten\"|undefined} node\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         */\n        Object.defineProperty(QueryPlanNode.prototype, \"node\", {\n            get: $util.oneOfGetter($oneOfFields = [\"sequence\", \"parallel\", \"fetch\", \"flatten\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new QueryPlanNode instance using the specified properties.\n         * @function create\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {Trace.IQueryPlanNode=} [properties] Properties to set\n         * @returns {Trace.QueryPlanNode} QueryPlanNode instance\n         */\n        QueryPlanNode.create = function create(properties) {\n            return new QueryPlanNode(properties);\n        };\n\n        /**\n         * Encodes the specified QueryPlanNode message. Does not implicitly {@link Trace.QueryPlanNode.verify|verify} messages.\n         * @function encode\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {Trace.IQueryPlanNode} message QueryPlanNode message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        QueryPlanNode.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.sequence != null && Object.hasOwnProperty.call(message, \"sequence\"))\n                $root.Trace.QueryPlanNode.SequenceNode.encode(message.sequence, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.parallel != null && Object.hasOwnProperty.call(message, \"parallel\"))\n                $root.Trace.QueryPlanNode.ParallelNode.encode(message.parallel, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.fetch != null && Object.hasOwnProperty.call(message, \"fetch\"))\n                $root.Trace.QueryPlanNode.FetchNode.encode(message.fetch, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.flatten != null && Object.hasOwnProperty.call(message, \"flatten\"))\n                $root.Trace.QueryPlanNode.FlattenNode.encode(message.flatten, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified QueryPlanNode message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {Trace.IQueryPlanNode} message QueryPlanNode message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        QueryPlanNode.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a QueryPlanNode message from the specified reader or buffer.\n         * @function decode\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Trace.QueryPlanNode} QueryPlanNode\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        QueryPlanNode.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.sequence = $root.Trace.QueryPlanNode.SequenceNode.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.parallel = $root.Trace.QueryPlanNode.ParallelNode.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.fetch = $root.Trace.QueryPlanNode.FetchNode.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.flatten = $root.Trace.QueryPlanNode.FlattenNode.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a QueryPlanNode message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {Trace.QueryPlanNode} QueryPlanNode\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        QueryPlanNode.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a QueryPlanNode message.\n         * @function verify\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        QueryPlanNode.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.sequence != null && message.hasOwnProperty(\"sequence\")) {\n                properties.node = 1;\n                {\n                    var error = $root.Trace.QueryPlanNode.SequenceNode.verify(message.sequence);\n                    if (error)\n                        return \"sequence.\" + error;\n                }\n            }\n            if (message.parallel != null && message.hasOwnProperty(\"parallel\")) {\n                if (properties.node === 1)\n                    return \"node: multiple values\";\n                properties.node = 1;\n                {\n                    var error = $root.Trace.QueryPlanNode.ParallelNode.verify(message.parallel);\n                    if (error)\n                        return \"parallel.\" + error;\n                }\n            }\n            if (message.fetch != null && message.hasOwnProperty(\"fetch\")) {\n                if (properties.node === 1)\n                    return \"node: multiple values\";\n                properties.node = 1;\n                {\n                    var error = $root.Trace.QueryPlanNode.FetchNode.verify(message.fetch);\n                    if (error)\n                        return \"fetch.\" + error;\n                }\n            }\n            if (message.flatten != null && message.hasOwnProperty(\"flatten\")) {\n                if (properties.node === 1)\n                    return \"node: multiple values\";\n                properties.node = 1;\n                {\n                    var error = $root.Trace.QueryPlanNode.FlattenNode.verify(message.flatten);\n                    if (error)\n                        return \"flatten.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a plain object from a QueryPlanNode message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Trace.QueryPlanNode\n         * @static\n         * @param {Trace.QueryPlanNode} message QueryPlanNode\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        QueryPlanNode.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (message.sequence != null && message.hasOwnProperty(\"sequence\")) {\n                object.sequence = $root.Trace.QueryPlanNode.SequenceNode.toObject(message.sequence, options);\n                if (options.oneofs)\n                    object.node = \"sequence\";\n            }\n            if (message.parallel != null && message.hasOwnProperty(\"parallel\")) {\n                object.parallel = $root.Trace.QueryPlanNode.ParallelNode.toObject(message.parallel, options);\n                if (options.oneofs)\n                    object.node = \"parallel\";\n            }\n            if (message.fetch != null && message.hasOwnProperty(\"fetch\")) {\n                object.fetch = $root.Trace.QueryPlanNode.FetchNode.toObject(message.fetch, options);\n                if (options.oneofs)\n                    object.node = \"fetch\";\n            }\n            if (message.flatten != null && message.hasOwnProperty(\"flatten\")) {\n                object.flatten = $root.Trace.QueryPlanNode.FlattenNode.toObject(message.flatten, options);\n                if (options.oneofs)\n                    object.node = \"flatten\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this QueryPlanNode to JSON.\n         * @function toJSON\n         * @memberof Trace.QueryPlanNode\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        QueryPlanNode.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        QueryPlanNode.SequenceNode = (function() {\n\n            /**\n             * Properties of a SequenceNode.\n             * @memberof Trace.QueryPlanNode\n             * @interface ISequenceNode\n             * @property {Array.<Trace.IQueryPlanNode>|null} [nodes] SequenceNode nodes\n             */\n\n            /**\n             * Constructs a new SequenceNode.\n             * @memberof Trace.QueryPlanNode\n             * @classdesc Represents a SequenceNode.\n             * @implements ISequenceNode\n             * @constructor\n             * @param {Trace.QueryPlanNode.ISequenceNode=} [properties] Properties to set\n             */\n            function SequenceNode(properties) {\n                this.nodes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SequenceNode nodes.\n             * @member {Array.<Trace.IQueryPlanNode>} nodes\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @instance\n             */\n            SequenceNode.prototype.nodes = $util.emptyArray;\n\n            /**\n             * Creates a new SequenceNode instance using the specified properties.\n             * @function create\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {Trace.QueryPlanNode.ISequenceNode=} [properties] Properties to set\n             * @returns {Trace.QueryPlanNode.SequenceNode} SequenceNode instance\n             */\n            SequenceNode.create = function create(properties) {\n                return new SequenceNode(properties);\n            };\n\n            /**\n             * Encodes the specified SequenceNode message. Does not implicitly {@link Trace.QueryPlanNode.SequenceNode.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {Trace.QueryPlanNode.ISequenceNode} message SequenceNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SequenceNode.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nodes != null && message.nodes.length)\n                    for (var i = 0; i < message.nodes.length; ++i)\n                        $root.Trace.QueryPlanNode.encode(message.nodes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SequenceNode message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.SequenceNode.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {Trace.QueryPlanNode.ISequenceNode} message SequenceNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SequenceNode.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SequenceNode message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.QueryPlanNode.SequenceNode} SequenceNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SequenceNode.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode.SequenceNode();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.nodes && message.nodes.length))\n                            message.nodes = [];\n                        message.nodes.push($root.Trace.QueryPlanNode.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SequenceNode message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.QueryPlanNode.SequenceNode} SequenceNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SequenceNode.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SequenceNode message.\n             * @function verify\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SequenceNode.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.nodes != null && message.hasOwnProperty(\"nodes\")) {\n                    if (!Array.isArray(message.nodes))\n                        return \"nodes: array expected\";\n                    for (var i = 0; i < message.nodes.length; ++i) {\n                        var error = $root.Trace.QueryPlanNode.verify(message.nodes[i]);\n                        if (error)\n                            return \"nodes.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a SequenceNode message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @static\n             * @param {Trace.QueryPlanNode.SequenceNode} message SequenceNode\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SequenceNode.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.nodes = [];\n                if (message.nodes && message.nodes.length) {\n                    object.nodes = [];\n                    for (var j = 0; j < message.nodes.length; ++j)\n                        object.nodes[j] = $root.Trace.QueryPlanNode.toObject(message.nodes[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this SequenceNode to JSON.\n             * @function toJSON\n             * @memberof Trace.QueryPlanNode.SequenceNode\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SequenceNode.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SequenceNode;\n        })();\n\n        QueryPlanNode.ParallelNode = (function() {\n\n            /**\n             * Properties of a ParallelNode.\n             * @memberof Trace.QueryPlanNode\n             * @interface IParallelNode\n             * @property {Array.<Trace.IQueryPlanNode>|null} [nodes] ParallelNode nodes\n             */\n\n            /**\n             * Constructs a new ParallelNode.\n             * @memberof Trace.QueryPlanNode\n             * @classdesc Represents a ParallelNode.\n             * @implements IParallelNode\n             * @constructor\n             * @param {Trace.QueryPlanNode.IParallelNode=} [properties] Properties to set\n             */\n            function ParallelNode(properties) {\n                this.nodes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ParallelNode nodes.\n             * @member {Array.<Trace.IQueryPlanNode>} nodes\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @instance\n             */\n            ParallelNode.prototype.nodes = $util.emptyArray;\n\n            /**\n             * Creates a new ParallelNode instance using the specified properties.\n             * @function create\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {Trace.QueryPlanNode.IParallelNode=} [properties] Properties to set\n             * @returns {Trace.QueryPlanNode.ParallelNode} ParallelNode instance\n             */\n            ParallelNode.create = function create(properties) {\n                return new ParallelNode(properties);\n            };\n\n            /**\n             * Encodes the specified ParallelNode message. Does not implicitly {@link Trace.QueryPlanNode.ParallelNode.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {Trace.QueryPlanNode.IParallelNode} message ParallelNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ParallelNode.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nodes != null && message.nodes.length)\n                    for (var i = 0; i < message.nodes.length; ++i)\n                        $root.Trace.QueryPlanNode.encode(message.nodes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ParallelNode message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.ParallelNode.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {Trace.QueryPlanNode.IParallelNode} message ParallelNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ParallelNode.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ParallelNode message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.QueryPlanNode.ParallelNode} ParallelNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ParallelNode.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode.ParallelNode();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.nodes && message.nodes.length))\n                            message.nodes = [];\n                        message.nodes.push($root.Trace.QueryPlanNode.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ParallelNode message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.QueryPlanNode.ParallelNode} ParallelNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ParallelNode.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ParallelNode message.\n             * @function verify\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ParallelNode.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.nodes != null && message.hasOwnProperty(\"nodes\")) {\n                    if (!Array.isArray(message.nodes))\n                        return \"nodes: array expected\";\n                    for (var i = 0; i < message.nodes.length; ++i) {\n                        var error = $root.Trace.QueryPlanNode.verify(message.nodes[i]);\n                        if (error)\n                            return \"nodes.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a ParallelNode message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @static\n             * @param {Trace.QueryPlanNode.ParallelNode} message ParallelNode\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ParallelNode.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.nodes = [];\n                if (message.nodes && message.nodes.length) {\n                    object.nodes = [];\n                    for (var j = 0; j < message.nodes.length; ++j)\n                        object.nodes[j] = $root.Trace.QueryPlanNode.toObject(message.nodes[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ParallelNode to JSON.\n             * @function toJSON\n             * @memberof Trace.QueryPlanNode.ParallelNode\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ParallelNode.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ParallelNode;\n        })();\n\n        QueryPlanNode.FetchNode = (function() {\n\n            /**\n             * Properties of a FetchNode.\n             * @memberof Trace.QueryPlanNode\n             * @interface IFetchNode\n             * @property {string|null} [serviceName] FetchNode serviceName\n             * @property {boolean|null} [traceParsingFailed] FetchNode traceParsingFailed\n             * @property {ITrace|null} [trace] FetchNode trace\n             * @property {number|null} [sentTimeOffset] FetchNode sentTimeOffset\n             * @property {google.protobuf.ITimestamp|null} [sentTime] FetchNode sentTime\n             * @property {google.protobuf.ITimestamp|null} [receivedTime] FetchNode receivedTime\n             */\n\n            /**\n             * Constructs a new FetchNode.\n             * @memberof Trace.QueryPlanNode\n             * @classdesc Represents a FetchNode.\n             * @implements IFetchNode\n             * @constructor\n             * @param {Trace.QueryPlanNode.IFetchNode=} [properties] Properties to set\n             */\n            function FetchNode(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FetchNode serviceName.\n             * @member {string} serviceName\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.serviceName = \"\";\n\n            /**\n             * FetchNode traceParsingFailed.\n             * @member {boolean} traceParsingFailed\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.traceParsingFailed = false;\n\n            /**\n             * FetchNode trace.\n             * @member {ITrace|null|undefined} trace\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.trace = null;\n\n            /**\n             * FetchNode sentTimeOffset.\n             * @member {number} sentTimeOffset\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.sentTimeOffset = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * FetchNode sentTime.\n             * @member {google.protobuf.ITimestamp|null|undefined} sentTime\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.sentTime = null;\n\n            /**\n             * FetchNode receivedTime.\n             * @member {google.protobuf.ITimestamp|null|undefined} receivedTime\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             */\n            FetchNode.prototype.receivedTime = null;\n\n            /**\n             * Creates a new FetchNode instance using the specified properties.\n             * @function create\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFetchNode=} [properties] Properties to set\n             * @returns {Trace.QueryPlanNode.FetchNode} FetchNode instance\n             */\n            FetchNode.create = function create(properties) {\n                return new FetchNode(properties);\n            };\n\n            /**\n             * Encodes the specified FetchNode message. Does not implicitly {@link Trace.QueryPlanNode.FetchNode.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFetchNode} message FetchNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FetchNode.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.serviceName != null && Object.hasOwnProperty.call(message, \"serviceName\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceName);\n                if (message.traceParsingFailed != null && Object.hasOwnProperty.call(message, \"traceParsingFailed\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.traceParsingFailed);\n                if (message.trace != null && Object.hasOwnProperty.call(message, \"trace\"))\n                    $root.Trace.encode(message.trace, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.sentTimeOffset != null && Object.hasOwnProperty.call(message, \"sentTimeOffset\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.sentTimeOffset);\n                if (message.sentTime != null && Object.hasOwnProperty.call(message, \"sentTime\"))\n                    $root.google.protobuf.Timestamp.encode(message.sentTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.receivedTime != null && Object.hasOwnProperty.call(message, \"receivedTime\"))\n                    $root.google.protobuf.Timestamp.encode(message.receivedTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FetchNode message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.FetchNode.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFetchNode} message FetchNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FetchNode.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FetchNode message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.QueryPlanNode.FetchNode} FetchNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FetchNode.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode.FetchNode();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.serviceName = reader.string();\n                        break;\n                    case 2:\n                        message.traceParsingFailed = reader.bool();\n                        break;\n                    case 3:\n                        message.trace = $root.Trace.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.sentTimeOffset = reader.uint64();\n                        break;\n                    case 5:\n                        message.sentTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        message.receivedTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FetchNode message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.QueryPlanNode.FetchNode} FetchNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FetchNode.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FetchNode message.\n             * @function verify\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FetchNode.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.serviceName != null && message.hasOwnProperty(\"serviceName\"))\n                    if (!$util.isString(message.serviceName))\n                        return \"serviceName: string expected\";\n                if (message.traceParsingFailed != null && message.hasOwnProperty(\"traceParsingFailed\"))\n                    if (typeof message.traceParsingFailed !== \"boolean\")\n                        return \"traceParsingFailed: boolean expected\";\n                if (message.trace != null && message.hasOwnProperty(\"trace\")) {\n                    var error = $root.Trace.verify(message.trace);\n                    if (error)\n                        return \"trace.\" + error;\n                }\n                if (message.sentTimeOffset != null && message.hasOwnProperty(\"sentTimeOffset\"))\n                    if (!$util.isInteger(message.sentTimeOffset) && !(message.sentTimeOffset && $util.isInteger(message.sentTimeOffset.low) && $util.isInteger(message.sentTimeOffset.high)))\n                        return \"sentTimeOffset: integer|Long expected\";\n                if (message.sentTime != null && message.hasOwnProperty(\"sentTime\")) {\n                    var error = $root.google.protobuf.Timestamp.verify(message.sentTime);\n                    if (error)\n                        return \"sentTime.\" + error;\n                }\n                if (message.receivedTime != null && message.hasOwnProperty(\"receivedTime\")) {\n                    var error = $root.google.protobuf.Timestamp.verify(message.receivedTime);\n                    if (error)\n                        return \"receivedTime.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a FetchNode message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @static\n             * @param {Trace.QueryPlanNode.FetchNode} message FetchNode\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FetchNode.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.serviceName = \"\";\n                    object.traceParsingFailed = false;\n                    object.trace = null;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.sentTimeOffset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.sentTimeOffset = options.longs === String ? \"0\" : 0;\n                    object.sentTime = null;\n                    object.receivedTime = null;\n                }\n                if (message.serviceName != null && message.hasOwnProperty(\"serviceName\"))\n                    object.serviceName = message.serviceName;\n                if (message.traceParsingFailed != null && message.hasOwnProperty(\"traceParsingFailed\"))\n                    object.traceParsingFailed = message.traceParsingFailed;\n                if (message.trace != null && message.hasOwnProperty(\"trace\"))\n                    object.trace = $root.Trace.toObject(message.trace, options);\n                if (message.sentTimeOffset != null && message.hasOwnProperty(\"sentTimeOffset\"))\n                    if (typeof message.sentTimeOffset === \"number\")\n                        object.sentTimeOffset = options.longs === String ? String(message.sentTimeOffset) : message.sentTimeOffset;\n                    else\n                        object.sentTimeOffset = options.longs === String ? $util.Long.prototype.toString.call(message.sentTimeOffset) : options.longs === Number ? new $util.LongBits(message.sentTimeOffset.low >>> 0, message.sentTimeOffset.high >>> 0).toNumber(true) : message.sentTimeOffset;\n                if (message.sentTime != null && message.hasOwnProperty(\"sentTime\"))\n                    object.sentTime = $root.google.protobuf.Timestamp.toObject(message.sentTime, options);\n                if (message.receivedTime != null && message.hasOwnProperty(\"receivedTime\"))\n                    object.receivedTime = $root.google.protobuf.Timestamp.toObject(message.receivedTime, options);\n                return object;\n            };\n\n            /**\n             * Converts this FetchNode to JSON.\n             * @function toJSON\n             * @memberof Trace.QueryPlanNode.FetchNode\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FetchNode.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FetchNode;\n        })();\n\n        QueryPlanNode.FlattenNode = (function() {\n\n            /**\n             * Properties of a FlattenNode.\n             * @memberof Trace.QueryPlanNode\n             * @interface IFlattenNode\n             * @property {Array.<Trace.QueryPlanNode.IResponsePathElement>|null} [responsePath] FlattenNode responsePath\n             * @property {Trace.IQueryPlanNode|null} [node] FlattenNode node\n             */\n\n            /**\n             * Constructs a new FlattenNode.\n             * @memberof Trace.QueryPlanNode\n             * @classdesc Represents a FlattenNode.\n             * @implements IFlattenNode\n             * @constructor\n             * @param {Trace.QueryPlanNode.IFlattenNode=} [properties] Properties to set\n             */\n            function FlattenNode(properties) {\n                this.responsePath = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FlattenNode responsePath.\n             * @member {Array.<Trace.QueryPlanNode.IResponsePathElement>} responsePath\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @instance\n             */\n            FlattenNode.prototype.responsePath = $util.emptyArray;\n\n            /**\n             * FlattenNode node.\n             * @member {Trace.IQueryPlanNode|null|undefined} node\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @instance\n             */\n            FlattenNode.prototype.node = null;\n\n            /**\n             * Creates a new FlattenNode instance using the specified properties.\n             * @function create\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFlattenNode=} [properties] Properties to set\n             * @returns {Trace.QueryPlanNode.FlattenNode} FlattenNode instance\n             */\n            FlattenNode.create = function create(properties) {\n                return new FlattenNode(properties);\n            };\n\n            /**\n             * Encodes the specified FlattenNode message. Does not implicitly {@link Trace.QueryPlanNode.FlattenNode.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFlattenNode} message FlattenNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FlattenNode.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.responsePath != null && message.responsePath.length)\n                    for (var i = 0; i < message.responsePath.length; ++i)\n                        $root.Trace.QueryPlanNode.ResponsePathElement.encode(message.responsePath[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.node != null && Object.hasOwnProperty.call(message, \"node\"))\n                    $root.Trace.QueryPlanNode.encode(message.node, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FlattenNode message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.FlattenNode.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {Trace.QueryPlanNode.IFlattenNode} message FlattenNode message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FlattenNode.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FlattenNode message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.QueryPlanNode.FlattenNode} FlattenNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FlattenNode.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode.FlattenNode();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.responsePath && message.responsePath.length))\n                            message.responsePath = [];\n                        message.responsePath.push($root.Trace.QueryPlanNode.ResponsePathElement.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.node = $root.Trace.QueryPlanNode.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FlattenNode message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.QueryPlanNode.FlattenNode} FlattenNode\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FlattenNode.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FlattenNode message.\n             * @function verify\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FlattenNode.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.responsePath != null && message.hasOwnProperty(\"responsePath\")) {\n                    if (!Array.isArray(message.responsePath))\n                        return \"responsePath: array expected\";\n                    for (var i = 0; i < message.responsePath.length; ++i) {\n                        var error = $root.Trace.QueryPlanNode.ResponsePathElement.verify(message.responsePath[i]);\n                        if (error)\n                            return \"responsePath.\" + error;\n                    }\n                }\n                if (message.node != null && message.hasOwnProperty(\"node\")) {\n                    var error = $root.Trace.QueryPlanNode.verify(message.node);\n                    if (error)\n                        return \"node.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a FlattenNode message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @static\n             * @param {Trace.QueryPlanNode.FlattenNode} message FlattenNode\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FlattenNode.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.responsePath = [];\n                if (options.defaults)\n                    object.node = null;\n                if (message.responsePath && message.responsePath.length) {\n                    object.responsePath = [];\n                    for (var j = 0; j < message.responsePath.length; ++j)\n                        object.responsePath[j] = $root.Trace.QueryPlanNode.ResponsePathElement.toObject(message.responsePath[j], options);\n                }\n                if (message.node != null && message.hasOwnProperty(\"node\"))\n                    object.node = $root.Trace.QueryPlanNode.toObject(message.node, options);\n                return object;\n            };\n\n            /**\n             * Converts this FlattenNode to JSON.\n             * @function toJSON\n             * @memberof Trace.QueryPlanNode.FlattenNode\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FlattenNode.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FlattenNode;\n        })();\n\n        QueryPlanNode.ResponsePathElement = (function() {\n\n            /**\n             * Properties of a ResponsePathElement.\n             * @memberof Trace.QueryPlanNode\n             * @interface IResponsePathElement\n             * @property {string|null} [fieldName] ResponsePathElement fieldName\n             * @property {number|null} [index] ResponsePathElement index\n             */\n\n            /**\n             * Constructs a new ResponsePathElement.\n             * @memberof Trace.QueryPlanNode\n             * @classdesc Represents a ResponsePathElement.\n             * @implements IResponsePathElement\n             * @constructor\n             * @param {Trace.QueryPlanNode.IResponsePathElement=} [properties] Properties to set\n             */\n            function ResponsePathElement(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ResponsePathElement fieldName.\n             * @member {string} fieldName\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @instance\n             */\n            ResponsePathElement.prototype.fieldName = \"\";\n\n            /**\n             * ResponsePathElement index.\n             * @member {number} index\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @instance\n             */\n            ResponsePathElement.prototype.index = 0;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ResponsePathElement id.\n             * @member {\"fieldName\"|\"index\"|undefined} id\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @instance\n             */\n            Object.defineProperty(ResponsePathElement.prototype, \"id\", {\n                get: $util.oneOfGetter($oneOfFields = [\"fieldName\", \"index\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new ResponsePathElement instance using the specified properties.\n             * @function create\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {Trace.QueryPlanNode.IResponsePathElement=} [properties] Properties to set\n             * @returns {Trace.QueryPlanNode.ResponsePathElement} ResponsePathElement instance\n             */\n            ResponsePathElement.create = function create(properties) {\n                return new ResponsePathElement(properties);\n            };\n\n            /**\n             * Encodes the specified ResponsePathElement message. Does not implicitly {@link Trace.QueryPlanNode.ResponsePathElement.verify|verify} messages.\n             * @function encode\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {Trace.QueryPlanNode.IResponsePathElement} message ResponsePathElement message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ResponsePathElement.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.fieldName != null && Object.hasOwnProperty.call(message, \"fieldName\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldName);\n                if (message.index != null && Object.hasOwnProperty.call(message, \"index\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.index);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ResponsePathElement message, length delimited. Does not implicitly {@link Trace.QueryPlanNode.ResponsePathElement.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {Trace.QueryPlanNode.IResponsePathElement} message ResponsePathElement message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ResponsePathElement.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ResponsePathElement message from the specified reader or buffer.\n             * @function decode\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {Trace.QueryPlanNode.ResponsePathElement} ResponsePathElement\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ResponsePathElement.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trace.QueryPlanNode.ResponsePathElement();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.fieldName = reader.string();\n                        break;\n                    case 2:\n                        message.index = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ResponsePathElement message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {Trace.QueryPlanNode.ResponsePathElement} ResponsePathElement\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ResponsePathElement.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ResponsePathElement message.\n             * @function verify\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ResponsePathElement.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.fieldName != null && message.hasOwnProperty(\"fieldName\")) {\n                    properties.id = 1;\n                    if (!$util.isString(message.fieldName))\n                        return \"fieldName: string expected\";\n                }\n                if (message.index != null && message.hasOwnProperty(\"index\")) {\n                    if (properties.id === 1)\n                        return \"id: multiple values\";\n                    properties.id = 1;\n                    if (!$util.isInteger(message.index))\n                        return \"index: integer expected\";\n                }\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a ResponsePathElement message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @static\n             * @param {Trace.QueryPlanNode.ResponsePathElement} message ResponsePathElement\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ResponsePathElement.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (message.fieldName != null && message.hasOwnProperty(\"fieldName\")) {\n                    object.fieldName = message.fieldName;\n                    if (options.oneofs)\n                        object.id = \"fieldName\";\n                }\n                if (message.index != null && message.hasOwnProperty(\"index\")) {\n                    object.index = message.index;\n                    if (options.oneofs)\n                        object.id = \"index\";\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ResponsePathElement to JSON.\n             * @function toJSON\n             * @memberof Trace.QueryPlanNode.ResponsePathElement\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ResponsePathElement.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ResponsePathElement;\n        })();\n\n        return QueryPlanNode;\n    })();\n\n    return Trace;\n})();\n\n$root.ReportHeader = (function() {\n\n    /**\n     * Properties of a ReportHeader.\n     * @exports IReportHeader\n     * @interface IReportHeader\n     * @property {string|null} [graphRef] ReportHeader graphRef\n     * @property {string|null} [hostname] ReportHeader hostname\n     * @property {string|null} [agentVersion] ReportHeader agentVersion\n     * @property {string|null} [serviceVersion] ReportHeader serviceVersion\n     * @property {string|null} [runtimeVersion] ReportHeader runtimeVersion\n     * @property {string|null} [uname] ReportHeader uname\n     * @property {string|null} [executableSchemaId] ReportHeader executableSchemaId\n     */\n\n    /**\n     * Constructs a new ReportHeader.\n     * @exports ReportHeader\n     * @classdesc Represents a ReportHeader.\n     * @implements IReportHeader\n     * @constructor\n     * @param {IReportHeader=} [properties] Properties to set\n     */\n    function ReportHeader(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ReportHeader graphRef.\n     * @member {string} graphRef\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.graphRef = \"\";\n\n    /**\n     * ReportHeader hostname.\n     * @member {string} hostname\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.hostname = \"\";\n\n    /**\n     * ReportHeader agentVersion.\n     * @member {string} agentVersion\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.agentVersion = \"\";\n\n    /**\n     * ReportHeader serviceVersion.\n     * @member {string} serviceVersion\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.serviceVersion = \"\";\n\n    /**\n     * ReportHeader runtimeVersion.\n     * @member {string} runtimeVersion\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.runtimeVersion = \"\";\n\n    /**\n     * ReportHeader uname.\n     * @member {string} uname\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.uname = \"\";\n\n    /**\n     * ReportHeader executableSchemaId.\n     * @member {string} executableSchemaId\n     * @memberof ReportHeader\n     * @instance\n     */\n    ReportHeader.prototype.executableSchemaId = \"\";\n\n    /**\n     * Creates a new ReportHeader instance using the specified properties.\n     * @function create\n     * @memberof ReportHeader\n     * @static\n     * @param {IReportHeader=} [properties] Properties to set\n     * @returns {ReportHeader} ReportHeader instance\n     */\n    ReportHeader.create = function create(properties) {\n        return new ReportHeader(properties);\n    };\n\n    /**\n     * Encodes the specified ReportHeader message. Does not implicitly {@link ReportHeader.verify|verify} messages.\n     * @function encode\n     * @memberof ReportHeader\n     * @static\n     * @param {IReportHeader} message ReportHeader message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ReportHeader.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostname != null && Object.hasOwnProperty.call(message, \"hostname\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.hostname);\n        if (message.agentVersion != null && Object.hasOwnProperty.call(message, \"agentVersion\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.agentVersion);\n        if (message.serviceVersion != null && Object.hasOwnProperty.call(message, \"serviceVersion\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.serviceVersion);\n        if (message.runtimeVersion != null && Object.hasOwnProperty.call(message, \"runtimeVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.runtimeVersion);\n        if (message.uname != null && Object.hasOwnProperty.call(message, \"uname\"))\n            writer.uint32(/* id 9, wireType 2 =*/74).string(message.uname);\n        if (message.executableSchemaId != null && Object.hasOwnProperty.call(message, \"executableSchemaId\"))\n            writer.uint32(/* id 11, wireType 2 =*/90).string(message.executableSchemaId);\n        if (message.graphRef != null && Object.hasOwnProperty.call(message, \"graphRef\"))\n            writer.uint32(/* id 12, wireType 2 =*/98).string(message.graphRef);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ReportHeader message, length delimited. Does not implicitly {@link ReportHeader.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ReportHeader\n     * @static\n     * @param {IReportHeader} message ReportHeader message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ReportHeader.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ReportHeader message from the specified reader or buffer.\n     * @function decode\n     * @memberof ReportHeader\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ReportHeader} ReportHeader\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ReportHeader.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ReportHeader();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 12:\n                message.graphRef = reader.string();\n                break;\n            case 5:\n                message.hostname = reader.string();\n                break;\n            case 6:\n                message.agentVersion = reader.string();\n                break;\n            case 7:\n                message.serviceVersion = reader.string();\n                break;\n            case 8:\n                message.runtimeVersion = reader.string();\n                break;\n            case 9:\n                message.uname = reader.string();\n                break;\n            case 11:\n                message.executableSchemaId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ReportHeader message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ReportHeader\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ReportHeader} ReportHeader\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ReportHeader.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ReportHeader message.\n     * @function verify\n     * @memberof ReportHeader\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ReportHeader.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.graphRef != null && message.hasOwnProperty(\"graphRef\"))\n            if (!$util.isString(message.graphRef))\n                return \"graphRef: string expected\";\n        if (message.hostname != null && message.hasOwnProperty(\"hostname\"))\n            if (!$util.isString(message.hostname))\n                return \"hostname: string expected\";\n        if (message.agentVersion != null && message.hasOwnProperty(\"agentVersion\"))\n            if (!$util.isString(message.agentVersion))\n                return \"agentVersion: string expected\";\n        if (message.serviceVersion != null && message.hasOwnProperty(\"serviceVersion\"))\n            if (!$util.isString(message.serviceVersion))\n                return \"serviceVersion: string expected\";\n        if (message.runtimeVersion != null && message.hasOwnProperty(\"runtimeVersion\"))\n            if (!$util.isString(message.runtimeVersion))\n                return \"runtimeVersion: string expected\";\n        if (message.uname != null && message.hasOwnProperty(\"uname\"))\n            if (!$util.isString(message.uname))\n                return \"uname: string expected\";\n        if (message.executableSchemaId != null && message.hasOwnProperty(\"executableSchemaId\"))\n            if (!$util.isString(message.executableSchemaId))\n                return \"executableSchemaId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a ReportHeader message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ReportHeader\n     * @static\n     * @param {ReportHeader} message ReportHeader\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ReportHeader.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.hostname = \"\";\n            object.agentVersion = \"\";\n            object.serviceVersion = \"\";\n            object.runtimeVersion = \"\";\n            object.uname = \"\";\n            object.executableSchemaId = \"\";\n            object.graphRef = \"\";\n        }\n        if (message.hostname != null && message.hasOwnProperty(\"hostname\"))\n            object.hostname = message.hostname;\n        if (message.agentVersion != null && message.hasOwnProperty(\"agentVersion\"))\n            object.agentVersion = message.agentVersion;\n        if (message.serviceVersion != null && message.hasOwnProperty(\"serviceVersion\"))\n            object.serviceVersion = message.serviceVersion;\n        if (message.runtimeVersion != null && message.hasOwnProperty(\"runtimeVersion\"))\n            object.runtimeVersion = message.runtimeVersion;\n        if (message.uname != null && message.hasOwnProperty(\"uname\"))\n            object.uname = message.uname;\n        if (message.executableSchemaId != null && message.hasOwnProperty(\"executableSchemaId\"))\n            object.executableSchemaId = message.executableSchemaId;\n        if (message.graphRef != null && message.hasOwnProperty(\"graphRef\"))\n            object.graphRef = message.graphRef;\n        return object;\n    };\n\n    /**\n     * Converts this ReportHeader to JSON.\n     * @function toJSON\n     * @memberof ReportHeader\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ReportHeader.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ReportHeader;\n})();\n\n$root.PathErrorStats = (function() {\n\n    /**\n     * Properties of a PathErrorStats.\n     * @exports IPathErrorStats\n     * @interface IPathErrorStats\n     * @property {Object.<string,IPathErrorStats>|null} [children] PathErrorStats children\n     * @property {number|null} [errorsCount] PathErrorStats errorsCount\n     * @property {number|null} [requestsWithErrorsCount] PathErrorStats requestsWithErrorsCount\n     */\n\n    /**\n     * Constructs a new PathErrorStats.\n     * @exports PathErrorStats\n     * @classdesc Represents a PathErrorStats.\n     * @implements IPathErrorStats\n     * @constructor\n     * @param {IPathErrorStats=} [properties] Properties to set\n     */\n    function PathErrorStats(properties) {\n        this.children = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * PathErrorStats children.\n     * @member {Object.<string,IPathErrorStats>} children\n     * @memberof PathErrorStats\n     * @instance\n     */\n    PathErrorStats.prototype.children = $util.emptyObject;\n\n    /**\n     * PathErrorStats errorsCount.\n     * @member {number} errorsCount\n     * @memberof PathErrorStats\n     * @instance\n     */\n    PathErrorStats.prototype.errorsCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * PathErrorStats requestsWithErrorsCount.\n     * @member {number} requestsWithErrorsCount\n     * @memberof PathErrorStats\n     * @instance\n     */\n    PathErrorStats.prototype.requestsWithErrorsCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new PathErrorStats instance using the specified properties.\n     * @function create\n     * @memberof PathErrorStats\n     * @static\n     * @param {IPathErrorStats=} [properties] Properties to set\n     * @returns {PathErrorStats} PathErrorStats instance\n     */\n    PathErrorStats.create = function create(properties) {\n        return new PathErrorStats(properties);\n    };\n\n    /**\n     * Encodes the specified PathErrorStats message. Does not implicitly {@link PathErrorStats.verify|verify} messages.\n     * @function encode\n     * @memberof PathErrorStats\n     * @static\n     * @param {IPathErrorStats} message PathErrorStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PathErrorStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.children != null && Object.hasOwnProperty.call(message, \"children\"))\n            for (var keys = Object.keys(message.children), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.PathErrorStats.encode(message.children[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.errorsCount != null && Object.hasOwnProperty.call(message, \"errorsCount\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.errorsCount);\n        if (message.requestsWithErrorsCount != null && Object.hasOwnProperty.call(message, \"requestsWithErrorsCount\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.requestsWithErrorsCount);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified PathErrorStats message, length delimited. Does not implicitly {@link PathErrorStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof PathErrorStats\n     * @static\n     * @param {IPathErrorStats} message PathErrorStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PathErrorStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a PathErrorStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof PathErrorStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {PathErrorStats} PathErrorStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PathErrorStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PathErrorStats(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                reader.skip().pos++;\n                if (message.children === $util.emptyObject)\n                    message.children = {};\n                key = reader.string();\n                reader.pos++;\n                message.children[key] = $root.PathErrorStats.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.errorsCount = reader.uint64();\n                break;\n            case 5:\n                message.requestsWithErrorsCount = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a PathErrorStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof PathErrorStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {PathErrorStats} PathErrorStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PathErrorStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a PathErrorStats message.\n     * @function verify\n     * @memberof PathErrorStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    PathErrorStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.children != null && message.hasOwnProperty(\"children\")) {\n            if (!$util.isObject(message.children))\n                return \"children: object expected\";\n            var key = Object.keys(message.children);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.PathErrorStats.verify(message.children[key[i]]);\n                if (error)\n                    return \"children.\" + error;\n            }\n        }\n        if (message.errorsCount != null && message.hasOwnProperty(\"errorsCount\"))\n            if (!$util.isInteger(message.errorsCount) && !(message.errorsCount && $util.isInteger(message.errorsCount.low) && $util.isInteger(message.errorsCount.high)))\n                return \"errorsCount: integer|Long expected\";\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (!$util.isInteger(message.requestsWithErrorsCount) && !(message.requestsWithErrorsCount && $util.isInteger(message.requestsWithErrorsCount.low) && $util.isInteger(message.requestsWithErrorsCount.high)))\n                return \"requestsWithErrorsCount: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a PathErrorStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PathErrorStats\n     * @static\n     * @param {PathErrorStats} message PathErrorStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PathErrorStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.children = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.errorsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.errorsCount = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.requestsWithErrorsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.requestsWithErrorsCount = options.longs === String ? \"0\" : 0;\n        }\n        var keys2;\n        if (message.children && (keys2 = Object.keys(message.children)).length) {\n            object.children = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.children[keys2[j]] = $root.PathErrorStats.toObject(message.children[keys2[j]], options);\n        }\n        if (message.errorsCount != null && message.hasOwnProperty(\"errorsCount\"))\n            if (typeof message.errorsCount === \"number\")\n                object.errorsCount = options.longs === String ? String(message.errorsCount) : message.errorsCount;\n            else\n                object.errorsCount = options.longs === String ? $util.Long.prototype.toString.call(message.errorsCount) : options.longs === Number ? new $util.LongBits(message.errorsCount.low >>> 0, message.errorsCount.high >>> 0).toNumber(true) : message.errorsCount;\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (typeof message.requestsWithErrorsCount === \"number\")\n                object.requestsWithErrorsCount = options.longs === String ? String(message.requestsWithErrorsCount) : message.requestsWithErrorsCount;\n            else\n                object.requestsWithErrorsCount = options.longs === String ? $util.Long.prototype.toString.call(message.requestsWithErrorsCount) : options.longs === Number ? new $util.LongBits(message.requestsWithErrorsCount.low >>> 0, message.requestsWithErrorsCount.high >>> 0).toNumber(true) : message.requestsWithErrorsCount;\n        return object;\n    };\n\n    /**\n     * Converts this PathErrorStats to JSON.\n     * @function toJSON\n     * @memberof PathErrorStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PathErrorStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PathErrorStats;\n})();\n\n$root.QueryLatencyStats = (function() {\n\n    /**\n     * Properties of a QueryLatencyStats.\n     * @exports IQueryLatencyStats\n     * @interface IQueryLatencyStats\n     * @property {$protobuf.ToArray.<number>|Array.<number>|null} [latencyCount] QueryLatencyStats latencyCount\n     * @property {number|null} [requestCount] QueryLatencyStats requestCount\n     * @property {number|null} [cacheHits] QueryLatencyStats cacheHits\n     * @property {number|null} [persistedQueryHits] QueryLatencyStats persistedQueryHits\n     * @property {number|null} [persistedQueryMisses] QueryLatencyStats persistedQueryMisses\n     * @property {$protobuf.ToArray.<number>|Array.<number>|null} [cacheLatencyCount] QueryLatencyStats cacheLatencyCount\n     * @property {IPathErrorStats|null} [rootErrorStats] QueryLatencyStats rootErrorStats\n     * @property {number|null} [requestsWithErrorsCount] QueryLatencyStats requestsWithErrorsCount\n     * @property {$protobuf.ToArray.<number>|Array.<number>|null} [publicCacheTtlCount] QueryLatencyStats publicCacheTtlCount\n     * @property {$protobuf.ToArray.<number>|Array.<number>|null} [privateCacheTtlCount] QueryLatencyStats privateCacheTtlCount\n     * @property {number|null} [registeredOperationCount] QueryLatencyStats registeredOperationCount\n     * @property {number|null} [forbiddenOperationCount] QueryLatencyStats forbiddenOperationCount\n     */\n\n    /**\n     * Constructs a new QueryLatencyStats.\n     * @exports QueryLatencyStats\n     * @classdesc Represents a QueryLatencyStats.\n     * @implements IQueryLatencyStats\n     * @constructor\n     * @param {IQueryLatencyStats=} [properties] Properties to set\n     */\n    function QueryLatencyStats(properties) {\n        this.latencyCount = [];\n        this.cacheLatencyCount = [];\n        this.publicCacheTtlCount = [];\n        this.privateCacheTtlCount = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * QueryLatencyStats latencyCount.\n     * @member {Array.<number>} latencyCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.latencyCount = $util.emptyArray;\n\n    /**\n     * QueryLatencyStats requestCount.\n     * @member {number} requestCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.requestCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats cacheHits.\n     * @member {number} cacheHits\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.cacheHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats persistedQueryHits.\n     * @member {number} persistedQueryHits\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.persistedQueryHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats persistedQueryMisses.\n     * @member {number} persistedQueryMisses\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.persistedQueryMisses = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats cacheLatencyCount.\n     * @member {Array.<number>} cacheLatencyCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.cacheLatencyCount = $util.emptyArray;\n\n    /**\n     * QueryLatencyStats rootErrorStats.\n     * @member {IPathErrorStats|null|undefined} rootErrorStats\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.rootErrorStats = null;\n\n    /**\n     * QueryLatencyStats requestsWithErrorsCount.\n     * @member {number} requestsWithErrorsCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.requestsWithErrorsCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats publicCacheTtlCount.\n     * @member {Array.<number>} publicCacheTtlCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.publicCacheTtlCount = $util.emptyArray;\n\n    /**\n     * QueryLatencyStats privateCacheTtlCount.\n     * @member {Array.<number>} privateCacheTtlCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.privateCacheTtlCount = $util.emptyArray;\n\n    /**\n     * QueryLatencyStats registeredOperationCount.\n     * @member {number} registeredOperationCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.registeredOperationCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * QueryLatencyStats forbiddenOperationCount.\n     * @member {number} forbiddenOperationCount\n     * @memberof QueryLatencyStats\n     * @instance\n     */\n    QueryLatencyStats.prototype.forbiddenOperationCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new QueryLatencyStats instance using the specified properties.\n     * @function create\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {IQueryLatencyStats=} [properties] Properties to set\n     * @returns {QueryLatencyStats} QueryLatencyStats instance\n     */\n    QueryLatencyStats.create = function create(properties) {\n        return new QueryLatencyStats(properties);\n    };\n\n    /**\n     * Encodes the specified QueryLatencyStats message. Does not implicitly {@link QueryLatencyStats.verify|verify} messages.\n     * @function encode\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {IQueryLatencyStats} message QueryLatencyStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryLatencyStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.requestCount != null && Object.hasOwnProperty.call(message, \"requestCount\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.requestCount);\n        if (message.cacheHits != null && Object.hasOwnProperty.call(message, \"cacheHits\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.cacheHits);\n        if (message.persistedQueryHits != null && Object.hasOwnProperty.call(message, \"persistedQueryHits\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.persistedQueryHits);\n        if (message.persistedQueryMisses != null && Object.hasOwnProperty.call(message, \"persistedQueryMisses\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.persistedQueryMisses);\n        if (message.rootErrorStats != null && Object.hasOwnProperty.call(message, \"rootErrorStats\"))\n            $root.PathErrorStats.encode(message.rootErrorStats, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.requestsWithErrorsCount != null && Object.hasOwnProperty.call(message, \"requestsWithErrorsCount\"))\n            writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.requestsWithErrorsCount);\n        if (message.registeredOperationCount != null && Object.hasOwnProperty.call(message, \"registeredOperationCount\"))\n            writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.registeredOperationCount);\n        if (message.forbiddenOperationCount != null && Object.hasOwnProperty.call(message, \"forbiddenOperationCount\"))\n            writer.uint32(/* id 12, wireType 0 =*/96).uint64(message.forbiddenOperationCount);\n        var array13;\n        if (message.latencyCount != null && message.latencyCount.toArray)\n            array13 = message.latencyCount.toArray();\n        else\n            array13 = message.latencyCount;\n        if (array13 != null && array13.length) {\n            writer.uint32(/* id 13, wireType 2 =*/106).fork();\n            for (var i = 0; i < array13.length; ++i)\n                writer.sint64(array13[i]);\n            writer.ldelim();\n        }\n        var array14;\n        if (message.cacheLatencyCount != null && message.cacheLatencyCount.toArray)\n            array14 = message.cacheLatencyCount.toArray();\n        else\n            array14 = message.cacheLatencyCount;\n        if (array14 != null && array14.length) {\n            writer.uint32(/* id 14, wireType 2 =*/114).fork();\n            for (var i = 0; i < array14.length; ++i)\n                writer.sint64(array14[i]);\n            writer.ldelim();\n        }\n        var array15;\n        if (message.publicCacheTtlCount != null && message.publicCacheTtlCount.toArray)\n            array15 = message.publicCacheTtlCount.toArray();\n        else\n            array15 = message.publicCacheTtlCount;\n        if (array15 != null && array15.length) {\n            writer.uint32(/* id 15, wireType 2 =*/122).fork();\n            for (var i = 0; i < array15.length; ++i)\n                writer.sint64(array15[i]);\n            writer.ldelim();\n        }\n        var array16;\n        if (message.privateCacheTtlCount != null && message.privateCacheTtlCount.toArray)\n            array16 = message.privateCacheTtlCount.toArray();\n        else\n            array16 = message.privateCacheTtlCount;\n        if (array16 != null && array16.length) {\n            writer.uint32(/* id 16, wireType 2 =*/130).fork();\n            for (var i = 0; i < array16.length; ++i)\n                writer.sint64(array16[i]);\n            writer.ldelim();\n        }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified QueryLatencyStats message, length delimited. Does not implicitly {@link QueryLatencyStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {IQueryLatencyStats} message QueryLatencyStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryLatencyStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a QueryLatencyStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {QueryLatencyStats} QueryLatencyStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryLatencyStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.QueryLatencyStats();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 13:\n                if (!(message.latencyCount && message.latencyCount.length))\n                    message.latencyCount = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.latencyCount.push(reader.sint64());\n                } else\n                    message.latencyCount.push(reader.sint64());\n                break;\n            case 2:\n                message.requestCount = reader.uint64();\n                break;\n            case 3:\n                message.cacheHits = reader.uint64();\n                break;\n            case 4:\n                message.persistedQueryHits = reader.uint64();\n                break;\n            case 5:\n                message.persistedQueryMisses = reader.uint64();\n                break;\n            case 14:\n                if (!(message.cacheLatencyCount && message.cacheLatencyCount.length))\n                    message.cacheLatencyCount = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.cacheLatencyCount.push(reader.sint64());\n                } else\n                    message.cacheLatencyCount.push(reader.sint64());\n                break;\n            case 7:\n                message.rootErrorStats = $root.PathErrorStats.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.requestsWithErrorsCount = reader.uint64();\n                break;\n            case 15:\n                if (!(message.publicCacheTtlCount && message.publicCacheTtlCount.length))\n                    message.publicCacheTtlCount = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.publicCacheTtlCount.push(reader.sint64());\n                } else\n                    message.publicCacheTtlCount.push(reader.sint64());\n                break;\n            case 16:\n                if (!(message.privateCacheTtlCount && message.privateCacheTtlCount.length))\n                    message.privateCacheTtlCount = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.privateCacheTtlCount.push(reader.sint64());\n                } else\n                    message.privateCacheTtlCount.push(reader.sint64());\n                break;\n            case 11:\n                message.registeredOperationCount = reader.uint64();\n                break;\n            case 12:\n                message.forbiddenOperationCount = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a QueryLatencyStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {QueryLatencyStats} QueryLatencyStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryLatencyStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a QueryLatencyStats message.\n     * @function verify\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    QueryLatencyStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.latencyCount != null && message.hasOwnProperty(\"latencyCount\")) {\n            var array13;\n            if (message.latencyCount != null && message.latencyCount.toArray)\n                array13 = message.latencyCount.toArray();\n            else\n                array13 = message.latencyCount;\n            if (!Array.isArray(array13))\n                return \"latencyCount: array expected\";\n            for (var i = 0; i < array13.length; ++i)\n                if (!$util.isInteger(array13[i]) && !(array13[i] && $util.isInteger(array13[i].low) && $util.isInteger(array13[i].high)))\n                    return \"latencyCount: integer|Long[] expected\";\n        }\n        if (message.requestCount != null && message.hasOwnProperty(\"requestCount\"))\n            if (!$util.isInteger(message.requestCount) && !(message.requestCount && $util.isInteger(message.requestCount.low) && $util.isInteger(message.requestCount.high)))\n                return \"requestCount: integer|Long expected\";\n        if (message.cacheHits != null && message.hasOwnProperty(\"cacheHits\"))\n            if (!$util.isInteger(message.cacheHits) && !(message.cacheHits && $util.isInteger(message.cacheHits.low) && $util.isInteger(message.cacheHits.high)))\n                return \"cacheHits: integer|Long expected\";\n        if (message.persistedQueryHits != null && message.hasOwnProperty(\"persistedQueryHits\"))\n            if (!$util.isInteger(message.persistedQueryHits) && !(message.persistedQueryHits && $util.isInteger(message.persistedQueryHits.low) && $util.isInteger(message.persistedQueryHits.high)))\n                return \"persistedQueryHits: integer|Long expected\";\n        if (message.persistedQueryMisses != null && message.hasOwnProperty(\"persistedQueryMisses\"))\n            if (!$util.isInteger(message.persistedQueryMisses) && !(message.persistedQueryMisses && $util.isInteger(message.persistedQueryMisses.low) && $util.isInteger(message.persistedQueryMisses.high)))\n                return \"persistedQueryMisses: integer|Long expected\";\n        if (message.cacheLatencyCount != null && message.hasOwnProperty(\"cacheLatencyCount\")) {\n            var array14;\n            if (message.cacheLatencyCount != null && message.cacheLatencyCount.toArray)\n                array14 = message.cacheLatencyCount.toArray();\n            else\n                array14 = message.cacheLatencyCount;\n            if (!Array.isArray(array14))\n                return \"cacheLatencyCount: array expected\";\n            for (var i = 0; i < array14.length; ++i)\n                if (!$util.isInteger(array14[i]) && !(array14[i] && $util.isInteger(array14[i].low) && $util.isInteger(array14[i].high)))\n                    return \"cacheLatencyCount: integer|Long[] expected\";\n        }\n        if (message.rootErrorStats != null && message.hasOwnProperty(\"rootErrorStats\")) {\n            var error = $root.PathErrorStats.verify(message.rootErrorStats);\n            if (error)\n                return \"rootErrorStats.\" + error;\n        }\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (!$util.isInteger(message.requestsWithErrorsCount) && !(message.requestsWithErrorsCount && $util.isInteger(message.requestsWithErrorsCount.low) && $util.isInteger(message.requestsWithErrorsCount.high)))\n                return \"requestsWithErrorsCount: integer|Long expected\";\n        if (message.publicCacheTtlCount != null && message.hasOwnProperty(\"publicCacheTtlCount\")) {\n            var array15;\n            if (message.publicCacheTtlCount != null && message.publicCacheTtlCount.toArray)\n                array15 = message.publicCacheTtlCount.toArray();\n            else\n                array15 = message.publicCacheTtlCount;\n            if (!Array.isArray(array15))\n                return \"publicCacheTtlCount: array expected\";\n            for (var i = 0; i < array15.length; ++i)\n                if (!$util.isInteger(array15[i]) && !(array15[i] && $util.isInteger(array15[i].low) && $util.isInteger(array15[i].high)))\n                    return \"publicCacheTtlCount: integer|Long[] expected\";\n        }\n        if (message.privateCacheTtlCount != null && message.hasOwnProperty(\"privateCacheTtlCount\")) {\n            var array16;\n            if (message.privateCacheTtlCount != null && message.privateCacheTtlCount.toArray)\n                array16 = message.privateCacheTtlCount.toArray();\n            else\n                array16 = message.privateCacheTtlCount;\n            if (!Array.isArray(array16))\n                return \"privateCacheTtlCount: array expected\";\n            for (var i = 0; i < array16.length; ++i)\n                if (!$util.isInteger(array16[i]) && !(array16[i] && $util.isInteger(array16[i].low) && $util.isInteger(array16[i].high)))\n                    return \"privateCacheTtlCount: integer|Long[] expected\";\n        }\n        if (message.registeredOperationCount != null && message.hasOwnProperty(\"registeredOperationCount\"))\n            if (!$util.isInteger(message.registeredOperationCount) && !(message.registeredOperationCount && $util.isInteger(message.registeredOperationCount.low) && $util.isInteger(message.registeredOperationCount.high)))\n                return \"registeredOperationCount: integer|Long expected\";\n        if (message.forbiddenOperationCount != null && message.hasOwnProperty(\"forbiddenOperationCount\"))\n            if (!$util.isInteger(message.forbiddenOperationCount) && !(message.forbiddenOperationCount && $util.isInteger(message.forbiddenOperationCount.low) && $util.isInteger(message.forbiddenOperationCount.high)))\n                return \"forbiddenOperationCount: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a QueryLatencyStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof QueryLatencyStats\n     * @static\n     * @param {QueryLatencyStats} message QueryLatencyStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    QueryLatencyStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.latencyCount = [];\n            object.cacheLatencyCount = [];\n            object.publicCacheTtlCount = [];\n            object.privateCacheTtlCount = [];\n        }\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.requestCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.requestCount = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.cacheHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.cacheHits = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.persistedQueryHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.persistedQueryHits = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.persistedQueryMisses = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.persistedQueryMisses = options.longs === String ? \"0\" : 0;\n            object.rootErrorStats = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.requestsWithErrorsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.requestsWithErrorsCount = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.registeredOperationCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.registeredOperationCount = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.forbiddenOperationCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.forbiddenOperationCount = options.longs === String ? \"0\" : 0;\n        }\n        if (message.requestCount != null && message.hasOwnProperty(\"requestCount\"))\n            if (typeof message.requestCount === \"number\")\n                object.requestCount = options.longs === String ? String(message.requestCount) : message.requestCount;\n            else\n                object.requestCount = options.longs === String ? $util.Long.prototype.toString.call(message.requestCount) : options.longs === Number ? new $util.LongBits(message.requestCount.low >>> 0, message.requestCount.high >>> 0).toNumber(true) : message.requestCount;\n        if (message.cacheHits != null && message.hasOwnProperty(\"cacheHits\"))\n            if (typeof message.cacheHits === \"number\")\n                object.cacheHits = options.longs === String ? String(message.cacheHits) : message.cacheHits;\n            else\n                object.cacheHits = options.longs === String ? $util.Long.prototype.toString.call(message.cacheHits) : options.longs === Number ? new $util.LongBits(message.cacheHits.low >>> 0, message.cacheHits.high >>> 0).toNumber(true) : message.cacheHits;\n        if (message.persistedQueryHits != null && message.hasOwnProperty(\"persistedQueryHits\"))\n            if (typeof message.persistedQueryHits === \"number\")\n                object.persistedQueryHits = options.longs === String ? String(message.persistedQueryHits) : message.persistedQueryHits;\n            else\n                object.persistedQueryHits = options.longs === String ? $util.Long.prototype.toString.call(message.persistedQueryHits) : options.longs === Number ? new $util.LongBits(message.persistedQueryHits.low >>> 0, message.persistedQueryHits.high >>> 0).toNumber(true) : message.persistedQueryHits;\n        if (message.persistedQueryMisses != null && message.hasOwnProperty(\"persistedQueryMisses\"))\n            if (typeof message.persistedQueryMisses === \"number\")\n                object.persistedQueryMisses = options.longs === String ? String(message.persistedQueryMisses) : message.persistedQueryMisses;\n            else\n                object.persistedQueryMisses = options.longs === String ? $util.Long.prototype.toString.call(message.persistedQueryMisses) : options.longs === Number ? new $util.LongBits(message.persistedQueryMisses.low >>> 0, message.persistedQueryMisses.high >>> 0).toNumber(true) : message.persistedQueryMisses;\n        if (message.rootErrorStats != null && message.hasOwnProperty(\"rootErrorStats\"))\n            object.rootErrorStats = $root.PathErrorStats.toObject(message.rootErrorStats, options);\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (typeof message.requestsWithErrorsCount === \"number\")\n                object.requestsWithErrorsCount = options.longs === String ? String(message.requestsWithErrorsCount) : message.requestsWithErrorsCount;\n            else\n                object.requestsWithErrorsCount = options.longs === String ? $util.Long.prototype.toString.call(message.requestsWithErrorsCount) : options.longs === Number ? new $util.LongBits(message.requestsWithErrorsCount.low >>> 0, message.requestsWithErrorsCount.high >>> 0).toNumber(true) : message.requestsWithErrorsCount;\n        if (message.registeredOperationCount != null && message.hasOwnProperty(\"registeredOperationCount\"))\n            if (typeof message.registeredOperationCount === \"number\")\n                object.registeredOperationCount = options.longs === String ? String(message.registeredOperationCount) : message.registeredOperationCount;\n            else\n                object.registeredOperationCount = options.longs === String ? $util.Long.prototype.toString.call(message.registeredOperationCount) : options.longs === Number ? new $util.LongBits(message.registeredOperationCount.low >>> 0, message.registeredOperationCount.high >>> 0).toNumber(true) : message.registeredOperationCount;\n        if (message.forbiddenOperationCount != null && message.hasOwnProperty(\"forbiddenOperationCount\"))\n            if (typeof message.forbiddenOperationCount === \"number\")\n                object.forbiddenOperationCount = options.longs === String ? String(message.forbiddenOperationCount) : message.forbiddenOperationCount;\n            else\n                object.forbiddenOperationCount = options.longs === String ? $util.Long.prototype.toString.call(message.forbiddenOperationCount) : options.longs === Number ? new $util.LongBits(message.forbiddenOperationCount.low >>> 0, message.forbiddenOperationCount.high >>> 0).toNumber(true) : message.forbiddenOperationCount;\n        if (message.latencyCount && message.latencyCount.length) {\n            object.latencyCount = [];\n            for (var j = 0; j < message.latencyCount.length; ++j)\n                if (typeof message.latencyCount[j] === \"number\")\n                    object.latencyCount[j] = options.longs === String ? String(message.latencyCount[j]) : message.latencyCount[j];\n                else\n                    object.latencyCount[j] = options.longs === String ? $util.Long.prototype.toString.call(message.latencyCount[j]) : options.longs === Number ? new $util.LongBits(message.latencyCount[j].low >>> 0, message.latencyCount[j].high >>> 0).toNumber() : message.latencyCount[j];\n        }\n        if (message.cacheLatencyCount && message.cacheLatencyCount.length) {\n            object.cacheLatencyCount = [];\n            for (var j = 0; j < message.cacheLatencyCount.length; ++j)\n                if (typeof message.cacheLatencyCount[j] === \"number\")\n                    object.cacheLatencyCount[j] = options.longs === String ? String(message.cacheLatencyCount[j]) : message.cacheLatencyCount[j];\n                else\n                    object.cacheLatencyCount[j] = options.longs === String ? $util.Long.prototype.toString.call(message.cacheLatencyCount[j]) : options.longs === Number ? new $util.LongBits(message.cacheLatencyCount[j].low >>> 0, message.cacheLatencyCount[j].high >>> 0).toNumber() : message.cacheLatencyCount[j];\n        }\n        if (message.publicCacheTtlCount && message.publicCacheTtlCount.length) {\n            object.publicCacheTtlCount = [];\n            for (var j = 0; j < message.publicCacheTtlCount.length; ++j)\n                if (typeof message.publicCacheTtlCount[j] === \"number\")\n                    object.publicCacheTtlCount[j] = options.longs === String ? String(message.publicCacheTtlCount[j]) : message.publicCacheTtlCount[j];\n                else\n                    object.publicCacheTtlCount[j] = options.longs === String ? $util.Long.prototype.toString.call(message.publicCacheTtlCount[j]) : options.longs === Number ? new $util.LongBits(message.publicCacheTtlCount[j].low >>> 0, message.publicCacheTtlCount[j].high >>> 0).toNumber() : message.publicCacheTtlCount[j];\n        }\n        if (message.privateCacheTtlCount && message.privateCacheTtlCount.length) {\n            object.privateCacheTtlCount = [];\n            for (var j = 0; j < message.privateCacheTtlCount.length; ++j)\n                if (typeof message.privateCacheTtlCount[j] === \"number\")\n                    object.privateCacheTtlCount[j] = options.longs === String ? String(message.privateCacheTtlCount[j]) : message.privateCacheTtlCount[j];\n                else\n                    object.privateCacheTtlCount[j] = options.longs === String ? $util.Long.prototype.toString.call(message.privateCacheTtlCount[j]) : options.longs === Number ? new $util.LongBits(message.privateCacheTtlCount[j].low >>> 0, message.privateCacheTtlCount[j].high >>> 0).toNumber() : message.privateCacheTtlCount[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this QueryLatencyStats to JSON.\n     * @function toJSON\n     * @memberof QueryLatencyStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    QueryLatencyStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return QueryLatencyStats;\n})();\n\n$root.StatsContext = (function() {\n\n    /**\n     * Properties of a StatsContext.\n     * @exports IStatsContext\n     * @interface IStatsContext\n     * @property {string|null} [clientReferenceId] StatsContext clientReferenceId\n     * @property {string|null} [clientName] StatsContext clientName\n     * @property {string|null} [clientVersion] StatsContext clientVersion\n     */\n\n    /**\n     * Constructs a new StatsContext.\n     * @exports StatsContext\n     * @classdesc Represents a StatsContext.\n     * @implements IStatsContext\n     * @constructor\n     * @param {IStatsContext=} [properties] Properties to set\n     */\n    function StatsContext(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * StatsContext clientReferenceId.\n     * @member {string} clientReferenceId\n     * @memberof StatsContext\n     * @instance\n     */\n    StatsContext.prototype.clientReferenceId = \"\";\n\n    /**\n     * StatsContext clientName.\n     * @member {string} clientName\n     * @memberof StatsContext\n     * @instance\n     */\n    StatsContext.prototype.clientName = \"\";\n\n    /**\n     * StatsContext clientVersion.\n     * @member {string} clientVersion\n     * @memberof StatsContext\n     * @instance\n     */\n    StatsContext.prototype.clientVersion = \"\";\n\n    /**\n     * Creates a new StatsContext instance using the specified properties.\n     * @function create\n     * @memberof StatsContext\n     * @static\n     * @param {IStatsContext=} [properties] Properties to set\n     * @returns {StatsContext} StatsContext instance\n     */\n    StatsContext.create = function create(properties) {\n        return new StatsContext(properties);\n    };\n\n    /**\n     * Encodes the specified StatsContext message. Does not implicitly {@link StatsContext.verify|verify} messages.\n     * @function encode\n     * @memberof StatsContext\n     * @static\n     * @param {IStatsContext} message StatsContext message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StatsContext.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.clientReferenceId != null && Object.hasOwnProperty.call(message, \"clientReferenceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clientReferenceId);\n        if (message.clientName != null && Object.hasOwnProperty.call(message, \"clientName\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.clientName);\n        if (message.clientVersion != null && Object.hasOwnProperty.call(message, \"clientVersion\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clientVersion);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StatsContext message, length delimited. Does not implicitly {@link StatsContext.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StatsContext\n     * @static\n     * @param {IStatsContext} message StatsContext message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StatsContext.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StatsContext message from the specified reader or buffer.\n     * @function decode\n     * @memberof StatsContext\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StatsContext} StatsContext\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StatsContext.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StatsContext();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.clientReferenceId = reader.string();\n                break;\n            case 2:\n                message.clientName = reader.string();\n                break;\n            case 3:\n                message.clientVersion = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StatsContext message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StatsContext\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StatsContext} StatsContext\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StatsContext.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StatsContext message.\n     * @function verify\n     * @memberof StatsContext\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StatsContext.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.clientReferenceId != null && message.hasOwnProperty(\"clientReferenceId\"))\n            if (!$util.isString(message.clientReferenceId))\n                return \"clientReferenceId: string expected\";\n        if (message.clientName != null && message.hasOwnProperty(\"clientName\"))\n            if (!$util.isString(message.clientName))\n                return \"clientName: string expected\";\n        if (message.clientVersion != null && message.hasOwnProperty(\"clientVersion\"))\n            if (!$util.isString(message.clientVersion))\n                return \"clientVersion: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a StatsContext message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StatsContext\n     * @static\n     * @param {StatsContext} message StatsContext\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StatsContext.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.clientReferenceId = \"\";\n            object.clientName = \"\";\n            object.clientVersion = \"\";\n        }\n        if (message.clientReferenceId != null && message.hasOwnProperty(\"clientReferenceId\"))\n            object.clientReferenceId = message.clientReferenceId;\n        if (message.clientName != null && message.hasOwnProperty(\"clientName\"))\n            object.clientName = message.clientName;\n        if (message.clientVersion != null && message.hasOwnProperty(\"clientVersion\"))\n            object.clientVersion = message.clientVersion;\n        return object;\n    };\n\n    /**\n     * Converts this StatsContext to JSON.\n     * @function toJSON\n     * @memberof StatsContext\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StatsContext.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StatsContext;\n})();\n\n$root.ContextualizedQueryLatencyStats = (function() {\n\n    /**\n     * Properties of a ContextualizedQueryLatencyStats.\n     * @exports IContextualizedQueryLatencyStats\n     * @interface IContextualizedQueryLatencyStats\n     * @property {IQueryLatencyStats|null} [queryLatencyStats] ContextualizedQueryLatencyStats queryLatencyStats\n     * @property {IStatsContext|null} [context] ContextualizedQueryLatencyStats context\n     */\n\n    /**\n     * Constructs a new ContextualizedQueryLatencyStats.\n     * @exports ContextualizedQueryLatencyStats\n     * @classdesc Represents a ContextualizedQueryLatencyStats.\n     * @implements IContextualizedQueryLatencyStats\n     * @constructor\n     * @param {IContextualizedQueryLatencyStats=} [properties] Properties to set\n     */\n    function ContextualizedQueryLatencyStats(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ContextualizedQueryLatencyStats queryLatencyStats.\n     * @member {IQueryLatencyStats|null|undefined} queryLatencyStats\n     * @memberof ContextualizedQueryLatencyStats\n     * @instance\n     */\n    ContextualizedQueryLatencyStats.prototype.queryLatencyStats = null;\n\n    /**\n     * ContextualizedQueryLatencyStats context.\n     * @member {IStatsContext|null|undefined} context\n     * @memberof ContextualizedQueryLatencyStats\n     * @instance\n     */\n    ContextualizedQueryLatencyStats.prototype.context = null;\n\n    /**\n     * Creates a new ContextualizedQueryLatencyStats instance using the specified properties.\n     * @function create\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {IContextualizedQueryLatencyStats=} [properties] Properties to set\n     * @returns {ContextualizedQueryLatencyStats} ContextualizedQueryLatencyStats instance\n     */\n    ContextualizedQueryLatencyStats.create = function create(properties) {\n        return new ContextualizedQueryLatencyStats(properties);\n    };\n\n    /**\n     * Encodes the specified ContextualizedQueryLatencyStats message. Does not implicitly {@link ContextualizedQueryLatencyStats.verify|verify} messages.\n     * @function encode\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {IContextualizedQueryLatencyStats} message ContextualizedQueryLatencyStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedQueryLatencyStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.queryLatencyStats != null && Object.hasOwnProperty.call(message, \"queryLatencyStats\"))\n            $root.QueryLatencyStats.encode(message.queryLatencyStats, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.context != null && Object.hasOwnProperty.call(message, \"context\"))\n            $root.StatsContext.encode(message.context, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ContextualizedQueryLatencyStats message, length delimited. Does not implicitly {@link ContextualizedQueryLatencyStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {IContextualizedQueryLatencyStats} message ContextualizedQueryLatencyStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedQueryLatencyStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ContextualizedQueryLatencyStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ContextualizedQueryLatencyStats} ContextualizedQueryLatencyStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedQueryLatencyStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ContextualizedQueryLatencyStats();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.queryLatencyStats = $root.QueryLatencyStats.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.context = $root.StatsContext.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ContextualizedQueryLatencyStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ContextualizedQueryLatencyStats} ContextualizedQueryLatencyStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedQueryLatencyStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ContextualizedQueryLatencyStats message.\n     * @function verify\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ContextualizedQueryLatencyStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.queryLatencyStats != null && message.hasOwnProperty(\"queryLatencyStats\")) {\n            var error = $root.QueryLatencyStats.verify(message.queryLatencyStats);\n            if (error)\n                return \"queryLatencyStats.\" + error;\n        }\n        if (message.context != null && message.hasOwnProperty(\"context\")) {\n            var error = $root.StatsContext.verify(message.context);\n            if (error)\n                return \"context.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a ContextualizedQueryLatencyStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ContextualizedQueryLatencyStats\n     * @static\n     * @param {ContextualizedQueryLatencyStats} message ContextualizedQueryLatencyStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ContextualizedQueryLatencyStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.queryLatencyStats = null;\n            object.context = null;\n        }\n        if (message.queryLatencyStats != null && message.hasOwnProperty(\"queryLatencyStats\"))\n            object.queryLatencyStats = $root.QueryLatencyStats.toObject(message.queryLatencyStats, options);\n        if (message.context != null && message.hasOwnProperty(\"context\"))\n            object.context = $root.StatsContext.toObject(message.context, options);\n        return object;\n    };\n\n    /**\n     * Converts this ContextualizedQueryLatencyStats to JSON.\n     * @function toJSON\n     * @memberof ContextualizedQueryLatencyStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ContextualizedQueryLatencyStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ContextualizedQueryLatencyStats;\n})();\n\n$root.ContextualizedTypeStats = (function() {\n\n    /**\n     * Properties of a ContextualizedTypeStats.\n     * @exports IContextualizedTypeStats\n     * @interface IContextualizedTypeStats\n     * @property {IStatsContext|null} [context] ContextualizedTypeStats context\n     * @property {Object.<string,ITypeStat>|null} [perTypeStat] ContextualizedTypeStats perTypeStat\n     */\n\n    /**\n     * Constructs a new ContextualizedTypeStats.\n     * @exports ContextualizedTypeStats\n     * @classdesc Represents a ContextualizedTypeStats.\n     * @implements IContextualizedTypeStats\n     * @constructor\n     * @param {IContextualizedTypeStats=} [properties] Properties to set\n     */\n    function ContextualizedTypeStats(properties) {\n        this.perTypeStat = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ContextualizedTypeStats context.\n     * @member {IStatsContext|null|undefined} context\n     * @memberof ContextualizedTypeStats\n     * @instance\n     */\n    ContextualizedTypeStats.prototype.context = null;\n\n    /**\n     * ContextualizedTypeStats perTypeStat.\n     * @member {Object.<string,ITypeStat>} perTypeStat\n     * @memberof ContextualizedTypeStats\n     * @instance\n     */\n    ContextualizedTypeStats.prototype.perTypeStat = $util.emptyObject;\n\n    /**\n     * Creates a new ContextualizedTypeStats instance using the specified properties.\n     * @function create\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {IContextualizedTypeStats=} [properties] Properties to set\n     * @returns {ContextualizedTypeStats} ContextualizedTypeStats instance\n     */\n    ContextualizedTypeStats.create = function create(properties) {\n        return new ContextualizedTypeStats(properties);\n    };\n\n    /**\n     * Encodes the specified ContextualizedTypeStats message. Does not implicitly {@link ContextualizedTypeStats.verify|verify} messages.\n     * @function encode\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {IContextualizedTypeStats} message ContextualizedTypeStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedTypeStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.context != null && Object.hasOwnProperty.call(message, \"context\"))\n            $root.StatsContext.encode(message.context, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.perTypeStat != null && Object.hasOwnProperty.call(message, \"perTypeStat\"))\n            for (var keys = Object.keys(message.perTypeStat), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.TypeStat.encode(message.perTypeStat[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ContextualizedTypeStats message, length delimited. Does not implicitly {@link ContextualizedTypeStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {IContextualizedTypeStats} message ContextualizedTypeStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedTypeStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ContextualizedTypeStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ContextualizedTypeStats} ContextualizedTypeStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedTypeStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ContextualizedTypeStats(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.context = $root.StatsContext.decode(reader, reader.uint32());\n                break;\n            case 2:\n                reader.skip().pos++;\n                if (message.perTypeStat === $util.emptyObject)\n                    message.perTypeStat = {};\n                key = reader.string();\n                reader.pos++;\n                message.perTypeStat[key] = $root.TypeStat.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ContextualizedTypeStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ContextualizedTypeStats} ContextualizedTypeStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedTypeStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ContextualizedTypeStats message.\n     * @function verify\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ContextualizedTypeStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.context != null && message.hasOwnProperty(\"context\")) {\n            var error = $root.StatsContext.verify(message.context);\n            if (error)\n                return \"context.\" + error;\n        }\n        if (message.perTypeStat != null && message.hasOwnProperty(\"perTypeStat\")) {\n            if (!$util.isObject(message.perTypeStat))\n                return \"perTypeStat: object expected\";\n            var key = Object.keys(message.perTypeStat);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.TypeStat.verify(message.perTypeStat[key[i]]);\n                if (error)\n                    return \"perTypeStat.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a ContextualizedTypeStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ContextualizedTypeStats\n     * @static\n     * @param {ContextualizedTypeStats} message ContextualizedTypeStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ContextualizedTypeStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.perTypeStat = {};\n        if (options.defaults)\n            object.context = null;\n        if (message.context != null && message.hasOwnProperty(\"context\"))\n            object.context = $root.StatsContext.toObject(message.context, options);\n        var keys2;\n        if (message.perTypeStat && (keys2 = Object.keys(message.perTypeStat)).length) {\n            object.perTypeStat = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.perTypeStat[keys2[j]] = $root.TypeStat.toObject(message.perTypeStat[keys2[j]], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ContextualizedTypeStats to JSON.\n     * @function toJSON\n     * @memberof ContextualizedTypeStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ContextualizedTypeStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ContextualizedTypeStats;\n})();\n\n$root.FieldStat = (function() {\n\n    /**\n     * Properties of a FieldStat.\n     * @exports IFieldStat\n     * @interface IFieldStat\n     * @property {string|null} [returnType] FieldStat returnType\n     * @property {number|null} [errorsCount] FieldStat errorsCount\n     * @property {number|null} [count] FieldStat count\n     * @property {number|null} [requestsWithErrorsCount] FieldStat requestsWithErrorsCount\n     * @property {$protobuf.ToArray.<number>|Array.<number>|null} [latencyCount] FieldStat latencyCount\n     */\n\n    /**\n     * Constructs a new FieldStat.\n     * @exports FieldStat\n     * @classdesc Represents a FieldStat.\n     * @implements IFieldStat\n     * @constructor\n     * @param {IFieldStat=} [properties] Properties to set\n     */\n    function FieldStat(properties) {\n        this.latencyCount = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * FieldStat returnType.\n     * @member {string} returnType\n     * @memberof FieldStat\n     * @instance\n     */\n    FieldStat.prototype.returnType = \"\";\n\n    /**\n     * FieldStat errorsCount.\n     * @member {number} errorsCount\n     * @memberof FieldStat\n     * @instance\n     */\n    FieldStat.prototype.errorsCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * FieldStat count.\n     * @member {number} count\n     * @memberof FieldStat\n     * @instance\n     */\n    FieldStat.prototype.count = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * FieldStat requestsWithErrorsCount.\n     * @member {number} requestsWithErrorsCount\n     * @memberof FieldStat\n     * @instance\n     */\n    FieldStat.prototype.requestsWithErrorsCount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * FieldStat latencyCount.\n     * @member {Array.<number>} latencyCount\n     * @memberof FieldStat\n     * @instance\n     */\n    FieldStat.prototype.latencyCount = $util.emptyArray;\n\n    /**\n     * Creates a new FieldStat instance using the specified properties.\n     * @function create\n     * @memberof FieldStat\n     * @static\n     * @param {IFieldStat=} [properties] Properties to set\n     * @returns {FieldStat} FieldStat instance\n     */\n    FieldStat.create = function create(properties) {\n        return new FieldStat(properties);\n    };\n\n    /**\n     * Encodes the specified FieldStat message. Does not implicitly {@link FieldStat.verify|verify} messages.\n     * @function encode\n     * @memberof FieldStat\n     * @static\n     * @param {IFieldStat} message FieldStat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FieldStat.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.returnType != null && Object.hasOwnProperty.call(message, \"returnType\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.returnType);\n        if (message.errorsCount != null && Object.hasOwnProperty.call(message, \"errorsCount\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.errorsCount);\n        if (message.count != null && Object.hasOwnProperty.call(message, \"count\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.count);\n        if (message.requestsWithErrorsCount != null && Object.hasOwnProperty.call(message, \"requestsWithErrorsCount\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.requestsWithErrorsCount);\n        var array9;\n        if (message.latencyCount != null && message.latencyCount.toArray)\n            array9 = message.latencyCount.toArray();\n        else\n            array9 = message.latencyCount;\n        if (array9 != null && array9.length) {\n            writer.uint32(/* id 9, wireType 2 =*/74).fork();\n            for (var i = 0; i < array9.length; ++i)\n                writer.sint64(array9[i]);\n            writer.ldelim();\n        }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified FieldStat message, length delimited. Does not implicitly {@link FieldStat.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof FieldStat\n     * @static\n     * @param {IFieldStat} message FieldStat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FieldStat.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a FieldStat message from the specified reader or buffer.\n     * @function decode\n     * @memberof FieldStat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {FieldStat} FieldStat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FieldStat.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FieldStat();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                message.returnType = reader.string();\n                break;\n            case 4:\n                message.errorsCount = reader.uint64();\n                break;\n            case 5:\n                message.count = reader.uint64();\n                break;\n            case 6:\n                message.requestsWithErrorsCount = reader.uint64();\n                break;\n            case 9:\n                if (!(message.latencyCount && message.latencyCount.length))\n                    message.latencyCount = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.latencyCount.push(reader.sint64());\n                } else\n                    message.latencyCount.push(reader.sint64());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a FieldStat message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof FieldStat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {FieldStat} FieldStat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FieldStat.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a FieldStat message.\n     * @function verify\n     * @memberof FieldStat\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    FieldStat.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.returnType != null && message.hasOwnProperty(\"returnType\"))\n            if (!$util.isString(message.returnType))\n                return \"returnType: string expected\";\n        if (message.errorsCount != null && message.hasOwnProperty(\"errorsCount\"))\n            if (!$util.isInteger(message.errorsCount) && !(message.errorsCount && $util.isInteger(message.errorsCount.low) && $util.isInteger(message.errorsCount.high)))\n                return \"errorsCount: integer|Long expected\";\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            if (!$util.isInteger(message.count) && !(message.count && $util.isInteger(message.count.low) && $util.isInteger(message.count.high)))\n                return \"count: integer|Long expected\";\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (!$util.isInteger(message.requestsWithErrorsCount) && !(message.requestsWithErrorsCount && $util.isInteger(message.requestsWithErrorsCount.low) && $util.isInteger(message.requestsWithErrorsCount.high)))\n                return \"requestsWithErrorsCount: integer|Long expected\";\n        if (message.latencyCount != null && message.hasOwnProperty(\"latencyCount\")) {\n            var array9;\n            if (message.latencyCount != null && message.latencyCount.toArray)\n                array9 = message.latencyCount.toArray();\n            else\n                array9 = message.latencyCount;\n            if (!Array.isArray(array9))\n                return \"latencyCount: array expected\";\n            for (var i = 0; i < array9.length; ++i)\n                if (!$util.isInteger(array9[i]) && !(array9[i] && $util.isInteger(array9[i].low) && $util.isInteger(array9[i].high)))\n                    return \"latencyCount: integer|Long[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a FieldStat message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof FieldStat\n     * @static\n     * @param {FieldStat} message FieldStat\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    FieldStat.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.latencyCount = [];\n        if (options.defaults) {\n            object.returnType = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.errorsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.errorsCount = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.count = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.count = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.requestsWithErrorsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.requestsWithErrorsCount = options.longs === String ? \"0\" : 0;\n        }\n        if (message.returnType != null && message.hasOwnProperty(\"returnType\"))\n            object.returnType = message.returnType;\n        if (message.errorsCount != null && message.hasOwnProperty(\"errorsCount\"))\n            if (typeof message.errorsCount === \"number\")\n                object.errorsCount = options.longs === String ? String(message.errorsCount) : message.errorsCount;\n            else\n                object.errorsCount = options.longs === String ? $util.Long.prototype.toString.call(message.errorsCount) : options.longs === Number ? new $util.LongBits(message.errorsCount.low >>> 0, message.errorsCount.high >>> 0).toNumber(true) : message.errorsCount;\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            if (typeof message.count === \"number\")\n                object.count = options.longs === String ? String(message.count) : message.count;\n            else\n                object.count = options.longs === String ? $util.Long.prototype.toString.call(message.count) : options.longs === Number ? new $util.LongBits(message.count.low >>> 0, message.count.high >>> 0).toNumber(true) : message.count;\n        if (message.requestsWithErrorsCount != null && message.hasOwnProperty(\"requestsWithErrorsCount\"))\n            if (typeof message.requestsWithErrorsCount === \"number\")\n                object.requestsWithErrorsCount = options.longs === String ? String(message.requestsWithErrorsCount) : message.requestsWithErrorsCount;\n            else\n                object.requestsWithErrorsCount = options.longs === String ? $util.Long.prototype.toString.call(message.requestsWithErrorsCount) : options.longs === Number ? new $util.LongBits(message.requestsWithErrorsCount.low >>> 0, message.requestsWithErrorsCount.high >>> 0).toNumber(true) : message.requestsWithErrorsCount;\n        if (message.latencyCount && message.latencyCount.length) {\n            object.latencyCount = [];\n            for (var j = 0; j < message.latencyCount.length; ++j)\n                if (typeof message.latencyCount[j] === \"number\")\n                    object.latencyCount[j] = options.longs === String ? String(message.latencyCount[j]) : message.latencyCount[j];\n                else\n                    object.latencyCount[j] = options.longs === String ? $util.Long.prototype.toString.call(message.latencyCount[j]) : options.longs === Number ? new $util.LongBits(message.latencyCount[j].low >>> 0, message.latencyCount[j].high >>> 0).toNumber() : message.latencyCount[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this FieldStat to JSON.\n     * @function toJSON\n     * @memberof FieldStat\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    FieldStat.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return FieldStat;\n})();\n\n$root.TypeStat = (function() {\n\n    /**\n     * Properties of a TypeStat.\n     * @exports ITypeStat\n     * @interface ITypeStat\n     * @property {Object.<string,IFieldStat>|null} [perFieldStat] TypeStat perFieldStat\n     */\n\n    /**\n     * Constructs a new TypeStat.\n     * @exports TypeStat\n     * @classdesc Represents a TypeStat.\n     * @implements ITypeStat\n     * @constructor\n     * @param {ITypeStat=} [properties] Properties to set\n     */\n    function TypeStat(properties) {\n        this.perFieldStat = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TypeStat perFieldStat.\n     * @member {Object.<string,IFieldStat>} perFieldStat\n     * @memberof TypeStat\n     * @instance\n     */\n    TypeStat.prototype.perFieldStat = $util.emptyObject;\n\n    /**\n     * Creates a new TypeStat instance using the specified properties.\n     * @function create\n     * @memberof TypeStat\n     * @static\n     * @param {ITypeStat=} [properties] Properties to set\n     * @returns {TypeStat} TypeStat instance\n     */\n    TypeStat.create = function create(properties) {\n        return new TypeStat(properties);\n    };\n\n    /**\n     * Encodes the specified TypeStat message. Does not implicitly {@link TypeStat.verify|verify} messages.\n     * @function encode\n     * @memberof TypeStat\n     * @static\n     * @param {ITypeStat} message TypeStat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TypeStat.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.perFieldStat != null && Object.hasOwnProperty.call(message, \"perFieldStat\"))\n            for (var keys = Object.keys(message.perFieldStat), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.FieldStat.encode(message.perFieldStat[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TypeStat message, length delimited. Does not implicitly {@link TypeStat.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TypeStat\n     * @static\n     * @param {ITypeStat} message TypeStat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TypeStat.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TypeStat message from the specified reader or buffer.\n     * @function decode\n     * @memberof TypeStat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TypeStat} TypeStat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TypeStat.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TypeStat(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                reader.skip().pos++;\n                if (message.perFieldStat === $util.emptyObject)\n                    message.perFieldStat = {};\n                key = reader.string();\n                reader.pos++;\n                message.perFieldStat[key] = $root.FieldStat.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TypeStat message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TypeStat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TypeStat} TypeStat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TypeStat.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TypeStat message.\n     * @function verify\n     * @memberof TypeStat\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TypeStat.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.perFieldStat != null && message.hasOwnProperty(\"perFieldStat\")) {\n            if (!$util.isObject(message.perFieldStat))\n                return \"perFieldStat: object expected\";\n            var key = Object.keys(message.perFieldStat);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.FieldStat.verify(message.perFieldStat[key[i]]);\n                if (error)\n                    return \"perFieldStat.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a TypeStat message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TypeStat\n     * @static\n     * @param {TypeStat} message TypeStat\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TypeStat.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.perFieldStat = {};\n        var keys2;\n        if (message.perFieldStat && (keys2 = Object.keys(message.perFieldStat)).length) {\n            object.perFieldStat = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.perFieldStat[keys2[j]] = $root.FieldStat.toObject(message.perFieldStat[keys2[j]], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this TypeStat to JSON.\n     * @function toJSON\n     * @memberof TypeStat\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TypeStat.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TypeStat;\n})();\n\n$root.Field = (function() {\n\n    /**\n     * Properties of a Field.\n     * @exports IField\n     * @interface IField\n     * @property {string|null} [name] Field name\n     * @property {string|null} [returnType] Field returnType\n     */\n\n    /**\n     * Constructs a new Field.\n     * @exports Field\n     * @classdesc Represents a Field.\n     * @implements IField\n     * @constructor\n     * @param {IField=} [properties] Properties to set\n     */\n    function Field(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Field name.\n     * @member {string} name\n     * @memberof Field\n     * @instance\n     */\n    Field.prototype.name = \"\";\n\n    /**\n     * Field returnType.\n     * @member {string} returnType\n     * @memberof Field\n     * @instance\n     */\n    Field.prototype.returnType = \"\";\n\n    /**\n     * Creates a new Field instance using the specified properties.\n     * @function create\n     * @memberof Field\n     * @static\n     * @param {IField=} [properties] Properties to set\n     * @returns {Field} Field instance\n     */\n    Field.create = function create(properties) {\n        return new Field(properties);\n    };\n\n    /**\n     * Encodes the specified Field message. Does not implicitly {@link Field.verify|verify} messages.\n     * @function encode\n     * @memberof Field\n     * @static\n     * @param {IField} message Field message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Field.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n        if (message.returnType != null && Object.hasOwnProperty.call(message, \"returnType\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.returnType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Field message, length delimited. Does not implicitly {@link Field.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Field\n     * @static\n     * @param {IField} message Field message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Field.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Field message from the specified reader or buffer.\n     * @function decode\n     * @memberof Field\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Field} Field\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Field.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Field();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 2:\n                message.name = reader.string();\n                break;\n            case 3:\n                message.returnType = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Field message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Field\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Field} Field\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Field.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Field message.\n     * @function verify\n     * @memberof Field\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Field.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.returnType != null && message.hasOwnProperty(\"returnType\"))\n            if (!$util.isString(message.returnType))\n                return \"returnType: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a Field message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Field\n     * @static\n     * @param {Field} message Field\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Field.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.name = \"\";\n            object.returnType = \"\";\n        }\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.returnType != null && message.hasOwnProperty(\"returnType\"))\n            object.returnType = message.returnType;\n        return object;\n    };\n\n    /**\n     * Converts this Field to JSON.\n     * @function toJSON\n     * @memberof Field\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Field.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Field;\n})();\n\n$root.Type = (function() {\n\n    /**\n     * Properties of a Type.\n     * @exports IType\n     * @interface IType\n     * @property {string|null} [name] Type name\n     * @property {Array.<IField>|null} [field] Type field\n     */\n\n    /**\n     * Constructs a new Type.\n     * @exports Type\n     * @classdesc Represents a Type.\n     * @implements IType\n     * @constructor\n     * @param {IType=} [properties] Properties to set\n     */\n    function Type(properties) {\n        this.field = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Type name.\n     * @member {string} name\n     * @memberof Type\n     * @instance\n     */\n    Type.prototype.name = \"\";\n\n    /**\n     * Type field.\n     * @member {Array.<IField>} field\n     * @memberof Type\n     * @instance\n     */\n    Type.prototype.field = $util.emptyArray;\n\n    /**\n     * Creates a new Type instance using the specified properties.\n     * @function create\n     * @memberof Type\n     * @static\n     * @param {IType=} [properties] Properties to set\n     * @returns {Type} Type instance\n     */\n    Type.create = function create(properties) {\n        return new Type(properties);\n    };\n\n    /**\n     * Encodes the specified Type message. Does not implicitly {@link Type.verify|verify} messages.\n     * @function encode\n     * @memberof Type\n     * @static\n     * @param {IType} message Type message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Type.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n        if (message.field != null && message.field.length)\n            for (var i = 0; i < message.field.length; ++i)\n                $root.Field.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Type message, length delimited. Does not implicitly {@link Type.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Type\n     * @static\n     * @param {IType} message Type message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Type.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Type message from the specified reader or buffer.\n     * @function decode\n     * @memberof Type\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Type} Type\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Type.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Type();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.name = reader.string();\n                break;\n            case 2:\n                if (!(message.field && message.field.length))\n                    message.field = [];\n                message.field.push($root.Field.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Type message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Type\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Type} Type\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Type.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Type message.\n     * @function verify\n     * @memberof Type\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Type.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.field != null && message.hasOwnProperty(\"field\")) {\n            if (!Array.isArray(message.field))\n                return \"field: array expected\";\n            for (var i = 0; i < message.field.length; ++i) {\n                var error = $root.Field.verify(message.field[i]);\n                if (error)\n                    return \"field.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a Type message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Type\n     * @static\n     * @param {Type} message Type\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Type.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.field = [];\n        if (options.defaults)\n            object.name = \"\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.field && message.field.length) {\n            object.field = [];\n            for (var j = 0; j < message.field.length; ++j)\n                object.field[j] = $root.Field.toObject(message.field[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Type to JSON.\n     * @function toJSON\n     * @memberof Type\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Type.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Type;\n})();\n\n$root.Report = (function() {\n\n    /**\n     * Properties of a Report.\n     * @exports IReport\n     * @interface IReport\n     * @property {IReportHeader|null} [header] Report header\n     * @property {Object.<string,ITracesAndStats>|null} [tracesPerQuery] Report tracesPerQuery\n     * @property {google.protobuf.ITimestamp|null} [endTime] Report endTime\n     */\n\n    /**\n     * Constructs a new Report.\n     * @exports Report\n     * @classdesc Represents a Report.\n     * @implements IReport\n     * @constructor\n     * @param {IReport=} [properties] Properties to set\n     */\n    function Report(properties) {\n        this.tracesPerQuery = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Report header.\n     * @member {IReportHeader|null|undefined} header\n     * @memberof Report\n     * @instance\n     */\n    Report.prototype.header = null;\n\n    /**\n     * Report tracesPerQuery.\n     * @member {Object.<string,ITracesAndStats>} tracesPerQuery\n     * @memberof Report\n     * @instance\n     */\n    Report.prototype.tracesPerQuery = $util.emptyObject;\n\n    /**\n     * Report endTime.\n     * @member {google.protobuf.ITimestamp|null|undefined} endTime\n     * @memberof Report\n     * @instance\n     */\n    Report.prototype.endTime = null;\n\n    /**\n     * Creates a new Report instance using the specified properties.\n     * @function create\n     * @memberof Report\n     * @static\n     * @param {IReport=} [properties] Properties to set\n     * @returns {Report} Report instance\n     */\n    Report.create = function create(properties) {\n        return new Report(properties);\n    };\n\n    /**\n     * Encodes the specified Report message. Does not implicitly {@link Report.verify|verify} messages.\n     * @function encode\n     * @memberof Report\n     * @static\n     * @param {IReport} message Report message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Report.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.header != null && Object.hasOwnProperty.call(message, \"header\"))\n            $root.ReportHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n            $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.tracesPerQuery != null && Object.hasOwnProperty.call(message, \"tracesPerQuery\"))\n            for (var keys = Object.keys(message.tracesPerQuery), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.TracesAndStats.encode(message.tracesPerQuery[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Report message, length delimited. Does not implicitly {@link Report.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Report\n     * @static\n     * @param {IReport} message Report message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Report.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Report message from the specified reader or buffer.\n     * @function decode\n     * @memberof Report\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Report} Report\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Report.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Report(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.header = $root.ReportHeader.decode(reader, reader.uint32());\n                break;\n            case 5:\n                reader.skip().pos++;\n                if (message.tracesPerQuery === $util.emptyObject)\n                    message.tracesPerQuery = {};\n                key = reader.string();\n                reader.pos++;\n                message.tracesPerQuery[key] = $root.TracesAndStats.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Report message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Report\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Report} Report\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Report.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Report message.\n     * @function verify\n     * @memberof Report\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Report.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.header != null && message.hasOwnProperty(\"header\")) {\n            var error = $root.ReportHeader.verify(message.header);\n            if (error)\n                return \"header.\" + error;\n        }\n        if (message.tracesPerQuery != null && message.hasOwnProperty(\"tracesPerQuery\")) {\n            if (!$util.isObject(message.tracesPerQuery))\n                return \"tracesPerQuery: object expected\";\n            var key = Object.keys(message.tracesPerQuery);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.TracesAndStats.verify(message.tracesPerQuery[key[i]]);\n                if (error)\n                    return \"tracesPerQuery.\" + error;\n            }\n        }\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\")) {\n            var error = $root.google.protobuf.Timestamp.verify(message.endTime);\n            if (error)\n                return \"endTime.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a Report message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Report\n     * @static\n     * @param {Report} message Report\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Report.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.tracesPerQuery = {};\n        if (options.defaults) {\n            object.header = null;\n            object.endTime = null;\n        }\n        if (message.header != null && message.hasOwnProperty(\"header\"))\n            object.header = $root.ReportHeader.toObject(message.header, options);\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);\n        var keys2;\n        if (message.tracesPerQuery && (keys2 = Object.keys(message.tracesPerQuery)).length) {\n            object.tracesPerQuery = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.tracesPerQuery[keys2[j]] = $root.TracesAndStats.toObject(message.tracesPerQuery[keys2[j]], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Report to JSON.\n     * @function toJSON\n     * @memberof Report\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Report.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Report;\n})();\n\n$root.ContextualizedStats = (function() {\n\n    /**\n     * Properties of a ContextualizedStats.\n     * @exports IContextualizedStats\n     * @interface IContextualizedStats\n     * @property {IStatsContext|null} [context] ContextualizedStats context\n     * @property {IQueryLatencyStats|null} [queryLatencyStats] ContextualizedStats queryLatencyStats\n     * @property {Object.<string,ITypeStat>|null} [perTypeStat] ContextualizedStats perTypeStat\n     */\n\n    /**\n     * Constructs a new ContextualizedStats.\n     * @exports ContextualizedStats\n     * @classdesc Represents a ContextualizedStats.\n     * @implements IContextualizedStats\n     * @constructor\n     * @param {IContextualizedStats=} [properties] Properties to set\n     */\n    function ContextualizedStats(properties) {\n        this.perTypeStat = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ContextualizedStats context.\n     * @member {IStatsContext|null|undefined} context\n     * @memberof ContextualizedStats\n     * @instance\n     */\n    ContextualizedStats.prototype.context = null;\n\n    /**\n     * ContextualizedStats queryLatencyStats.\n     * @member {IQueryLatencyStats|null|undefined} queryLatencyStats\n     * @memberof ContextualizedStats\n     * @instance\n     */\n    ContextualizedStats.prototype.queryLatencyStats = null;\n\n    /**\n     * ContextualizedStats perTypeStat.\n     * @member {Object.<string,ITypeStat>} perTypeStat\n     * @memberof ContextualizedStats\n     * @instance\n     */\n    ContextualizedStats.prototype.perTypeStat = $util.emptyObject;\n\n    /**\n     * Creates a new ContextualizedStats instance using the specified properties.\n     * @function create\n     * @memberof ContextualizedStats\n     * @static\n     * @param {IContextualizedStats=} [properties] Properties to set\n     * @returns {ContextualizedStats} ContextualizedStats instance\n     */\n    ContextualizedStats.create = function create(properties) {\n        return new ContextualizedStats(properties);\n    };\n\n    /**\n     * Encodes the specified ContextualizedStats message. Does not implicitly {@link ContextualizedStats.verify|verify} messages.\n     * @function encode\n     * @memberof ContextualizedStats\n     * @static\n     * @param {IContextualizedStats} message ContextualizedStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.context != null && Object.hasOwnProperty.call(message, \"context\"))\n            $root.StatsContext.encode(message.context, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.queryLatencyStats != null && Object.hasOwnProperty.call(message, \"queryLatencyStats\"))\n            $root.QueryLatencyStats.encode(message.queryLatencyStats, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.perTypeStat != null && Object.hasOwnProperty.call(message, \"perTypeStat\"))\n            for (var keys = Object.keys(message.perTypeStat), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.TypeStat.encode(message.perTypeStat[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ContextualizedStats message, length delimited. Does not implicitly {@link ContextualizedStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ContextualizedStats\n     * @static\n     * @param {IContextualizedStats} message ContextualizedStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContextualizedStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ContextualizedStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof ContextualizedStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ContextualizedStats} ContextualizedStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ContextualizedStats(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.context = $root.StatsContext.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.queryLatencyStats = $root.QueryLatencyStats.decode(reader, reader.uint32());\n                break;\n            case 3:\n                reader.skip().pos++;\n                if (message.perTypeStat === $util.emptyObject)\n                    message.perTypeStat = {};\n                key = reader.string();\n                reader.pos++;\n                message.perTypeStat[key] = $root.TypeStat.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ContextualizedStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ContextualizedStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ContextualizedStats} ContextualizedStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContextualizedStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ContextualizedStats message.\n     * @function verify\n     * @memberof ContextualizedStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ContextualizedStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.context != null && message.hasOwnProperty(\"context\")) {\n            var error = $root.StatsContext.verify(message.context);\n            if (error)\n                return \"context.\" + error;\n        }\n        if (message.queryLatencyStats != null && message.hasOwnProperty(\"queryLatencyStats\")) {\n            var error = $root.QueryLatencyStats.verify(message.queryLatencyStats);\n            if (error)\n                return \"queryLatencyStats.\" + error;\n        }\n        if (message.perTypeStat != null && message.hasOwnProperty(\"perTypeStat\")) {\n            if (!$util.isObject(message.perTypeStat))\n                return \"perTypeStat: object expected\";\n            var key = Object.keys(message.perTypeStat);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.TypeStat.verify(message.perTypeStat[key[i]]);\n                if (error)\n                    return \"perTypeStat.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a ContextualizedStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ContextualizedStats\n     * @static\n     * @param {ContextualizedStats} message ContextualizedStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ContextualizedStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.perTypeStat = {};\n        if (options.defaults) {\n            object.context = null;\n            object.queryLatencyStats = null;\n        }\n        if (message.context != null && message.hasOwnProperty(\"context\"))\n            object.context = $root.StatsContext.toObject(message.context, options);\n        if (message.queryLatencyStats != null && message.hasOwnProperty(\"queryLatencyStats\"))\n            object.queryLatencyStats = $root.QueryLatencyStats.toObject(message.queryLatencyStats, options);\n        var keys2;\n        if (message.perTypeStat && (keys2 = Object.keys(message.perTypeStat)).length) {\n            object.perTypeStat = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.perTypeStat[keys2[j]] = $root.TypeStat.toObject(message.perTypeStat[keys2[j]], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ContextualizedStats to JSON.\n     * @function toJSON\n     * @memberof ContextualizedStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ContextualizedStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ContextualizedStats;\n})();\n\n$root.TracesAndStats = (function() {\n\n    /**\n     * Properties of a TracesAndStats.\n     * @exports ITracesAndStats\n     * @interface ITracesAndStats\n     * @property {Array.<ITrace|Uint8Array>|null} [trace] TracesAndStats trace\n     * @property {$protobuf.ToArray.<IContextualizedStats>|Array.<IContextualizedStats>|null} [statsWithContext] TracesAndStats statsWithContext\n     * @property {Array.<ITrace|Uint8Array>|null} [internalTracesContributingToStats] TracesAndStats internalTracesContributingToStats\n     */\n\n    /**\n     * Constructs a new TracesAndStats.\n     * @exports TracesAndStats\n     * @classdesc Represents a TracesAndStats.\n     * @implements ITracesAndStats\n     * @constructor\n     * @param {ITracesAndStats=} [properties] Properties to set\n     */\n    function TracesAndStats(properties) {\n        this.trace = [];\n        this.statsWithContext = [];\n        this.internalTracesContributingToStats = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TracesAndStats trace.\n     * @member {Array.<ITrace|Uint8Array>} trace\n     * @memberof TracesAndStats\n     * @instance\n     */\n    TracesAndStats.prototype.trace = $util.emptyArray;\n\n    /**\n     * TracesAndStats statsWithContext.\n     * @member {Array.<IContextualizedStats>} statsWithContext\n     * @memberof TracesAndStats\n     * @instance\n     */\n    TracesAndStats.prototype.statsWithContext = $util.emptyArray;\n\n    /**\n     * TracesAndStats internalTracesContributingToStats.\n     * @member {Array.<ITrace|Uint8Array>} internalTracesContributingToStats\n     * @memberof TracesAndStats\n     * @instance\n     */\n    TracesAndStats.prototype.internalTracesContributingToStats = $util.emptyArray;\n\n    /**\n     * Creates a new TracesAndStats instance using the specified properties.\n     * @function create\n     * @memberof TracesAndStats\n     * @static\n     * @param {ITracesAndStats=} [properties] Properties to set\n     * @returns {TracesAndStats} TracesAndStats instance\n     */\n    TracesAndStats.create = function create(properties) {\n        return new TracesAndStats(properties);\n    };\n\n    /**\n     * Encodes the specified TracesAndStats message. Does not implicitly {@link TracesAndStats.verify|verify} messages.\n     * @function encode\n     * @memberof TracesAndStats\n     * @static\n     * @param {ITracesAndStats} message TracesAndStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TracesAndStats.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trace != null && message.trace.length)\n            for (var i = 0; i < message.trace.length; ++i)\n                if (message.trace[i] instanceof Uint8Array) {\n                    writer.uint32(/* id 1, wireType 2 =*/10);\n                    writer.bytes(message.trace[i]);\n                } else\n                    $root.Trace.encode(message.trace[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        var array2;\n        if (message.statsWithContext != null && message.statsWithContext.toArray)\n            array2 = message.statsWithContext.toArray();\n        else\n            array2 = message.statsWithContext;\n        if (array2 != null && array2.length)\n            for (var i = 0; i < array2.length; ++i)\n                $root.ContextualizedStats.encode(array2[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.internalTracesContributingToStats != null && message.internalTracesContributingToStats.length)\n            for (var i = 0; i < message.internalTracesContributingToStats.length; ++i)\n                if (message.internalTracesContributingToStats[i] instanceof Uint8Array) {\n                    writer.uint32(/* id 3, wireType 2 =*/26);\n                    writer.bytes(message.internalTracesContributingToStats[i]);\n                } else\n                    $root.Trace.encode(message.internalTracesContributingToStats[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TracesAndStats message, length delimited. Does not implicitly {@link TracesAndStats.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TracesAndStats\n     * @static\n     * @param {ITracesAndStats} message TracesAndStats message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TracesAndStats.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TracesAndStats message from the specified reader or buffer.\n     * @function decode\n     * @memberof TracesAndStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TracesAndStats} TracesAndStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TracesAndStats.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TracesAndStats();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.trace && message.trace.length))\n                    message.trace = [];\n                message.trace.push($root.Trace.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.statsWithContext && message.statsWithContext.length))\n                    message.statsWithContext = [];\n                message.statsWithContext.push($root.ContextualizedStats.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.internalTracesContributingToStats && message.internalTracesContributingToStats.length))\n                    message.internalTracesContributingToStats = [];\n                message.internalTracesContributingToStats.push($root.Trace.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TracesAndStats message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TracesAndStats\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TracesAndStats} TracesAndStats\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TracesAndStats.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TracesAndStats message.\n     * @function verify\n     * @memberof TracesAndStats\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TracesAndStats.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trace != null && message.hasOwnProperty(\"trace\")) {\n            if (!Array.isArray(message.trace))\n                return \"trace: array expected\";\n            for (var i = 0; i < message.trace.length; ++i)\n                if (!(message.trace[i] instanceof Uint8Array)) {\n                    var error = $root.Trace.verify(message.trace[i]);\n                    if (error)\n                        return \"trace.\" + error;\n                }\n        }\n        if (message.statsWithContext != null && message.hasOwnProperty(\"statsWithContext\")) {\n            var array2;\n            if (message.statsWithContext != null && message.statsWithContext.toArray)\n                array2 = message.statsWithContext.toArray();\n            else\n                array2 = message.statsWithContext;\n            if (!Array.isArray(array2))\n                return \"statsWithContext: array expected\";\n            for (var i = 0; i < array2.length; ++i) {\n                var error = $root.ContextualizedStats.verify(array2[i]);\n                if (error)\n                    return \"statsWithContext.\" + error;\n            }\n        }\n        if (message.internalTracesContributingToStats != null && message.hasOwnProperty(\"internalTracesContributingToStats\")) {\n            if (!Array.isArray(message.internalTracesContributingToStats))\n                return \"internalTracesContributingToStats: array expected\";\n            for (var i = 0; i < message.internalTracesContributingToStats.length; ++i)\n                if (!(message.internalTracesContributingToStats[i] instanceof Uint8Array)) {\n                    var error = $root.Trace.verify(message.internalTracesContributingToStats[i]);\n                    if (error)\n                        return \"internalTracesContributingToStats.\" + error;\n                }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a plain object from a TracesAndStats message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TracesAndStats\n     * @static\n     * @param {TracesAndStats} message TracesAndStats\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TracesAndStats.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.trace = [];\n            object.statsWithContext = [];\n            object.internalTracesContributingToStats = [];\n        }\n        if (message.trace && message.trace.length) {\n            object.trace = [];\n            for (var j = 0; j < message.trace.length; ++j)\n                object.trace[j] = $root.Trace.toObject(message.trace[j], options);\n        }\n        if (message.statsWithContext && message.statsWithContext.length) {\n            object.statsWithContext = [];\n            for (var j = 0; j < message.statsWithContext.length; ++j)\n                object.statsWithContext[j] = $root.ContextualizedStats.toObject(message.statsWithContext[j], options);\n        }\n        if (message.internalTracesContributingToStats && message.internalTracesContributingToStats.length) {\n            object.internalTracesContributingToStats = [];\n            for (var j = 0; j < message.internalTracesContributingToStats.length; ++j)\n                object.internalTracesContributingToStats[j] = $root.Trace.toObject(message.internalTracesContributingToStats[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this TracesAndStats to JSON.\n     * @function toJSON\n     * @memberof TracesAndStats\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TracesAndStats.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TracesAndStats;\n})();\n\n$root.google = (function() {\n\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    var google = {};\n\n    google.protobuf = (function() {\n\n        /**\n         * Namespace protobuf.\n         * @memberof google\n         * @namespace\n         */\n        var protobuf = {};\n\n        protobuf.Timestamp = (function() {\n\n            /**\n             * Properties of a Timestamp.\n             * @memberof google.protobuf\n             * @interface ITimestamp\n             * @property {number|null} [seconds] Timestamp seconds\n             * @property {number|null} [nanos] Timestamp nanos\n             */\n\n            /**\n             * Constructs a new Timestamp.\n             * @memberof google.protobuf\n             * @classdesc Represents a Timestamp.\n             * @implements ITimestamp\n             * @constructor\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             */\n            function Timestamp(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Timestamp seconds.\n             * @member {number} seconds\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Timestamp nanos.\n             * @member {number} nanos\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.nanos = 0;\n\n            /**\n             * Creates a new Timestamp instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             * @returns {google.protobuf.Timestamp} Timestamp instance\n             */\n            Timestamp.create = function create(properties) {\n                return new Timestamp(properties);\n            };\n\n            /**\n             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.seconds != null && Object.hasOwnProperty.call(message, \"seconds\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);\n                if (message.nanos != null && Object.hasOwnProperty.call(message, \"nanos\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.seconds = reader.int64();\n                        break;\n                    case 2:\n                        message.nanos = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Timestamp message.\n             * @function verify\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Timestamp.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))\n                        return \"seconds: integer|Long expected\";\n                if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                    if (!$util.isInteger(message.nanos))\n                        return \"nanos: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.Timestamp} message Timestamp\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Timestamp.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.seconds = options.longs === String ? \"0\" : 0;\n                    object.nanos = 0;\n                }\n                if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                    if (typeof message.seconds === \"number\")\n                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;\n                    else\n                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n                if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                    object.nanos = message.nanos;\n                return object;\n            };\n\n            /**\n             * Converts this Timestamp to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Timestamp.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Timestamp;\n        })();\n\n        return protobuf;\n    })();\n\n    return google;\n})();\n\nmodule.exports = $root;\n", "const protobuf = require('./protobuf');\nconst protobufJS = require('@apollo/protobufjs/minimal');\n\n// Remove Long support.  Our uint64s tend to be small (less\n// than 104 days).\n// XXX Just remove this in our fork? We already deleted\n// the generation of Long in protobuf.d.ts in the fork.\n// https://github.com/protobufjs/protobuf.js/issues/1253\nprotobufJS.util.Long = undefined;\nprotobufJS.configure();\n\nmodule.exports = protobuf;\n", null, null, null, "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n    });\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n", "// For backwards compatibility, make sure require(\"graphql-tag\") returns\n// the gql function, rather than an exports object.\nmodule.exports = require('./lib/graphql-tag.umd.js').gql;\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // \u767D\u540D\u5355\u503C\u8BF4\u660E\uFF1A\n  // true: \u5141\u8BB8\u8BE5\u5C5E\u6027\n  // Function: function (val) { } \u8FD4\u56DEtrue\u8868\u793A\u5141\u8BB8\u8BE5\u5C5E\u6027\uFF0C\u5176\u4ED6\u503C\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  // RegExp: regexp.test(val) \u8FD4\u56DEtrue\u8868\u793A\u5141\u8BB8\u8BE5\u5C5E\u6027\uFF0C\u5176\u4ED6\u503C\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  // \u9664\u4E0A\u9762\u5217\u51FA\u7684\u503C\u5916\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * \u5339\u914D\u5230\u767D\u540D\u5355\u4E0A\u7684\u4E00\u4E2A\u5C5E\u6027\u65F6\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * \u5339\u914D\u5230\u4E0D\u5728\u767D\u540D\u5355\u4E0A\u7684\u4E00\u4E2A\u5C5E\u6027\u65F6\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * \u8FC7\u6EE4\u5C5E\u6027\u503C\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n", "module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * \u89E3\u6790style\n *\n * @param {String} css\n * @param {Function} onAttr \u5904\u7406\u5C5E\u6027\u7684\u51FD\u6570\n *   \u53C2\u6570\u683C\u5F0F\uFF1A function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // \u5982\u679C\u6CA1\u6709\u6B63\u5E38\u7684\u95ED\u5408\u5706\u62EC\u53F7\uFF0C\u5219\u76F4\u63A5\u5FFD\u7565\u5F53\u524D\u5C5E\u6027\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // \u5FC5\u987B\u6709\u5C5E\u6027\u540D\u79F0\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // \u5907\u6CE8\u5F00\u59CB\n      var j = css.indexOf('*/', i + 2);\n      // \u5982\u679C\u6CA1\u6709\u6B63\u5E38\u7684\u5907\u6CE8\u7ED3\u675F\uFF0C\u5219\u540E\u9762\u7684\u90E8\u5206\u5168\u90E8\u8DF3\u8FC7\n      if (j === -1) break;\n      // \u76F4\u63A5\u5C06\u5F53\u524D\u4F4D\u7F6E\u8C03\u5230\u5907\u6CE8\u7ED3\u5C3E\uFF0C\u5E76\u4E14\u521D\u59CB\u5316\u72B6\u6001\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // \u5728\u5706\u62EC\u53F7\u91CC\u9762\uFF0C\u5FFD\u7565\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * \u8FD4\u56DE\u503C\u662F\u5426\u4E3A\u7A7A\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * \u6D45\u62F7\u8D1D\u5BF9\u8C61\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * \u521B\u5EFACSS\u8FC7\u6EE4\u5668\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // \u517C\u5BB9\u5404\u79CD\u5947\u8469\u8F93\u5165\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // \u5982\u679C\u8FC7\u6EE4\u540E value \u4E3A\u7A7A\u5219\u76F4\u63A5\u5FFD\u7565\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS\u8FC7\u6EE4\n *\n * @param {String} css \u8981\u8FC7\u6EE4\u7684CSS\u4EE3\u7801\n * @param {Object} options \u9009\u9879\uFF1AwhiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// \u8F93\u51FA\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// \u5728\u6D4F\u89C8\u5668\u7AEF\u4F7F\u7528\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n", "module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function (str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  },\n};\n", "/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"preload\",\n      \"src\",\n    ],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    figcaption: [],\n    figure: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    summary: [],\n    sup: [],\n    strong: [],\n    strike: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"playsinline\",\n      \"poster\",\n      \"preload\",\n      \"src\",\n      \"height\",\n      \"width\",\n    ],\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value.substr(0, 11) === \"data:image/\" ||\n        value.substr(0, 6) === \"ftp://\" ||\n        value.substr(0, 2) === \"./\" ||\n        value.substr(0, 3) === \"../\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 =\n  /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 =\n  /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function () {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function (tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end,\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function (html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function (pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    },\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  var retHtml = \"\";\n  var lastPos = 0;\n  while (lastPos < html.length) {\n    var i = html.indexOf(\"<!--\", lastPos);\n    if (i === -1) {\n      retHtml += html.slice(lastPos);\n      break;\n    }\n    retHtml += html.slice(lastPos, i);\n    var j = html.indexOf(\"-->\", i);\n    if (j === -1) {\n      break;\n    }\n    lastPos = j + 3;\n  }\n  return retHtml;\n}\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function (char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n", "/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html \u5982\uFF1A'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // \u9010\u4E2A\u5206\u6790\u5B57\u7B26\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n", "/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\",\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing,\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function (html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function (sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag),\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function (name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n", "/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return (\n    typeof self !== \"undefined\" &&\n    typeof DedicatedWorkerGlobalScope !== \"undefined\" &&\n    self instanceof DedicatedWorkerGlobalScope\n  );\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n", null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", null, "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n", "(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n", "/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation (callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString (callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName (obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n", "/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = eventListenerCount\n\n/**\n * Get the count of listeners on an event emitter of a specific type.\n */\n\nfunction eventListenerCount (emitter, type) {\n  return emitter.listeners(type).length\n}\n", "/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n", "/*!\n * depd\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar callSiteToString = require('./lib/compat').callSiteToString\nvar eventListenerCount = require('./lib/compat').eventListenerCount\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + callSiteToString(stack[i])\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + callSiteToString(stack[i])\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var deprecate = this // eslint-disable-line no-unused-vars\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n   // eslint-disable-next-line no-eval\n  var deprecatedfn = eval('(function (' + args + ') {\\n' +\n    '\"use strict\"\\n' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '})')\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n", "/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n", "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n", "'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n", "/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n", "try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n", "/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n", "/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n", "/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n", "/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n", "/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n", "\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n", "\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n", "/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, done)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n", "/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n", "/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // read off entire request\n      stream.resume()\n      onFinished(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n", "/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n", "/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.substr(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = str.substring(0, index) + '#'\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  return FIRST_CHAR_REGEXP.exec(str)[1]\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1],\n    suffix = match[2],\n    full = prefix;\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n", "/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Cached loaded submodules.\n * @private\n */\n\nvar modules = Object.create(null);\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  var preferredCharsets = loadModule('charset').preferredCharsets;\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  var preferredLanguages = loadModule('language').preferredLanguages;\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n\n/**\n * Load the given module.\n * @private\n */\n\nfunction loadModule(moduleName) {\n  var module = modules[moduleName];\n\n  if (module !== undefined) {\n    return module;\n  }\n\n  // This uses a switch for static require analysis\n  switch (moduleName) {\n    case 'charset':\n      module = require('./lib/charset');\n      break;\n    case 'encoding':\n      module = require('./lib/encoding');\n      break;\n    case 'language':\n      module = require('./lib/language');\n      break;\n    case 'mediaType':\n      module = require('./lib/mediaType');\n      break;\n    default:\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\n  }\n\n  // Store to prevent invoking require()\n  modules[moduleName] = module;\n\n  return module;\n}\n", "/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentValidationError = void 0;\nclass ArgumentValidationError extends Error {\n    constructor(validationErrors) {\n        super(\"Argument Validation Error\");\n        this.validationErrors = validationErrors;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ArgumentValidationError = ArgumentValidationError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CannotDetermineGraphQLTypeError = void 0;\nclass CannotDetermineGraphQLTypeError extends Error {\n    constructor(typeKind, typeName, propertyKey, parameterIndex, argName) {\n        let errorMessage = `Cannot determine GraphQL ${typeKind} type for `;\n        if (argName) {\n            errorMessage += `argument named '${argName}' of `;\n        }\n        else if (parameterIndex !== undefined) {\n            errorMessage += `parameter #${parameterIndex} of `;\n        }\n        errorMessage +=\n            `'${propertyKey}' of '${typeName}' class. ` +\n                `Is the value, that is used as its TS type or explicit type, decorated with a proper ` +\n                `decorator or is it a proper ${typeKind} value?`;\n        super(errorMessage);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.CannotDetermineGraphQLTypeError = CannotDetermineGraphQLTypeError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForbiddenError = void 0;\nclass ForbiddenError extends Error {\n    constructor() {\n        super(\"Access denied! You don't have permission for this action!\");\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ForbiddenError = ForbiddenError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneratingSchemaError = void 0;\nclass GeneratingSchemaError extends Error {\n    constructor(details) {\n        let errorMessage = \"Some errors occurred while generating GraphQL schema:\\n\";\n        errorMessage += details.map(it => `  ${it.message}\\n`);\n        errorMessage += \"Please check the `details` property of the error to get more detailed info.\";\n        super(errorMessage);\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.details = details;\n    }\n}\nexports.GeneratingSchemaError = GeneratingSchemaError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConflictingDefaultValuesError = void 0;\nclass ConflictingDefaultValuesError extends Error {\n    constructor(typeName, fieldName, defaultValueFromDecorator, defaultValueFromInitializer) {\n        super(`The '${fieldName}' field of '${typeName}' has conflicting default values. ` +\n            `Default value from decorator ('${defaultValueFromDecorator}') ` +\n            `is not equal to the property initializer value ('${defaultValueFromInitializer}').`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ConflictingDefaultValuesError = ConflictingDefaultValuesError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConflictingDefaultWithNullableError = void 0;\nclass ConflictingDefaultWithNullableError extends Error {\n    constructor(targetName, propertyName, defaultValue, nullable) {\n        super(`Wrong nullable option set for ${targetName}#${propertyName}. ` +\n            `You cannot combine default value '${defaultValue}' with nullable '${nullable}'.`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ConflictingDefaultWithNullableError = ConflictingDefaultWithNullableError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterfaceResolveTypeError = void 0;\nclass InterfaceResolveTypeError extends Error {\n    constructor(interfaceMetadata) {\n        super(`Cannot resolve type for interface ${interfaceMetadata.name}! ` +\n            `You need to return instance of object type class, not a plain object!`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.InterfaceResolveTypeError = InterfaceResolveTypeError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidDirectiveError = void 0;\nclass InvalidDirectiveError extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.InvalidDirectiveError = InvalidDirectiveError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingSubscriptionTopicsError = void 0;\nclass MissingSubscriptionTopicsError extends Error {\n    constructor(target, methodName) {\n        super(`${target.name}#${methodName} subscription has no provided topics!`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.MissingSubscriptionTopicsError = MissingSubscriptionTopicsError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoExplicitTypeError = void 0;\nclass NoExplicitTypeError extends Error {\n    constructor(typeName, propertyKey, parameterIndex, argName) {\n        let errorMessage = `Unable to infer GraphQL type from TypeScript reflection system. ` +\n            `You need to provide explicit type for `;\n        if (argName) {\n            errorMessage += `argument named '${argName}' of `;\n        }\n        else if (parameterIndex !== undefined) {\n            errorMessage += `parameter #${parameterIndex} of `;\n        }\n        errorMessage += `'${propertyKey}' of '${typeName}' class.`;\n        super(errorMessage);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.NoExplicitTypeError = NoExplicitTypeError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReflectMetadataMissingError = void 0;\nclass ReflectMetadataMissingError extends Error {\n    constructor() {\n        super(\"Looks like you've forgot to provide experimental metadata API polyfill. \" +\n            \"Please read the installation instruction for more details.\");\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ReflectMetadataMissingError = ReflectMetadataMissingError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SymbolKeysNotSupportedError = void 0;\nclass SymbolKeysNotSupportedError extends Error {\n    constructor() {\n        super(\"Symbol keys are not supported yet!\");\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.SymbolKeysNotSupportedError = SymbolKeysNotSupportedError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnauthorizedError = void 0;\nclass UnauthorizedError extends Error {\n    constructor() {\n        super(\"Access denied! You need to be authorized to perform this action!\");\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.UnauthorizedError = UnauthorizedError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnionResolveTypeError = void 0;\nclass UnionResolveTypeError extends Error {\n    constructor(unionMetadata) {\n        super(`Cannot resolve type for union ${unionMetadata.name}! ` +\n            `You need to return instance of object type class, not a plain object!`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.UnionResolveTypeError = UnionResolveTypeError;\n", "// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n", "// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n", "const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n", "const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n", "// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n", "// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureInstalledCorrectGraphQLPackage = exports.getPeerDependencyGraphQLRequirement = exports.getInstalledGraphQLVersion = void 0;\nconst semVer = require(\"semver\");\nconst errors_1 = require(\"../errors\");\nfunction getInstalledGraphQLVersion() {\n    const graphqlPackageJson = require(\"graphql/package.json\");\n    return graphqlPackageJson.version;\n}\nexports.getInstalledGraphQLVersion = getInstalledGraphQLVersion;\nfunction getPeerDependencyGraphQLRequirement() {\n    const ownPackageJson = require(\"../../package.json\");\n    return ownPackageJson.peerDependencies.graphql;\n}\nexports.getPeerDependencyGraphQLRequirement = getPeerDependencyGraphQLRequirement;\nfunction ensureInstalledCorrectGraphQLPackage() {\n    const installedVersion = getInstalledGraphQLVersion();\n    const versionRequirement = getPeerDependencyGraphQLRequirement();\n    if (!semVer.satisfies(installedVersion, versionRequirement)) {\n        throw new errors_1.UnmetGraphQLPeerDependencyError();\n    }\n}\nexports.ensureInstalledCorrectGraphQLPackage = ensureInstalledCorrectGraphQLPackage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnmetGraphQLPeerDependencyError = void 0;\nconst graphql_version_1 = require(\"../utils/graphql-version\");\nclass UnmetGraphQLPeerDependencyError extends Error {\n    constructor() {\n        super(`Looks like you use an incorrect version of the 'graphql' package: \"${graphql_version_1.getInstalledGraphQLVersion()}\". ` +\n            `Please ensure that you have installed a version ` +\n            `that meets TypeGraphQL's requirement: \"${graphql_version_1.getPeerDependencyGraphQLRequirement()}\".`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.UnmetGraphQLPeerDependencyError = UnmetGraphQLPeerDependencyError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WrongNullableListOptionError = void 0;\nclass WrongNullableListOptionError extends Error {\n    constructor(targetName, propertyName, nullable) {\n        super(`Wrong nullable option set for ${targetName}#${propertyName}. ` +\n            `You cannot combine non-list type with nullable '${nullable}'.`);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.WrongNullableListOptionError = WrongNullableListOptionError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./ArgumentValidationError\"), exports);\ntslib_1.__exportStar(require(\"./CannotDetermineGraphQLTypeError\"), exports);\ntslib_1.__exportStar(require(\"./ForbiddenError\"), exports);\ntslib_1.__exportStar(require(\"./GeneratingSchemaError\"), exports);\ntslib_1.__exportStar(require(\"./ConflictingDefaultValuesError\"), exports);\ntslib_1.__exportStar(require(\"./ConflictingDefaultWithNullableError\"), exports);\ntslib_1.__exportStar(require(\"./InterfaceResolveTypeError\"), exports);\ntslib_1.__exportStar(require(\"./InvalidDirectiveError\"), exports);\ntslib_1.__exportStar(require(\"./MissingSubscriptionTopicsError\"), exports);\ntslib_1.__exportStar(require(\"./NoExplicitTypeError\"), exports);\ntslib_1.__exportStar(require(\"./ReflectMetadataMissingError\"), exports);\ntslib_1.__exportStar(require(\"./SymbolKeysNotSupportedError\"), exports);\ntslib_1.__exportStar(require(\"./UnauthorizedError\"), exports);\ntslib_1.__exportStar(require(\"./UnionResolveTypeError\"), exports);\ntslib_1.__exportStar(require(\"./UnmetGraphQLPeerDependencyError\"), exports);\ntslib_1.__exportStar(require(\"./WrongNullableListOptionError\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isThrowing = void 0;\nfunction isThrowing(fn) {\n    try {\n        fn();\n        return false;\n    }\n    catch (_a) {\n        return true;\n    }\n}\nexports.isThrowing = isThrowing;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureReflectMetadataExists = exports.mapMiddlewareMetadataToArray = exports.mapSuperFieldResolverHandlers = exports.mapSuperResolverHandlers = void 0;\nconst isThrowing_1 = require(\"../helpers/isThrowing\");\nconst errors_1 = require(\"../errors\");\nfunction mapSuperResolverHandlers(definitions, superResolver, resolverMetadata) {\n    return definitions.map(metadata => {\n        return metadata.target === superResolver\n            ? {\n                ...metadata,\n                target: resolverMetadata.target,\n                resolverClassMetadata: resolverMetadata,\n            }\n            : metadata;\n    });\n}\nexports.mapSuperResolverHandlers = mapSuperResolverHandlers;\nfunction mapSuperFieldResolverHandlers(definitions, superResolver, resolverMetadata) {\n    const superMetadata = mapSuperResolverHandlers(definitions, superResolver, resolverMetadata);\n    return superMetadata.map(metadata => {\n        return metadata.target === superResolver\n            ? {\n                ...metadata,\n                getObjectType: isThrowing_1.isThrowing(metadata.getObjectType)\n                    ? resolverMetadata.getObjectType\n                    : metadata.getObjectType,\n            }\n            : metadata;\n    });\n}\nexports.mapSuperFieldResolverHandlers = mapSuperFieldResolverHandlers;\nfunction mapMiddlewareMetadataToArray(metadata) {\n    return metadata\n        .map(m => m.middlewares)\n        .reduce((middlewares, resultArray) => resultArray.concat(middlewares), []);\n}\nexports.mapMiddlewareMetadataToArray = mapMiddlewareMetadataToArray;\nfunction ensureReflectMetadataExists() {\n    if (typeof Reflect !== \"object\" ||\n        typeof Reflect.decorate !== \"function\" ||\n        typeof Reflect.metadata !== \"function\") {\n        throw new errors_1.ReflectMetadataMissingError();\n    }\n}\nexports.ensureReflectMetadataExists = ensureReflectMetadataExists;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetadataStorage = void 0;\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"./utils\");\nclass MetadataStorage {\n    constructor() {\n        this.queries = [];\n        this.mutations = [];\n        this.subscriptions = [];\n        this.fieldResolvers = [];\n        this.objectTypes = [];\n        this.inputTypes = [];\n        this.argumentTypes = [];\n        this.interfaceTypes = [];\n        this.authorizedFields = [];\n        this.enums = [];\n        this.unions = [];\n        this.middlewares = [];\n        this.classDirectives = [];\n        this.fieldDirectives = [];\n        this.classExtensions = [];\n        this.fieldExtensions = [];\n        this.resolverClasses = [];\n        this.fields = [];\n        this.params = [];\n        utils_1.ensureReflectMetadataExists();\n    }\n    collectQueryHandlerMetadata(definition) {\n        this.queries.push(definition);\n    }\n    collectMutationHandlerMetadata(definition) {\n        this.mutations.push(definition);\n    }\n    collectSubscriptionHandlerMetadata(definition) {\n        this.subscriptions.push(definition);\n    }\n    collectFieldResolverMetadata(definition) {\n        this.fieldResolvers.push(definition);\n    }\n    collectObjectMetadata(definition) {\n        this.objectTypes.push(definition);\n    }\n    collectInputMetadata(definition) {\n        this.inputTypes.push(definition);\n    }\n    collectArgsMetadata(definition) {\n        this.argumentTypes.push(definition);\n    }\n    collectInterfaceMetadata(definition) {\n        this.interfaceTypes.push(definition);\n    }\n    collectAuthorizedFieldMetadata(definition) {\n        this.authorizedFields.push(definition);\n    }\n    collectEnumMetadata(definition) {\n        this.enums.push(definition);\n    }\n    collectUnionMetadata(definition) {\n        const unionSymbol = Symbol(definition.name);\n        this.unions.push({\n            ...definition,\n            symbol: unionSymbol,\n        });\n        return unionSymbol;\n    }\n    collectMiddlewareMetadata(definition) {\n        this.middlewares.push(definition);\n    }\n    collectResolverClassMetadata(definition) {\n        this.resolverClasses.push(definition);\n    }\n    collectClassFieldMetadata(definition) {\n        this.fields.push(definition);\n    }\n    collectHandlerParamMetadata(definition) {\n        this.params.push(definition);\n    }\n    collectDirectiveClassMetadata(definition) {\n        this.classDirectives.push(definition);\n    }\n    collectDirectiveFieldMetadata(definition) {\n        this.fieldDirectives.push(definition);\n    }\n    collectExtensionsClassMetadata(definition) {\n        this.classExtensions.push(definition);\n    }\n    collectExtensionsFieldMetadata(definition) {\n        this.fieldExtensions.push(definition);\n    }\n    build(options) {\n        // TODO: disable next build attempts\n        this.classDirectives.reverse();\n        this.fieldDirectives.reverse();\n        this.classExtensions.reverse();\n        this.fieldExtensions.reverse();\n        this.buildClassMetadata(this.objectTypes);\n        this.buildClassMetadata(this.inputTypes);\n        this.buildClassMetadata(this.argumentTypes);\n        this.buildClassMetadata(this.interfaceTypes);\n        this.buildFieldResolverMetadata(this.fieldResolvers, options);\n        this.buildResolversMetadata(this.queries);\n        this.buildResolversMetadata(this.mutations);\n        this.buildResolversMetadata(this.subscriptions);\n        this.buildExtendedResolversMetadata();\n    }\n    clear() {\n        this.queries = [];\n        this.mutations = [];\n        this.subscriptions = [];\n        this.fieldResolvers = [];\n        this.objectTypes = [];\n        this.inputTypes = [];\n        this.argumentTypes = [];\n        this.interfaceTypes = [];\n        this.authorizedFields = [];\n        this.enums = [];\n        this.unions = [];\n        this.middlewares = [];\n        this.classDirectives = [];\n        this.fieldDirectives = [];\n        this.classExtensions = [];\n        this.fieldExtensions = [];\n        this.resolverClasses = [];\n        this.fields = [];\n        this.params = [];\n    }\n    buildClassMetadata(definitions) {\n        definitions.forEach(def => {\n            if (!def.fields) {\n                const fields = this.fields.filter(field => field.target === def.target);\n                fields.forEach(field => {\n                    field.roles = this.findFieldRoles(field.target, field.name);\n                    field.params = this.params.filter(param => param.target === field.target && field.name === param.methodName);\n                    field.middlewares = utils_1.mapMiddlewareMetadataToArray(this.middlewares.filter(middleware => middleware.target === field.target && middleware.fieldName === field.name));\n                    field.directives = this.fieldDirectives\n                        .filter(it => it.target === field.target && it.fieldName === field.name)\n                        .map(it => it.directive);\n                    field.extensions = this.findExtensions(field.target, field.name);\n                });\n                def.fields = fields;\n            }\n            if (!def.directives) {\n                def.directives = this.classDirectives\n                    .filter(it => it.target === def.target)\n                    .map(it => it.directive);\n            }\n            if (!def.extensions) {\n                def.extensions = this.findExtensions(def.target);\n            }\n        });\n    }\n    buildResolversMetadata(definitions) {\n        definitions.forEach(def => {\n            const resolverClassMetadata = this.resolverClasses.find(resolver => resolver.target === def.target);\n            def.resolverClassMetadata = resolverClassMetadata;\n            def.params = this.params.filter(param => param.target === def.target && def.methodName === param.methodName);\n            def.roles = this.findFieldRoles(def.target, def.methodName);\n            def.middlewares = utils_1.mapMiddlewareMetadataToArray(this.middlewares.filter(middleware => middleware.target === def.target && def.methodName === middleware.fieldName));\n            def.directives = this.fieldDirectives\n                .filter(it => it.target === def.target && it.fieldName === def.methodName)\n                .map(it => it.directive);\n            def.extensions = this.findExtensions(def.target, def.methodName);\n        });\n    }\n    buildFieldResolverMetadata(definitions, options) {\n        this.buildResolversMetadata(definitions);\n        definitions.forEach(def => {\n            def.roles = this.findFieldRoles(def.target, def.methodName);\n            def.directives = this.fieldDirectives\n                .filter(it => it.target === def.target && it.fieldName === def.methodName)\n                .map(it => it.directive);\n            def.extensions = this.findExtensions(def.target, def.methodName);\n            def.getObjectType =\n                def.kind === \"external\"\n                    ? this.resolverClasses.find(resolver => resolver.target === def.target).getObjectType\n                    : () => def.target;\n            if (def.kind === \"external\") {\n                const typeClass = this.resolverClasses.find(resolver => resolver.target === def.target)\n                    .getObjectType();\n                const typeMetadata = this.objectTypes.find(objTypeDef => objTypeDef.target === typeClass) ||\n                    this.interfaceTypes.find(interfaceTypeDef => interfaceTypeDef.target === typeClass);\n                if (!typeMetadata) {\n                    throw new Error(`Unable to find type metadata for input type or object type named '${typeClass.name}'`);\n                }\n                const typeField = typeMetadata.fields.find(fieldDef => fieldDef.name === def.methodName);\n                if (!typeField) {\n                    const shouldCollectFieldMetadata = !options.resolvers ||\n                        options.resolvers.some(resolverCls => resolverCls === def.target || def.target.isPrototypeOf(resolverCls));\n                    if (!def.getType || !def.typeOptions) {\n                        throw new errors_1.NoExplicitTypeError(def.target.name, def.methodName);\n                    }\n                    if (shouldCollectFieldMetadata) {\n                        const fieldMetadata = {\n                            name: def.methodName,\n                            schemaName: def.schemaName,\n                            getType: def.getType,\n                            target: typeClass,\n                            typeOptions: def.typeOptions,\n                            deprecationReason: def.deprecationReason,\n                            description: def.description,\n                            complexity: def.complexity,\n                            roles: def.roles,\n                            middlewares: def.middlewares,\n                            params: def.params,\n                            directives: def.directives,\n                            extensions: def.extensions,\n                        };\n                        this.collectClassFieldMetadata(fieldMetadata);\n                        typeMetadata.fields.push(fieldMetadata);\n                    }\n                }\n                else {\n                    typeField.complexity = def.complexity;\n                    if (typeField.params.length === 0) {\n                        typeField.params = def.params;\n                    }\n                    if (def.roles) {\n                        typeField.roles = def.roles;\n                    }\n                    else if (typeField.roles) {\n                        def.roles = typeField.roles;\n                    }\n                }\n            }\n        });\n    }\n    buildExtendedResolversMetadata() {\n        this.resolverClasses.forEach(def => {\n            const target = def.target;\n            let superResolver = Object.getPrototypeOf(target);\n            // copy and modify metadata of resolver from parent resolver class\n            while (superResolver.prototype) {\n                const superResolverMetadata = this.resolverClasses.find(it => it.target === superResolver);\n                if (superResolverMetadata) {\n                    this.queries = utils_1.mapSuperResolverHandlers(this.queries, superResolver, def);\n                    this.mutations = utils_1.mapSuperResolverHandlers(this.mutations, superResolver, def);\n                    this.subscriptions = utils_1.mapSuperResolverHandlers(this.subscriptions, superResolver, def);\n                    this.fieldResolvers = utils_1.mapSuperFieldResolverHandlers(this.fieldResolvers, superResolver, def);\n                }\n                superResolver = Object.getPrototypeOf(superResolver);\n            }\n        });\n    }\n    findFieldRoles(target, fieldName) {\n        const authorizedField = this.authorizedFields.find(authField => authField.target === target && authField.fieldName === fieldName);\n        if (!authorizedField) {\n            return;\n        }\n        return authorizedField.roles;\n    }\n    findExtensions(target, fieldName) {\n        const storedExtensions = fieldName\n            ? this.fieldExtensions\n            : this.classExtensions;\n        return storedExtensions\n            .filter(entry => (entry.target === target || entry.target.isPrototypeOf(target)) &&\n            (!(\"fieldName\" in entry) || entry.fieldName === fieldName))\n            .reduce((extensions, entry) => ({ ...extensions, ...entry.extensions }), {});\n    }\n}\nexports.MetadataStorage = MetadataStorage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMetadataStorage = void 0;\nconst metadata_storage_1 = require(\"../metadata/metadata-storage\");\nfunction getMetadataStorage() {\n    return (global.TypeGraphQLMetadataStorage || (global.TypeGraphQLMetadataStorage = new metadata_storage_1.MetadataStorage()));\n}\nexports.getMetadataStorage = getMetadataStorage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bannedTypes = exports.allowedTypes = void 0;\nexports.allowedTypes = [String, Number, Date, Boolean];\nexports.bannedTypes = [Promise, Array, Object, Function];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findType = void 0;\nconst returnTypes_1 = require(\"./returnTypes\");\nconst errors_1 = require(\"../errors\");\nfunction findType({ metadataKey, prototype, propertyKey, parameterIndex, argName, returnTypeFunc, typeOptions = {}, }) {\n    const options = { ...typeOptions };\n    let metadataDesignType;\n    const reflectedType = Reflect.getMetadata(metadataKey, prototype, propertyKey);\n    if (reflectedType) {\n        if (metadataKey === \"design:paramtypes\") {\n            metadataDesignType = reflectedType[parameterIndex];\n        }\n        else {\n            metadataDesignType = reflectedType;\n        }\n    }\n    if (!returnTypeFunc && (!metadataDesignType || returnTypes_1.bannedTypes.includes(metadataDesignType))) {\n        throw new errors_1.NoExplicitTypeError(prototype.constructor.name, propertyKey, parameterIndex, argName);\n    }\n    if (returnTypeFunc) {\n        const getType = () => {\n            const returnTypeFuncReturnValue = returnTypeFunc();\n            if (Array.isArray(returnTypeFuncReturnValue)) {\n                const { depth, returnType } = findTypeValueArrayDepth(returnTypeFuncReturnValue);\n                options.array = true;\n                options.arrayDepth = depth;\n                return returnType;\n            }\n            return returnTypeFuncReturnValue;\n        };\n        return {\n            getType,\n            typeOptions: options,\n        };\n    }\n    else if (metadataDesignType) {\n        return {\n            getType: () => metadataDesignType,\n            typeOptions: options,\n        };\n    }\n    else {\n        throw new Error(\"Ooops... this should never happen :)\");\n    }\n}\nexports.findType = findType;\nfunction findTypeValueArrayDepth([typeValueOrArray], innerDepth = 1) {\n    if (!Array.isArray(typeValueOrArray)) {\n        return { depth: innerDepth, returnType: typeValueOrArray };\n    }\n    return findTypeValueArrayDepth(typeValueOrArray, innerDepth + 1);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParamInfo = void 0;\nconst findType_1 = require(\"./findType\");\nconst errors_1 = require(\"../errors\");\nfunction getParamInfo({ prototype, propertyKey, parameterIndex, argName, returnTypeFunc, options = {}, }) {\n    if (typeof propertyKey === \"symbol\") {\n        throw new errors_1.SymbolKeysNotSupportedError();\n    }\n    const { getType, typeOptions } = findType_1.findType({\n        metadataKey: \"design:paramtypes\",\n        prototype,\n        propertyKey,\n        parameterIndex,\n        argName,\n        returnTypeFunc,\n        typeOptions: options,\n    });\n    return {\n        target: prototype.constructor,\n        methodName: propertyKey,\n        index: parameterIndex,\n        getType,\n        typeOptions,\n        validate: options.validate,\n    };\n}\nexports.getParamInfo = getParamInfo;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayFromOverloadedRest = exports.getNameDecoratorParams = exports.getTypeDecoratorParams = void 0;\nfunction getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions) {\n    if (typeof returnTypeFuncOrOptions === \"function\") {\n        return {\n            returnTypeFunc: returnTypeFuncOrOptions,\n            options: maybeOptions || {},\n        };\n    }\n    else {\n        return {\n            options: returnTypeFuncOrOptions || {},\n        };\n    }\n}\nexports.getTypeDecoratorParams = getTypeDecoratorParams;\nfunction getNameDecoratorParams(nameOrOptions, maybeOptions) {\n    if (typeof nameOrOptions === \"string\") {\n        return {\n            name: nameOrOptions,\n            options: maybeOptions || {},\n        };\n    }\n    else {\n        return {\n            options: nameOrOptions || {},\n        };\n    }\n}\nexports.getNameDecoratorParams = getNameDecoratorParams;\nfunction getArrayFromOverloadedRest(overloadedArray) {\n    let items;\n    if (Array.isArray(overloadedArray[0])) {\n        items = overloadedArray[0];\n    }\n    else {\n        items = overloadedArray;\n    }\n    return items;\n}\nexports.getArrayFromOverloadedRest = getArrayFromOverloadedRest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Arg = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst params_1 = require(\"../helpers/params\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction Arg(name, returnTypeFuncOrOptions, maybeOptions) {\n    return (prototype, propertyKey, parameterIndex) => {\n        const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"arg\",\n            name,\n            description: options.description,\n            ...params_1.getParamInfo({\n                prototype,\n                propertyKey,\n                parameterIndex,\n                returnTypeFunc,\n                options,\n                argName: name,\n            }),\n        });\n    };\n}\nexports.Arg = Arg;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Args = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst params_1 = require(\"../helpers/params\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction Args(paramTypeFnOrOptions, maybeOptions) {\n    const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(paramTypeFnOrOptions, maybeOptions);\n    return (prototype, propertyKey, parameterIndex) => {\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"args\",\n            ...params_1.getParamInfo({ prototype, propertyKey, parameterIndex, returnTypeFunc, options }),\n        });\n    };\n}\nexports.Args = Args;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgsType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction ArgsType() {\n    return target => {\n        getMetadataStorage_1.getMetadataStorage().collectArgsMetadata({\n            name: target.name,\n            target,\n        });\n    };\n}\nexports.ArgsType = ArgsType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Authorized = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction Authorized(...rolesOrRolesArray) {\n    const roles = decorators_1.getArrayFromOverloadedRest(rolesOrRolesArray);\n    return (prototype, propertyKey, descriptor) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectAuthorizedFieldMetadata({\n            target: prototype.constructor,\n            fieldName: propertyKey,\n            roles,\n        });\n    };\n}\nexports.Authorized = Authorized;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createParamDecorator = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nfunction createParamDecorator(resolver) {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"custom\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n            resolver,\n        });\n    };\n}\nexports.createParamDecorator = createParamDecorator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseMiddleware = void 0;\nconst errors_1 = require(\"../errors\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction UseMiddleware(...middlewaresOrMiddlewareArray) {\n    const middlewares = decorators_1.getArrayFromOverloadedRest(middlewaresOrMiddlewareArray);\n    return (prototype, propertyKey, descriptor) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectMiddlewareMetadata({\n            target: prototype.constructor,\n            fieldName: propertyKey,\n            middlewares,\n        });\n    };\n}\nexports.UseMiddleware = UseMiddleware;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMethodDecorator = void 0;\nconst UseMiddleware_1 = require(\"./UseMiddleware\");\nfunction createMethodDecorator(resolver) {\n    return UseMiddleware_1.UseMiddleware(resolver);\n}\nexports.createMethodDecorator = createMethodDecorator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ctx = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nfunction Ctx(propertyName) {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"context\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n            propertyName,\n        });\n    };\n}\nexports.Ctx = Ctx;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Directive = void 0;\nconst errors_1 = require(\"../errors\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction Directive(nameOrDefinition) {\n    return (targetOrPrototype, propertyKey, _descriptor) => {\n        const directive = { nameOrDefinition, args: {} };\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        if (propertyKey) {\n            getMetadataStorage_1.getMetadataStorage().collectDirectiveFieldMetadata({\n                target: targetOrPrototype.constructor,\n                fieldName: propertyKey,\n                directive,\n            });\n        }\n        else {\n            getMetadataStorage_1.getMetadataStorage().collectDirectiveClassMetadata({\n                target: targetOrPrototype,\n                directive,\n            });\n        }\n    };\n}\nexports.Directive = Directive;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Extensions = void 0;\nconst errors_1 = require(\"../errors\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction Extensions(extensions) {\n    return (targetOrPrototype, propertyKey, descriptor) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        if (propertyKey) {\n            getMetadataStorage_1.getMetadataStorage().collectExtensionsFieldMetadata({\n                target: targetOrPrototype.constructor,\n                fieldName: propertyKey,\n                extensions,\n            });\n        }\n        else {\n            getMetadataStorage_1.getMetadataStorage().collectExtensionsClassMetadata({\n                target: targetOrPrototype,\n                extensions,\n            });\n        }\n    };\n}\nexports.Extensions = Extensions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerEnumType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction registerEnumType(enumObj, enumConfig) {\n    getMetadataStorage_1.getMetadataStorage().collectEnumMetadata({\n        enumObj,\n        name: enumConfig.name,\n        description: enumConfig.description,\n        valuesConfig: enumConfig.valuesConfig || {},\n    });\n}\nexports.registerEnumType = registerEnumType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst findType_1 = require(\"../helpers/findType\");\nconst decorators_1 = require(\"../helpers/decorators\");\nconst errors_1 = require(\"../errors\");\nfunction Field(returnTypeFuncOrOptions, maybeOptions) {\n    return (prototype, propertyKey, descriptor) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n        const isResolver = Boolean(descriptor);\n        const isResolverMethod = Boolean(descriptor && descriptor.value);\n        const { getType, typeOptions } = findType_1.findType({\n            metadataKey: isResolverMethod ? \"design:returntype\" : \"design:type\",\n            prototype,\n            propertyKey,\n            returnTypeFunc,\n            typeOptions: options,\n        });\n        getMetadataStorage_1.getMetadataStorage().collectClassFieldMetadata({\n            name: propertyKey,\n            schemaName: options.name || propertyKey,\n            getType,\n            typeOptions,\n            complexity: options.complexity,\n            target: prototype.constructor,\n            description: options.description,\n            deprecationReason: options.deprecationReason,\n            simple: options.simple,\n        });\n        if (isResolver) {\n            getMetadataStorage_1.getMetadataStorage().collectFieldResolverMetadata({\n                kind: \"internal\",\n                methodName: propertyKey,\n                schemaName: options.name || propertyKey,\n                target: prototype.constructor,\n                complexity: options.complexity,\n            });\n        }\n    };\n}\nexports.Field = Field;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldResolver = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nconst decorators_1 = require(\"../helpers/decorators\");\nconst findType_1 = require(\"../helpers/findType\");\nfunction FieldResolver(returnTypeFuncOrOptions, maybeOptions) {\n    return (prototype, propertyKey) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        let getType;\n        let typeOptions;\n        const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n        // try to get return type info\n        try {\n            const typeInfo = findType_1.findType({\n                metadataKey: \"design:returntype\",\n                prototype,\n                propertyKey,\n                returnTypeFunc,\n                typeOptions: options,\n            });\n            typeOptions = typeInfo.typeOptions;\n            getType = typeInfo.getType;\n        }\n        catch (_a) {\n            // tslint:disable-next-line:no-empty\n        }\n        getMetadataStorage_1.getMetadataStorage().collectFieldResolverMetadata({\n            kind: \"external\",\n            methodName: propertyKey,\n            schemaName: options.name || propertyKey,\n            target: prototype.constructor,\n            getType,\n            typeOptions,\n            complexity: options.complexity,\n            description: options.description,\n            deprecationReason: options.deprecationReason,\n        });\n    };\n}\nexports.FieldResolver = FieldResolver;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Info = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nfunction Info() {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"info\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n        });\n    };\n}\nexports.Info = Info;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction InputType(nameOrOptions, maybeOptions) {\n    const { name, options } = decorators_1.getNameDecoratorParams(nameOrOptions, maybeOptions);\n    return target => {\n        getMetadataStorage_1.getMetadataStorage().collectInputMetadata({\n            name: name || target.name,\n            target,\n            description: options.description,\n            isAbstract: options.isAbstract,\n        });\n    };\n}\nexports.InputType = InputType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterfaceType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction InterfaceType(nameOrOptions, maybeOptions) {\n    const { name, options } = decorators_1.getNameDecoratorParams(nameOrOptions, maybeOptions);\n    const interfaceClasses = options.implements && [].concat(options.implements);\n    return target => {\n        getMetadataStorage_1.getMetadataStorage().collectInterfaceMetadata({\n            name: name || target.name,\n            target,\n            interfaceClasses,\n            autoRegisteringDisabled: options.autoRegisterImplementations === false,\n            ...options,\n        });\n    };\n}\nexports.InterfaceType = InterfaceType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolverMetadata = void 0;\nconst findType_1 = require(\"./findType\");\nconst errors_1 = require(\"../errors\");\nfunction getResolverMetadata(prototype, propertyKey, returnTypeFunc, options = {}) {\n    if (typeof propertyKey === \"symbol\") {\n        throw new errors_1.SymbolKeysNotSupportedError();\n    }\n    const { getType, typeOptions } = findType_1.findType({\n        metadataKey: \"design:returntype\",\n        prototype,\n        propertyKey,\n        returnTypeFunc,\n        typeOptions: options,\n    });\n    const methodName = propertyKey;\n    return {\n        methodName,\n        schemaName: options.name || methodName,\n        target: prototype.constructor,\n        getReturnType: getType,\n        returnTypeOptions: typeOptions,\n        description: options.description,\n        deprecationReason: options.deprecationReason,\n        complexity: options.complexity,\n    };\n}\nexports.getResolverMetadata = getResolverMetadata;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mutation = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst resolver_metadata_1 = require(\"../helpers/resolver-metadata\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction Mutation(returnTypeFuncOrOptions, maybeOptions) {\n    const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n    return (prototype, methodName) => {\n        const metadata = resolver_metadata_1.getResolverMetadata(prototype, methodName, returnTypeFunc, options);\n        getMetadataStorage_1.getMetadataStorage().collectMutationHandlerMetadata(metadata);\n    };\n}\nexports.Mutation = Mutation;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction ObjectType(nameOrOptions, maybeOptions) {\n    const { name, options } = decorators_1.getNameDecoratorParams(nameOrOptions, maybeOptions);\n    const interfaceClasses = options.implements && [].concat(options.implements);\n    return target => {\n        getMetadataStorage_1.getMetadataStorage().collectObjectMetadata({\n            name: name || target.name,\n            target,\n            description: options.description,\n            interfaceClasses,\n            isAbstract: options.isAbstract,\n            simpleResolvers: options.simpleResolvers,\n        });\n    };\n}\nexports.ObjectType = ObjectType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PubSub = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst errors_1 = require(\"../errors\");\nfunction PubSub(triggerKey) {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"pubSub\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n            triggerKey,\n        });\n    };\n}\nexports.PubSub = PubSub;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Query = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst resolver_metadata_1 = require(\"../helpers/resolver-metadata\");\nconst decorators_1 = require(\"../helpers/decorators\");\nfunction Query(returnTypeFuncOrOptions, maybeOptions) {\n    const { options, returnTypeFunc } = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n    return (prototype, methodName) => {\n        const metadata = resolver_metadata_1.getResolverMetadata(prototype, methodName, returnTypeFunc, options);\n        getMetadataStorage_1.getMetadataStorage().collectQueryHandlerMetadata(metadata);\n    };\n}\nexports.Query = Query;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Resolver = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction Resolver(objectTypeOrTypeFuncOrMaybeOptions, maybeOptions) {\n    const objectTypeOrTypeFunc = typeof objectTypeOrTypeFuncOrMaybeOptions === \"function\"\n        ? objectTypeOrTypeFuncOrMaybeOptions\n        : undefined;\n    const options = (typeof objectTypeOrTypeFuncOrMaybeOptions === \"function\"\n        ? maybeOptions\n        : objectTypeOrTypeFuncOrMaybeOptions) || {};\n    return target => {\n        const getObjectType = objectTypeOrTypeFunc\n            ? objectTypeOrTypeFunc.prototype\n                ? () => objectTypeOrTypeFunc\n                : objectTypeOrTypeFunc\n            : () => {\n                throw new Error(`No provided object type in '@Resolver' decorator for class '${target.name}!'`);\n            };\n        getMetadataStorage_1.getMetadataStorage().collectResolverClassMetadata({\n            target,\n            getObjectType,\n            isAbstract: options.isAbstract || false,\n        });\n    };\n}\nexports.Resolver = Resolver;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Root = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst findType_1 = require(\"../helpers/findType\");\nconst errors_1 = require(\"../errors\");\nfunction Root(propertyName) {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        let getType;\n        try {\n            const typeInfo = findType_1.findType({\n                metadataKey: \"design:paramtypes\",\n                prototype,\n                propertyKey,\n                parameterIndex,\n            });\n            getType = typeInfo.getType;\n        }\n        catch (_a) {\n            // tslint:disable-next-line:no-empty\n        }\n        getMetadataStorage_1.getMetadataStorage().collectHandlerParamMetadata({\n            kind: \"root\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n            propertyName,\n            getType,\n        });\n    };\n}\nexports.Root = Root;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subscription = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst resolver_metadata_1 = require(\"../helpers/resolver-metadata\");\nconst decorators_1 = require(\"../helpers/decorators\");\nconst errors_1 = require(\"../errors\");\nfunction Subscription(returnTypeFuncOrOptions, maybeOptions) {\n    const params = decorators_1.getTypeDecoratorParams(returnTypeFuncOrOptions, maybeOptions);\n    const options = params.options;\n    return (prototype, methodName) => {\n        const metadata = resolver_metadata_1.getResolverMetadata(prototype, methodName, params.returnTypeFunc, options);\n        if (Array.isArray(options.topics) && options.topics.length === 0) {\n            throw new errors_1.MissingSubscriptionTopicsError(metadata.target, metadata.methodName);\n        }\n        getMetadataStorage_1.getMetadataStorage().collectSubscriptionHandlerMetadata({\n            ...metadata,\n            topics: options.topics,\n            filter: options.filter,\n            subscribe: options.subscribe,\n        });\n    };\n}\nexports.Subscription = Subscription;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createUnionType = void 0;\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction createUnionType({ name, description, types, resolveType, }) {\n    const unionMetadataSymbol = getMetadataStorage_1.getMetadataStorage().collectUnionMetadata({\n        name,\n        description,\n        getClassTypes: types,\n        resolveType,\n    });\n    return unionMetadataSymbol;\n}\nexports.createUnionType = createUnionType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseMiddleware = exports.createUnionType = exports.Subscription = exports.Root = exports.Resolver = exports.Query = exports.PubSub = exports.ObjectType = exports.Mutation = exports.InterfaceType = exports.InputType = exports.Info = exports.FieldResolver = exports.Field = exports.registerEnumType = exports.Extensions = exports.Directive = exports.Ctx = exports.createMethodDecorator = exports.createParamDecorator = exports.Authorized = exports.ArgsType = exports.Args = exports.Arg = void 0;\nvar Arg_1 = require(\"./Arg\");\nObject.defineProperty(exports, \"Arg\", { enumerable: true, get: function () { return Arg_1.Arg; } });\nvar Args_1 = require(\"./Args\");\nObject.defineProperty(exports, \"Args\", { enumerable: true, get: function () { return Args_1.Args; } });\nvar ArgsType_1 = require(\"./ArgsType\");\nObject.defineProperty(exports, \"ArgsType\", { enumerable: true, get: function () { return ArgsType_1.ArgsType; } });\nvar Authorized_1 = require(\"./Authorized\");\nObject.defineProperty(exports, \"Authorized\", { enumerable: true, get: function () { return Authorized_1.Authorized; } });\nvar createParamDecorator_1 = require(\"./createParamDecorator\");\nObject.defineProperty(exports, \"createParamDecorator\", { enumerable: true, get: function () { return createParamDecorator_1.createParamDecorator; } });\nvar createMethodDecorator_1 = require(\"./createMethodDecorator\");\nObject.defineProperty(exports, \"createMethodDecorator\", { enumerable: true, get: function () { return createMethodDecorator_1.createMethodDecorator; } });\nvar Ctx_1 = require(\"./Ctx\");\nObject.defineProperty(exports, \"Ctx\", { enumerable: true, get: function () { return Ctx_1.Ctx; } });\nvar Directive_1 = require(\"./Directive\");\nObject.defineProperty(exports, \"Directive\", { enumerable: true, get: function () { return Directive_1.Directive; } });\nvar Extensions_1 = require(\"./Extensions\");\nObject.defineProperty(exports, \"Extensions\", { enumerable: true, get: function () { return Extensions_1.Extensions; } });\nvar enums_1 = require(\"./enums\");\nObject.defineProperty(exports, \"registerEnumType\", { enumerable: true, get: function () { return enums_1.registerEnumType; } });\nvar Field_1 = require(\"./Field\");\nObject.defineProperty(exports, \"Field\", { enumerable: true, get: function () { return Field_1.Field; } });\nvar FieldResolver_1 = require(\"./FieldResolver\");\nObject.defineProperty(exports, \"FieldResolver\", { enumerable: true, get: function () { return FieldResolver_1.FieldResolver; } });\nvar Info_1 = require(\"./Info\");\nObject.defineProperty(exports, \"Info\", { enumerable: true, get: function () { return Info_1.Info; } });\nvar InputType_1 = require(\"./InputType\");\nObject.defineProperty(exports, \"InputType\", { enumerable: true, get: function () { return InputType_1.InputType; } });\nvar InterfaceType_1 = require(\"./InterfaceType\");\nObject.defineProperty(exports, \"InterfaceType\", { enumerable: true, get: function () { return InterfaceType_1.InterfaceType; } });\nvar Mutation_1 = require(\"./Mutation\");\nObject.defineProperty(exports, \"Mutation\", { enumerable: true, get: function () { return Mutation_1.Mutation; } });\nvar ObjectType_1 = require(\"./ObjectType\");\nObject.defineProperty(exports, \"ObjectType\", { enumerable: true, get: function () { return ObjectType_1.ObjectType; } });\nvar PubSub_1 = require(\"./PubSub\");\nObject.defineProperty(exports, \"PubSub\", { enumerable: true, get: function () { return PubSub_1.PubSub; } });\nvar Query_1 = require(\"./Query\");\nObject.defineProperty(exports, \"Query\", { enumerable: true, get: function () { return Query_1.Query; } });\nvar Resolver_1 = require(\"./Resolver\");\nObject.defineProperty(exports, \"Resolver\", { enumerable: true, get: function () { return Resolver_1.Resolver; } });\nvar Root_1 = require(\"./Root\");\nObject.defineProperty(exports, \"Root\", { enumerable: true, get: function () { return Root_1.Root; } });\nvar Subscription_1 = require(\"./Subscription\");\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return Subscription_1.Subscription; } });\nvar unions_1 = require(\"./unions\");\nObject.defineProperty(exports, \"createUnionType\", { enumerable: true, get: function () { return unions_1.createUnionType; } });\nvar UseMiddleware_1 = require(\"./UseMiddleware\");\nObject.defineProperty(exports, \"UseMiddleware\", { enumerable: true, get: function () { return UseMiddleware_1.UseMiddleware; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AuthChecker\"), exports);\ntslib_1.__exportStar(require(\"./ClassType\"), exports);\ntslib_1.__exportStar(require(\"./Complexity\"), exports);\ntslib_1.__exportStar(require(\"./Maybe\"), exports);\ntslib_1.__exportStar(require(\"./NonEmptyArray\"), exports);\ntslib_1.__exportStar(require(\"./Publisher\"), exports);\ntslib_1.__exportStar(require(\"./ResolverData\"), exports);\ntslib_1.__exportStar(require(\"./ResolverFilterData\"), exports);\ntslib_1.__exportStar(require(\"./ResolverInterface\"), exports);\ntslib_1.__exportStar(require(\"./resolvers-map\"), exports);\ntslib_1.__exportStar(require(\"./ResolverTopicData\"), exports);\ntslib_1.__exportStar(require(\"./TypeResolver\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMetadataStorage = void 0;\nvar getMetadataStorage_1 = require(\"./getMetadataStorage\");\nObject.defineProperty(exports, \"getMetadataStorage\", { enumerable: true, get: function () { return getMetadataStorage_1.getMetadataStorage; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ID = exports.Float = exports.Int = void 0;\nconst graphql_1 = require(\"graphql\");\nexports.Int = graphql_1.GraphQLInt;\nexports.Float = graphql_1.GraphQLFloat;\nexports.ID = graphql_1.GraphQLID;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphQLISODateTime = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction convertStringToDate(dateString) {\n    try {\n        return new Date(dateString);\n    }\n    catch (_a) {\n        throw new Error(\"Provided date string is invalid and cannot be parsed\");\n    }\n}\nexports.GraphQLISODateTime = new graphql_1.GraphQLScalarType({\n    name: \"DateTime\",\n    description: \"The javascript `Date` as string. Type represents date and time as the ISO Date string.\",\n    serialize(value) {\n        if (!(value instanceof Date)) {\n            throw new Error(`Unable to serialize value '${value}' as it's not an instance of 'Date'`);\n        }\n        return value.toISOString();\n    },\n    parseValue(value) {\n        if (typeof value !== \"string\") {\n            throw new Error(`Unable to parse value '${value}' as GraphQLISODateTime scalar supports only string values`);\n        }\n        return convertStringToDate(value);\n    },\n    parseLiteral(ast) {\n        if (ast.kind !== graphql_1.Kind.STRING) {\n            throw new Error(`Unable to parse literal value of kind '${ast.kind}' as GraphQLISODateTime scalar supports only '${graphql_1.Kind.STRING}' ones`);\n        }\n        return convertStringToDate(ast.value);\n    },\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphQLTimestamp = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction convertTimestampToDate(value) {\n    try {\n        return new Date(value);\n    }\n    catch (err) {\n        throw new Error(\"Provided date numeric value is invalid and cannot be parsed\");\n    }\n}\nexports.GraphQLTimestamp = new graphql_1.GraphQLScalarType({\n    name: \"Timestamp\",\n    description: \"The javascript `Date` as integer. \" +\n        \"Type represents date and time as number of milliseconds from start of UNIX epoch.\",\n    serialize(value) {\n        if (!(value instanceof Date)) {\n            throw new Error(`Unable to serialize value '${value}' as it's not an instance of 'Date'`);\n        }\n        return value.getTime();\n    },\n    parseValue(value) {\n        if (typeof value !== \"number\") {\n            throw new Error(`Unable to parse value '${value}' as GraphQLTimestamp scalar supports only number values`);\n        }\n        return convertTimestampToDate(value);\n    },\n    parseLiteral(ast) {\n        if (ast.kind !== graphql_1.Kind.INT) {\n            throw new Error(`Unable to parse literal value of kind '${ast.kind}' as GraphQLTimestamp scalar supports only '${graphql_1.Kind.INT}' ones`);\n        }\n        const num = Number.parseInt(ast.value, 10);\n        return convertTimestampToDate(num);\n    },\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./aliases\"), exports);\ntslib_1.__exportStar(require(\"./isodate\"), exports);\ntslib_1.__exportStar(require(\"./timestamp\"), exports);\n", null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IOCContainer = void 0;\n/**\n * Container to be used by this library for inversion control.\n * If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nclass DefaultContainer {\n    constructor() {\n        this.instances = [];\n    }\n    get(someClass) {\n        let instance = this.instances.find(it => it.type === someClass);\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    }\n}\nclass IOCContainer {\n    constructor(iocContainerOrContainerGetter) {\n        this.defaultContainer = new DefaultContainer();\n        if (iocContainerOrContainerGetter &&\n            \"get\" in iocContainerOrContainerGetter &&\n            typeof iocContainerOrContainerGetter.get === \"function\") {\n            this.container = iocContainerOrContainerGetter;\n        }\n        else if (typeof iocContainerOrContainerGetter === \"function\") {\n            this.containerGetter = iocContainerOrContainerGetter;\n        }\n    }\n    getInstance(someClass, resolverData) {\n        const container = this.containerGetter ? this.containerGetter(resolverData) : this.container;\n        if (!container) {\n            return this.defaultContainer.get(someClass);\n        }\n        return container.get(someClass, resolverData);\n    }\n}\nexports.IOCContainer = IOCContainer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BuildContext = void 0;\nconst graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nconst container_1 = require(\"../utils/container\");\nclass BuildContext {\n    /**\n     * Set static fields with current building context data\n     */\n    static create(options) {\n        if (options.dateScalarMode !== undefined) {\n            this.dateScalarMode = options.dateScalarMode;\n        }\n        if (options.scalarsMap !== undefined) {\n            this.scalarsMaps = options.scalarsMap;\n        }\n        if (options.validate !== undefined) {\n            this.validate = options.validate;\n        }\n        if (options.authChecker !== undefined) {\n            this.authChecker = options.authChecker;\n        }\n        if (options.authMode !== undefined) {\n            this.authMode = options.authMode;\n        }\n        if (options.pubSub !== undefined) {\n            if (\"eventEmitter\" in options.pubSub) {\n                this.pubSub = new graphql_subscriptions_1.PubSub(options.pubSub);\n            }\n            else {\n                this.pubSub = options.pubSub;\n            }\n        }\n        if (options.globalMiddlewares) {\n            this.globalMiddlewares = options.globalMiddlewares;\n        }\n        this.container = new container_1.IOCContainer(options.container);\n        if (options.nullableByDefault !== undefined) {\n            this.nullableByDefault = options.nullableByDefault;\n        }\n    }\n    /**\n     * Restore default settings\n     */\n    static reset() {\n        this.dateScalarMode = \"isoDate\";\n        this.scalarsMaps = [];\n        this.validate = true;\n        this.authChecker = undefined;\n        this.authMode = \"error\";\n        this.pubSub = new graphql_subscriptions_1.PubSub();\n        this.globalMiddlewares = [];\n        this.container = new container_1.IOCContainer();\n        this.nullableByDefault = false;\n    }\n}\nexports.BuildContext = BuildContext;\n// initialize fields\nBuildContext.reset();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnumValuesMap = exports.convertToType = exports.wrapWithTypeOptions = exports.convertTypeIfScalar = void 0;\nconst graphql_1 = require(\"graphql\");\nconst timestamp_1 = require(\"../scalars/timestamp\");\nconst isodate_1 = require(\"../scalars/isodate\");\nconst build_context_1 = require(\"../schema/build-context\");\nconst errors_1 = require(\"../errors\");\nfunction convertTypeIfScalar(type) {\n    if (type instanceof graphql_1.GraphQLScalarType) {\n        return type;\n    }\n    const scalarMap = build_context_1.BuildContext.scalarsMaps.find(it => it.type === type);\n    if (scalarMap) {\n        return scalarMap.scalar;\n    }\n    switch (type) {\n        case String:\n            return graphql_1.GraphQLString;\n        case Boolean:\n            return graphql_1.GraphQLBoolean;\n        case Number:\n            return graphql_1.GraphQLFloat;\n        case Date:\n            return build_context_1.BuildContext.dateScalarMode === \"isoDate\" ? isodate_1.GraphQLISODateTime : timestamp_1.GraphQLTimestamp;\n        default:\n            return undefined;\n    }\n}\nexports.convertTypeIfScalar = convertTypeIfScalar;\nfunction wrapWithTypeOptions(target, propertyName, type, typeOptions, nullableByDefault) {\n    if (!typeOptions.array &&\n        (typeOptions.nullable === \"items\" || typeOptions.nullable === \"itemsAndList\")) {\n        throw new errors_1.WrongNullableListOptionError(target.name, propertyName, typeOptions.nullable);\n    }\n    if (typeOptions.defaultValue !== undefined &&\n        (typeOptions.nullable === false || typeOptions.nullable === \"items\")) {\n        throw new errors_1.ConflictingDefaultWithNullableError(target.name, propertyName, typeOptions.defaultValue, typeOptions.nullable);\n    }\n    let gqlType = type;\n    if (typeOptions.array) {\n        const isNullableArray = typeOptions.nullable === \"items\" ||\n            typeOptions.nullable === \"itemsAndList\" ||\n            (typeOptions.nullable === undefined && nullableByDefault === true);\n        gqlType = wrapTypeInNestedList(gqlType, typeOptions.arrayDepth, isNullableArray);\n    }\n    if (typeOptions.defaultValue === undefined &&\n        (typeOptions.nullable === false ||\n            (typeOptions.nullable === undefined && nullableByDefault === false) ||\n            typeOptions.nullable === \"items\")) {\n        gqlType = new graphql_1.GraphQLNonNull(gqlType);\n    }\n    return gqlType;\n}\nexports.wrapWithTypeOptions = wrapWithTypeOptions;\nconst simpleTypes = [String, Boolean, Number, Date, Array, Promise];\nfunction convertToType(Target, data) {\n    // skip converting undefined and null\n    if (data == null) {\n        return data;\n    }\n    // skip converting scalars (object scalar mostly)\n    if (Target instanceof graphql_1.GraphQLScalarType) {\n        return data;\n    }\n    // skip converting simple types\n    if (simpleTypes.includes(data.constructor)) {\n        return data;\n    }\n    // skip converting already converted types\n    if (data instanceof Target) {\n        return data;\n    }\n    // convert array to instances\n    if (Array.isArray(data)) {\n        return data.map(item => convertToType(Target, item));\n    }\n    return Object.assign(new Target(), data);\n}\nexports.convertToType = convertToType;\nfunction getEnumValuesMap(enumObject) {\n    const enumKeys = Object.keys(enumObject).filter(key => isNaN(parseInt(key, 10)));\n    const enumMap = enumKeys.reduce((map, key) => {\n        map[key] = enumObject[key];\n        return map;\n    }, {});\n    return enumMap;\n}\nexports.getEnumValuesMap = getEnumValuesMap;\nfunction wrapTypeInNestedList(targetType, depth, nullable) {\n    const targetTypeNonNull = nullable ? targetType : new graphql_1.GraphQLNonNull(targetType);\n    if (depth === 0) {\n        return targetType;\n    }\n    return wrapTypeInNestedList(new graphql_1.GraphQLList(targetTypeNonNull), depth - 1, nullable);\n}\n", "import { ValidationMetadataArgs } from './ValidationMetadataArgs';\nimport { ValidationArguments } from '../validation/ValidationArguments';\n\n/**\n * This metadata contains validation rules.\n */\nexport class ValidationMetadata {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  /**\n   * Validation type.\n   */\n  type: string;\n\n  /**\n   * Target class to which this validation is applied.\n   */\n  target: Function | string;\n\n  /**\n   * Property of the object to be validated.\n   */\n  propertyName: string;\n\n  /**\n   * Constraint class that performs validation. Used only for custom validations.\n   */\n  constraintCls: Function;\n\n  /**\n   * Array of constraints of this validation.\n   */\n  constraints: any[];\n\n  /**\n   * Validation message to be shown in the case of error.\n   */\n  message: string | ((args: ValidationArguments) => string);\n\n  /**\n   * Validation groups used for this validation.\n   */\n  groups: string[] = [];\n\n  /**\n   * Indicates if validation must be performed always, no matter of validation groups used.\n   */\n  always?: boolean;\n\n  /**\n   * Specifies if validated value is an array and each of its item must be validated.\n   */\n  each: boolean = false;\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  context?: any = undefined;\n\n  /**\n   * Extra options specific to validation type.\n   */\n  validationTypeOptions: any;\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(args: ValidationMetadataArgs) {\n    this.type = args.type;\n    this.target = args.target;\n    this.propertyName = args.propertyName;\n    this.constraints = args.constraints;\n    this.constraintCls = args.constraintCls;\n    this.validationTypeOptions = args.validationTypeOptions;\n    if (args.validationOptions) {\n      this.message = args.validationOptions.message;\n      this.groups = args.validationOptions.groups;\n      this.always = args.validationOptions.always;\n      this.each = args.validationOptions.each;\n      this.context = args.validationOptions.context;\n    }\n  }\n}\n", "import { ValidationSchema } from './ValidationSchema';\nimport { ValidationMetadata } from '../metadata/ValidationMetadata';\nimport { ValidationMetadataArgs } from '../metadata/ValidationMetadataArgs';\nimport { ValidationOptions } from '../decorator/ValidationOptions';\n\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nexport class ValidationSchemaToMetadataTransformer {\n  transform(schema: ValidationSchema): ValidationMetadata[] {\n    const metadatas: ValidationMetadata[] = [];\n    Object.keys(schema.properties).forEach(property => {\n      schema.properties[property].forEach(validation => {\n        const validationOptions: ValidationOptions = {\n          message: validation.message,\n          groups: validation.groups,\n          always: validation.always,\n          each: validation.each,\n        };\n        const args: ValidationMetadataArgs = {\n          type: validation.type,\n          target: schema.name,\n          propertyName: property,\n          constraints: validation.constraints,\n          validationTypeOptions: validation.options,\n          validationOptions: validationOptions,\n        };\n        metadatas.push(new ValidationMetadata(args));\n      });\n    });\n    return metadatas;\n  }\n}\n", "/**\n * Convert Map, Set to Array\n */\nexport function convertToArray<T>(val: Array<T> | Set<T> | Map<any, T>): Array<T> {\n  if (val instanceof Map) {\n    return Array.from(val.values());\n  }\n  return Array.isArray(val) ? val : Array.from(val);\n}\n", "/**\n * This function returns the global object across Node and browsers.\n *\n * Note: `globalThis` is the standardized approach however it has been added to\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\n */\nexport function getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: Cannot find name 'window'.\n  if (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'window'.\n    return window;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: Cannot find name 'self'.\n  if (typeof self !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'self'.\n    return self;\n  }\n}\n", "// https://github.com/TylorS/typed-is-promise/blob/abf1514e1b6961adfc75765476b0debb96b2c3ae/src/index.ts\n\nexport function isPromise<T = any>(p: any): p is Promise<T> {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\n", "export * from './convert-to-array.util';\nexport * from './get-global.util';\nexport * from './is-promise.util';\n", "import { ValidationMetadata } from './ValidationMetadata';\nimport { ConstraintMetadata } from './ConstraintMetadata';\nimport { ValidationSchema } from '../validation-schema/ValidationSchema';\nimport { ValidationSchemaToMetadataTransformer } from '../validation-schema/ValidationSchemaToMetadataTransformer';\nimport { getGlobal } from '../utils';\n\n/**\n * Storage all metadatas.\n */\nexport class MetadataStorage {\n  // -------------------------------------------------------------------------\n  // Private properties\n  // -------------------------------------------------------------------------\n\n  private validationMetadatas: ValidationMetadata[] = [];\n  private constraintMetadatas: ConstraintMetadata[] = [];\n\n  get hasValidationMetaData(): boolean {\n    return !!this.validationMetadatas.length;\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Adds a new validation metadata.\n   */\n  addValidationSchema(schema: ValidationSchema): void {\n    const validationMetadatas = new ValidationSchemaToMetadataTransformer().transform(schema);\n    validationMetadatas.forEach(validationMetadata => this.addValidationMetadata(validationMetadata));\n  }\n\n  /**\n   * Adds a new validation metadata.\n   */\n  addValidationMetadata(metadata: ValidationMetadata): void {\n    this.validationMetadatas.push(metadata);\n  }\n\n  /**\n   * Adds a new constraint metadata.\n   */\n  addConstraintMetadata(metadata: ConstraintMetadata): void {\n    this.constraintMetadatas.push(metadata);\n  }\n\n  /**\n   * Groups metadata by their property names.\n   */\n  groupByPropertyName(metadata: ValidationMetadata[]): { [propertyName: string]: ValidationMetadata[] } {\n    const grouped: { [propertyName: string]: ValidationMetadata[] } = {};\n    metadata.forEach(metadata => {\n      if (!grouped[metadata.propertyName]) grouped[metadata.propertyName] = [];\n      grouped[metadata.propertyName].push(metadata);\n    });\n    return grouped;\n  }\n\n  /**\n   * Gets all validation metadatas for the given object with the given groups.\n   */\n  getTargetValidationMetadatas(\n    targetConstructor: Function,\n    targetSchema: string,\n    always: boolean,\n    strictGroups: boolean,\n    groups?: string[]\n  ): ValidationMetadata[] {\n    const includeMetadataBecauseOfAlwaysOption = (metadata: ValidationMetadata): boolean => {\n      // `metadata.always` overrides global default.\n      if (typeof metadata.always !== 'undefined') return metadata.always;\n\n      // `metadata.groups` overrides global default.\n      if (metadata.groups && metadata.groups.length) return false;\n\n      // Use global default.\n      return always;\n    };\n\n    const excludeMetadataBecauseOfStrictGroupsOption = (metadata: ValidationMetadata): boolean => {\n      if (strictGroups) {\n        // Validation is not using groups.\n        if (!groups || !groups.length) {\n          // `metadata.groups` has at least one group.\n          if (metadata.groups && metadata.groups.length) return true;\n        }\n      }\n\n      return false;\n    };\n\n    // get directly related to a target metadatas\n    const originalMetadatas = this.validationMetadatas.filter(metadata => {\n      if (metadata.target !== targetConstructor && metadata.target !== targetSchema) return false;\n      if (includeMetadataBecauseOfAlwaysOption(metadata)) return true;\n      if (excludeMetadataBecauseOfStrictGroupsOption(metadata)) return false;\n      if (groups && groups.length > 0)\n        return metadata.groups && !!metadata.groups.find(group => groups.indexOf(group) !== -1);\n\n      return true;\n    });\n\n    // get metadatas for inherited classes\n    const inheritedMetadatas = this.validationMetadatas.filter(metadata => {\n      // if target is a string it's means we validate against a schema, and there is no inheritance support for schemas\n      if (typeof metadata.target === 'string') return false;\n      if (metadata.target === targetConstructor) return false;\n      if (metadata.target instanceof Function && !(targetConstructor.prototype instanceof metadata.target))\n        return false;\n      if (includeMetadataBecauseOfAlwaysOption(metadata)) return true;\n      if (excludeMetadataBecauseOfStrictGroupsOption(metadata)) return false;\n      if (groups && groups.length > 0)\n        return metadata.groups && !!metadata.groups.find(group => groups.indexOf(group) !== -1);\n\n      return true;\n    });\n\n    // filter out duplicate metadatas, prefer original metadatas instead of inherited metadatas\n    const uniqueInheritedMetadatas = inheritedMetadatas.filter(inheritedMetadata => {\n      return !originalMetadatas.find(originalMetadata => {\n        return (\n          originalMetadata.propertyName === inheritedMetadata.propertyName &&\n          originalMetadata.type === inheritedMetadata.type\n        );\n      });\n    });\n\n    return originalMetadatas.concat(uniqueInheritedMetadatas);\n  }\n\n  /**\n   * Gets all validator constraints for the given object.\n   */\n  getTargetValidatorConstraints(target: Function): ConstraintMetadata[] {\n    return this.constraintMetadatas.filter(metadata => metadata.target === target);\n  }\n}\n\n/**\n * Gets metadata storage.\n * Metadata storage follows the best practices and stores metadata in a global variable.\n */\nexport function getMetadataStorage(): MetadataStorage {\n  const global = getGlobal();\n\n  if (!global.classValidatorMetadataStorage) {\n    global.classValidatorMetadataStorage = new MetadataStorage();\n  }\n\n  return global.classValidatorMetadataStorage;\n}\n", "/**\n * Validation error description.\n */\nexport class ValidationError {\n  /**\n   * Object that was validated.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.target option\n   */\n  target?: object;\n\n  /**\n   * Object's property that haven't pass validation.\n   */\n  property: string;\n\n  /**\n   * Value that haven't pass a validation.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.value option\n   */\n  value?: any;\n\n  /**\n   * Constraints that failed validation with error messages.\n   */\n  constraints?: {\n    [type: string]: string;\n  };\n\n  /**\n   * Contains all nested validation errors of the property.\n   */\n  children?: ValidationError[];\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  contexts?: {\n    [type: string]: any;\n  };\n\n  /**\n   *\n   * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n   * @param hasParent true when the error is a child of an another one\n   * @param parentPath path as string to the parent of this property\n   */\n  toString(shouldDecorate: boolean = false, hasParent: boolean = false, parentPath: string = ``): string {\n    const boldStart = shouldDecorate ? `\\x1b[1m` : ``;\n    const boldEnd = shouldDecorate ? `\\x1b[22m` : ``;\n    const propConstraintFailed = (propertyName: string): string =>\n      ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${Object.keys(\n        this.constraints\n      ).join(`, `)}${boldEnd} \\n`;\n\n    if (!hasParent) {\n      return (\n        `An instance of ${boldStart}${\n          this.target ? this.target.constructor.name : 'an object'\n        }${boldEnd} has failed the validation:\\n` +\n        (this.constraints ? propConstraintFailed(this.property) : ``) +\n        (this.children\n          ? this.children.map(childError => childError.toString(shouldDecorate, true, this.property)).join(``)\n          : ``)\n      );\n    } else {\n      // we format numbers as array indexes for better readability.\n      const formattedProperty = Number.isInteger(+this.property)\n        ? `[${this.property}]`\n        : `${parentPath ? `.` : ``}${this.property}`;\n\n      if (this.constraints) {\n        return propConstraintFailed(formattedProperty);\n      } else {\n        return this.children\n          ? this.children\n              .map(childError => childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`))\n              .join(``)\n          : ``;\n      }\n    }\n  }\n}\n", "/**\n * Validation types.\n */\nexport class ValidationTypes {\n  /* system */\n  static CUSTOM_VALIDATION = 'customValidation'; // done\n  static NESTED_VALIDATION = 'nestedValidation'; // done\n  static PROMISE_VALIDATION = 'promiseValidation'; // done\n  static CONDITIONAL_VALIDATION = 'conditionalValidation'; // done\n  static WHITELIST = 'whitelistValidation'; // done\n  static IS_DEFINED = 'isDefined'; // done\n\n  /**\n   * Checks if validation type is valid.\n   */\n  static isValid(type: string): boolean {\n    return (\n      type !== 'isValid' &&\n      type !== 'getMessage' &&\n      Object.keys(this)\n        .map(key => (this as any)[key])\n        .indexOf(type) !== -1\n    );\n  }\n}\n", "import { ValidationArguments } from './ValidationArguments';\n\n/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint: unknown): string {\n  if (Array.isArray(constraint)) {\n    return constraint.join(', ');\n  }\n\n  return `${constraint}`;\n}\n\nexport class ValidationUtils {\n  static replaceMessageSpecialTokens(\n    message: string | ((args: ValidationArguments) => string),\n    validationArguments: ValidationArguments\n  ): string {\n    let messageString: string;\n    if (message instanceof Function) {\n      messageString = (message as (args: ValidationArguments) => string)(validationArguments);\n    } else if (typeof message === 'string') {\n      messageString = message;\n    }\n\n    if (messageString && validationArguments.constraints instanceof Array) {\n      validationArguments.constraints.forEach((constraint, index) => {\n        messageString = messageString.replace(\n          new RegExp(`\\\\$constraint${index + 1}`, 'g'),\n          constraintToString(constraint)\n        );\n      });\n    }\n\n    if (\n      messageString &&\n      validationArguments.value !== undefined &&\n      validationArguments.value !== null &&\n      typeof validationArguments.value === 'string'\n    )\n      messageString = messageString.replace(/\\$value/g, validationArguments.value);\n    if (messageString) messageString = messageString.replace(/\\$property/g, validationArguments.property);\n    if (messageString) messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n\n    return messageString;\n  }\n}\n", "import { Validator } from './Validator';\nimport { ValidationError } from './ValidationError';\nimport { ValidationMetadata } from '../metadata/ValidationMetadata';\nimport { ValidatorOptions } from './ValidatorOptions';\nimport { ValidationTypes } from './ValidationTypes';\nimport { ConstraintMetadata } from '../metadata/ConstraintMetadata';\nimport { ValidationArguments } from './ValidationArguments';\nimport { ValidationUtils } from './ValidationUtils';\nimport { isPromise, convertToArray } from '../utils';\nimport { getMetadataStorage } from '../metadata/MetadataStorage';\n\n/**\n * Executes validation over given object.\n */\nexport class ValidationExecutor {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  awaitingPromises: Promise<any>[] = [];\n  ignoreAsyncValidations: boolean = false;\n\n  // -------------------------------------------------------------------------\n  // Private Properties\n  // -------------------------------------------------------------------------\n\n  private metadataStorage = getMetadataStorage();\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(private validator: Validator, private validatorOptions?: ValidatorOptions) {}\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  execute(object: object, targetSchema: string, validationErrors: ValidationError[]): void {\n    /**\n     * If there is no metadata registered it means possibly the dependencies are not flatterned and\n     * more than one instance is used.\n     *\n     * TODO: This needs proper handling, forcing to use the same container or some other proper solution.\n     */\n    if (!this.metadataStorage.hasValidationMetaData && this.validatorOptions?.enableDebugMessages === true) {\n      console.warn(\n        `No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.`\n      );\n    }\n\n    const groups = this.validatorOptions ? this.validatorOptions.groups : undefined;\n    const strictGroups = (this.validatorOptions && this.validatorOptions.strictGroups) || false;\n    const always = (this.validatorOptions && this.validatorOptions.always) || false;\n\n    const targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(\n      object.constructor,\n      targetSchema,\n      always,\n      strictGroups,\n      groups\n    );\n    const groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);\n\n    if (this.validatorOptions && this.validatorOptions.forbidUnknownValues && !targetMetadatas.length) {\n      const validationError = new ValidationError();\n\n      if (\n        !this.validatorOptions ||\n        !this.validatorOptions.validationError ||\n        this.validatorOptions.validationError.target === undefined ||\n        this.validatorOptions.validationError.target === true\n      )\n        validationError.target = object;\n\n      validationError.value = undefined;\n      validationError.property = undefined;\n      validationError.children = [];\n      validationError.constraints = { unknownValue: 'an unknown value was passed to the validate function' };\n\n      validationErrors.push(validationError);\n\n      return;\n    }\n\n    if (this.validatorOptions && this.validatorOptions.whitelist)\n      this.whitelist(object, groupedMetadatas, validationErrors);\n\n    // General validation\n    Object.keys(groupedMetadatas).forEach(propertyName => {\n      const value = (object as any)[propertyName];\n      const definedMetadatas = groupedMetadatas[propertyName].filter(\n        metadata => metadata.type === ValidationTypes.IS_DEFINED\n      );\n      const metadatas = groupedMetadatas[propertyName].filter(\n        metadata => metadata.type !== ValidationTypes.IS_DEFINED && metadata.type !== ValidationTypes.WHITELIST\n      );\n\n      if (\n        value instanceof Promise &&\n        metadatas.find(metadata => metadata.type === ValidationTypes.PROMISE_VALIDATION)\n      ) {\n        this.awaitingPromises.push(\n          value.then(resolvedValue => {\n            this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);\n          })\n        );\n      } else {\n        this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);\n      }\n    });\n  }\n\n  whitelist(\n    object: any,\n    groupedMetadatas: { [propertyName: string]: ValidationMetadata[] },\n    validationErrors: ValidationError[]\n  ): void {\n    const notAllowedProperties: string[] = [];\n\n    Object.keys(object).forEach(propertyName => {\n      // does this property have no metadata?\n      if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0)\n        notAllowedProperties.push(propertyName);\n    });\n\n    if (notAllowedProperties.length > 0) {\n      if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {\n        // throw errors\n        notAllowedProperties.forEach(property => {\n          const validationError: ValidationError = this.generateValidationError(object, object[property], property);\n          validationError.constraints = { [ValidationTypes.WHITELIST]: `property ${property} should not exist` };\n          validationError.children = undefined;\n          validationErrors.push(validationError);\n        });\n      } else {\n        // strip non allowed properties\n        notAllowedProperties.forEach(property => delete object[property]);\n      }\n    }\n  }\n\n  stripEmptyErrors(errors: ValidationError[]): ValidationError[] {\n    return errors.filter(error => {\n      if (error.children) {\n        error.children = this.stripEmptyErrors(error.children);\n      }\n\n      if (Object.keys(error.constraints).length === 0) {\n        if (error.children.length === 0) {\n          return false;\n        } else {\n          delete error.constraints;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n\n  private performValidations(\n    object: any,\n    value: any,\n    propertyName: string,\n    definedMetadatas: ValidationMetadata[],\n    metadatas: ValidationMetadata[],\n    validationErrors: ValidationError[]\n  ): void {\n    const customValidationMetadatas = metadatas.filter(metadata => metadata.type === ValidationTypes.CUSTOM_VALIDATION);\n    const nestedValidationMetadatas = metadatas.filter(metadata => metadata.type === ValidationTypes.NESTED_VALIDATION);\n    const conditionalValidationMetadatas = metadatas.filter(\n      metadata => metadata.type === ValidationTypes.CONDITIONAL_VALIDATION\n    );\n\n    const validationError = this.generateValidationError(object, value, propertyName);\n    validationErrors.push(validationError);\n\n    const canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);\n    if (!canValidate) {\n      return;\n    }\n\n    // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not\n    this.customValidations(object, value, definedMetadatas, validationError);\n    this.mapContexts(object, value, definedMetadatas, validationError);\n\n    if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {\n      return;\n    }\n\n    if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {\n      return;\n    }\n\n    if (\n      (value === null || value === undefined) &&\n      this.validatorOptions &&\n      this.validatorOptions.skipMissingProperties === true\n    ) {\n      return;\n    }\n\n    this.customValidations(object, value, customValidationMetadatas, validationError);\n    this.nestedValidations(value, nestedValidationMetadatas, validationError.children);\n\n    this.mapContexts(object, value, metadatas, validationError);\n    this.mapContexts(object, value, customValidationMetadatas, validationError);\n  }\n\n  private generateValidationError(object: object, value: any, propertyName: string): ValidationError {\n    const validationError = new ValidationError();\n\n    if (\n      !this.validatorOptions ||\n      !this.validatorOptions.validationError ||\n      this.validatorOptions.validationError.target === undefined ||\n      this.validatorOptions.validationError.target === true\n    )\n      validationError.target = object;\n\n    if (\n      !this.validatorOptions ||\n      !this.validatorOptions.validationError ||\n      this.validatorOptions.validationError.value === undefined ||\n      this.validatorOptions.validationError.value === true\n    )\n      validationError.value = value;\n\n    validationError.property = propertyName;\n    validationError.children = [];\n    validationError.constraints = {};\n\n    return validationError;\n  }\n\n  private conditionalValidations(object: object, value: any, metadatas: ValidationMetadata[]): ValidationMetadata[] {\n    return metadatas\n      .map(metadata => metadata.constraints[0](object, value))\n      .reduce((resultA, resultB) => resultA && resultB, true);\n  }\n\n  private customValidations(object: object, value: any, metadatas: ValidationMetadata[], error: ValidationError): void {\n    metadatas.forEach(metadata => {\n      this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(customConstraintMetadata => {\n        if (customConstraintMetadata.async && this.ignoreAsyncValidations) return;\n        if (\n          this.validatorOptions &&\n          this.validatorOptions.stopAtFirstError &&\n          Object.keys(error.constraints || {}).length > 0\n        )\n          return;\n\n        const validationArguments: ValidationArguments = {\n          targetName: object.constructor ? (object.constructor as any).name : undefined,\n          property: metadata.propertyName,\n          object: object,\n          value: value,\n          constraints: metadata.constraints,\n        };\n\n        if (!metadata.each || !(value instanceof Array || value instanceof Set || value instanceof Map)) {\n          const validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);\n          if (isPromise(validatedValue)) {\n            const promise = validatedValue.then(isValid => {\n              if (!isValid) {\n                const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n                error.constraints[type] = message;\n                if (metadata.context) {\n                  if (!error.contexts) {\n                    error.contexts = {};\n                  }\n                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n              }\n            });\n            this.awaitingPromises.push(promise);\n          } else {\n            if (!validatedValue) {\n              const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n              error.constraints[type] = message;\n            }\n          }\n\n          return;\n        }\n\n        // convert set and map into array\n        const arrayValue = convertToArray(value);\n        // Validation needs to be applied to each array item\n        const validatedSubValues = arrayValue.map((subValue: any) =>\n          customConstraintMetadata.instance.validate(subValue, validationArguments)\n        );\n        const validationIsAsync = validatedSubValues.some((validatedSubValue: boolean | Promise<boolean>) =>\n          isPromise(validatedSubValue)\n        );\n\n        if (validationIsAsync) {\n          // Wrap plain values (if any) in promises, so that all are async\n          const asyncValidatedSubValues = validatedSubValues.map((validatedSubValue: boolean | Promise<boolean>) =>\n            isPromise(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue)\n          );\n          const asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(\n            (flatValidatedValues: boolean[]) => {\n              const validationResult = flatValidatedValues.every((isValid: boolean) => isValid);\n              if (!validationResult) {\n                const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n                error.constraints[type] = message;\n                if (metadata.context) {\n                  if (!error.contexts) {\n                    error.contexts = {};\n                  }\n                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n              }\n            }\n          );\n\n          this.awaitingPromises.push(asyncValidationIsFinishedPromise);\n\n          return;\n        }\n\n        const validationResult = validatedSubValues.every((isValid: boolean) => isValid);\n        if (!validationResult) {\n          const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n          error.constraints[type] = message;\n        }\n      });\n    });\n  }\n\n  private nestedValidations(value: any, metadatas: ValidationMetadata[], errors: ValidationError[]): void {\n    if (value === void 0) {\n      return;\n    }\n\n    metadatas.forEach(metadata => {\n      if (metadata.type !== ValidationTypes.NESTED_VALIDATION && metadata.type !== ValidationTypes.PROMISE_VALIDATION) {\n        return;\n      }\n\n      if (value instanceof Array || value instanceof Set || value instanceof Map) {\n        // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value\n        const arrayLikeValue = value instanceof Set ? Array.from(value) : value;\n        arrayLikeValue.forEach((subValue: any, index: any) => {\n          this.performValidations(value, subValue, index.toString(), [], metadatas, errors);\n        });\n      } else if (value instanceof Object) {\n        const targetSchema = typeof metadata.target === 'string' ? metadata.target : metadata.target.name;\n        this.execute(value, targetSchema, errors);\n      } else {\n        const error = new ValidationError();\n        error.value = value;\n        error.property = metadata.propertyName;\n        error.target = metadata.target as object;\n        const [type, message] = this.createValidationError(metadata.target as object, value, metadata);\n        error.constraints = {\n          [type]: message,\n        };\n        errors.push(error);\n      }\n    });\n  }\n\n  private mapContexts(object: object, value: any, metadatas: ValidationMetadata[], error: ValidationError): void {\n    return metadatas.forEach(metadata => {\n      if (metadata.context) {\n        let customConstraint;\n        if (metadata.type === ValidationTypes.CUSTOM_VALIDATION) {\n          const customConstraints = this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);\n          customConstraint = customConstraints[0];\n        }\n\n        const type = this.getConstraintType(metadata, customConstraint);\n\n        if (error.constraints[type]) {\n          if (!error.contexts) {\n            error.contexts = {};\n          }\n\n          error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n        }\n      }\n    });\n  }\n\n  private createValidationError(\n    object: object,\n    value: any,\n    metadata: ValidationMetadata,\n    customValidatorMetadata?: ConstraintMetadata\n  ): [string, string] {\n    const targetName = object.constructor ? (object.constructor as any).name : undefined;\n    const type = this.getConstraintType(metadata, customValidatorMetadata);\n    const validationArguments: ValidationArguments = {\n      targetName: targetName,\n      property: metadata.propertyName,\n      object: object,\n      value: value,\n      constraints: metadata.constraints,\n    };\n\n    let message = metadata.message || '';\n    if (\n      !metadata.message &&\n      (!this.validatorOptions || (this.validatorOptions && !this.validatorOptions.dismissDefaultMessages))\n    ) {\n      if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {\n        message = customValidatorMetadata.instance.defaultMessage(validationArguments);\n      }\n    }\n\n    const messageString = ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);\n    return [type, messageString];\n  }\n\n  private getConstraintType(metadata: ValidationMetadata, customValidatorMetadata?: ConstraintMetadata): string {\n    const type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;\n    return type;\n  }\n}\n", "import { ValidationError } from './ValidationError';\nimport { ValidatorOptions } from './ValidatorOptions';\nimport { ValidationExecutor } from './ValidationExecutor';\nimport { ValidationOptions } from '../decorator/ValidationOptions';\n\n/**\n * Validator performs validation of the given object based on its metadata.\n */\nexport class Validator {\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class.\n   */\n  validate(object: object, options?: ValidatorOptions): Promise<ValidationError[]>;\n\n  /**\n   * Performs validation of the given object based on validation schema.\n   */\n  validate(schemaName: string, object: object, options?: ValidatorOptions): Promise<ValidationError[]>;\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   */\n  validate(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<ValidationError[]> {\n    return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n  }\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class and reject on error.\n   */\n  validateOrReject(object: object, options?: ValidatorOptions): Promise<void>;\n\n  /**\n   * Performs validation of the given object based on validation schema and reject on error.\n   */\n  validateOrReject(schemaName: string, object: object, options?: ValidatorOptions): Promise<void>;\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema and reject on error.\n   */\n  async validateOrReject(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<void> {\n    const errors = await this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n    if (errors.length) return Promise.reject(errors);\n  }\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class.\n   * NOTE: This method completely ignores all async validations.\n   */\n  validateSync(object: object, options?: ValidatorOptions): ValidationError[];\n\n  /**\n   * Performs validation of the given object based on validation schema.\n   */\n  validateSync(schemaName: string, object: object, options?: ValidatorOptions): ValidationError[];\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   */\n  validateSync(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): ValidationError[] {\n    const object = typeof objectOrSchemaName === 'string' ? (objectOrValidationOptions as object) : objectOrSchemaName;\n    const options =\n      typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : (objectOrValidationOptions as ValidationOptions);\n    const schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n\n    const executor = new ValidationExecutor(this, options);\n    executor.ignoreAsyncValidations = true;\n    const validationErrors: ValidationError[] = [];\n    executor.execute(object, schema, validationErrors);\n    return executor.stripEmptyErrors(validationErrors);\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Properties\n  // -------------------------------------------------------------------------\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   * Common method for `validateOrReject` and `validate` methods.\n   */\n  private coreValidate(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<ValidationError[]> {\n    const object = typeof objectOrSchemaName === 'string' ? (objectOrValidationOptions as object) : objectOrSchemaName;\n    const options =\n      typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : (objectOrValidationOptions as ValidationOptions);\n    const schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n\n    const executor = new ValidationExecutor(this, options);\n    const validationErrors: ValidationError[] = [];\n    executor.execute(object, schema, validationErrors);\n\n    return Promise.all(executor.awaitingPromises).then(() => {\n      return executor.stripEmptyErrors(validationErrors);\n    });\n  }\n}\n", "/**\n * Container options.\n */\nexport interface UseContainerOptions {\n  /**\n   * If set to true, then default container will be used in the case if given container haven't returned anything.\n   */\n  fallback?: boolean;\n\n  /**\n   * If set to true, then default container will be used in the case if given container thrown an exception.\n   */\n  fallbackOnErrors?: boolean;\n}\n\n/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nconst defaultContainer: { get<T>(someClass: { new (...args: any[]): T } | Function): T } = new (class {\n  private instances: { type: Function; object: any }[] = [];\n  get<T>(someClass: { new (...args: any[]): T }): T {\n    let instance = this.instances.find(instance => instance.type === someClass);\n    if (!instance) {\n      instance = { type: someClass, object: new someClass() };\n      this.instances.push(instance);\n    }\n\n    return instance.object;\n  }\n})();\n\nlet userContainer: { get<T>(someClass: { new (...args: any[]): T } | Function): T };\nlet userContainerOptions: UseContainerOptions;\n\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer: { get(someClass: any): any }, options?: UseContainerOptions): void {\n  userContainer = iocContainer;\n  userContainerOptions = options;\n}\n\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer<T>(someClass: { new (...args: any[]): T } | Function): T {\n  if (userContainer) {\n    try {\n      const instance = userContainer.get(someClass);\n      if (instance) return instance;\n\n      if (!userContainerOptions || !userContainerOptions.fallback) return instance;\n    } catch (error) {\n      if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;\n    }\n  }\n  return defaultContainer.get<T>(someClass);\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * If object has both allowed and not allowed properties a validation error will be thrown.\n */\nexport function Allow(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.WHITELIST,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidatorConstraintInterface } from '../validation/ValidatorConstraintInterface';\nimport { getFromContainer } from '../container';\n\n/**\n * This metadata interface contains information for custom validators.\n */\nexport class ConstraintMetadata {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  /**\n   * Target class which performs validation.\n   */\n  target: Function;\n\n  /**\n   * Custom validation's name, that will be used as validation error type.\n   */\n  name: string;\n\n  /**\n   * Indicates if this validation is asynchronous or not.\n   */\n  async: boolean;\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(target: Function, name?: string, async: boolean = false) {\n    this.target = target;\n    this.name = name;\n    this.async = async;\n  }\n\n  // -------------------------------------------------------------------------\n  // Accessors\n  // -------------------------------------------------------------------------\n\n  /**\n   * Instance of the target custom validation class which performs validation.\n   */\n  get instance(): ValidatorConstraintInterface {\n    return getFromContainer<ValidatorConstraintInterface>(this.target);\n  }\n}\n", "import { ConstraintMetadata } from './metadata/ConstraintMetadata';\nimport { ValidatorConstraintInterface } from './validation/ValidatorConstraintInterface';\nimport { ValidationMetadata } from './metadata/ValidationMetadata';\nimport { ValidationMetadataArgs } from './metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from './validation/ValidationTypes';\nimport { ValidationArguments } from './validation/ValidationArguments';\nimport { getFromContainer } from './container';\nimport { MetadataStorage, getMetadataStorage } from './metadata/MetadataStorage';\nimport { ValidationOptions } from './decorator/ValidationOptions';\n\nexport interface ValidationDecoratorOptions {\n  /**\n   * Target object to be validated.\n   */\n  target: Function;\n\n  /**\n   * Target object's property name to be validated.\n   */\n  propertyName: string;\n\n  /**\n   * Name of the validation that is being registered.\n   */\n  name?: string;\n\n  /**\n   * Indicates if this decorator will perform async validation.\n   */\n  async?: boolean;\n\n  /**\n   * Validator options.\n   */\n  options?: ValidationOptions;\n\n  /**\n   * Array of validation constraints.\n   */\n  constraints?: any[];\n\n  /**\n   * Validator that performs validation.\n   */\n  validator: ValidatorConstraintInterface | Function;\n}\n\n/**\n * Registers a custom validation decorator.\n */\nexport function registerDecorator(options: ValidationDecoratorOptions): void {\n  let constraintCls: Function;\n  if (options.validator instanceof Function) {\n    constraintCls = options.validator;\n    const constraintClasses = getFromContainer(MetadataStorage).getTargetValidatorConstraints(options.validator);\n    if (constraintClasses.length > 1) {\n      throw `More than one implementation of ValidatorConstraintInterface found for validator on: ${options.target.name}:${options.propertyName}`;\n    }\n  } else {\n    const validator = options.validator;\n    constraintCls = class CustomConstraint implements ValidatorConstraintInterface {\n      validate(value: any, validationArguments?: ValidationArguments): Promise<boolean> | boolean {\n        return validator.validate(value, validationArguments);\n      }\n\n      defaultMessage(validationArguments?: ValidationArguments): string {\n        if (validator.defaultMessage) {\n          return validator.defaultMessage(validationArguments);\n        }\n\n        return '';\n      }\n    };\n    getMetadataStorage().addConstraintMetadata(new ConstraintMetadata(constraintCls, options.name, options.async));\n  }\n\n  const validationMetadataArgs: ValidationMetadataArgs = {\n    type: options.name && ValidationTypes.isValid(options.name) ? options.name : ValidationTypes.CUSTOM_VALIDATION,\n    target: options.target,\n    propertyName: options.propertyName,\n    validationOptions: options.options,\n    constraintCls: constraintCls,\n    constraints: options.constraints,\n  };\n  getMetadataStorage().addValidationMetadata(new ValidationMetadata(validationMetadataArgs));\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { registerDecorator } from '../../register-decorator';\nimport { ValidationArguments } from '../../validation/ValidationArguments';\nimport { ValidatorConstraintInterface } from '../../validation/ValidatorConstraintInterface';\n\nexport interface ValidateByOptions {\n  name: string;\n  constraints?: any[];\n  validator: ValidatorConstraintInterface | Function;\n  async?: boolean;\n}\n\nexport function buildMessage(\n  impl: (eachPrefix: string, args?: ValidationArguments) => string,\n  validationOptions?: ValidationOptions\n): (validationArguments?: ValidationArguments) => string {\n  return (validationArguments?: ValidationArguments): string => {\n    const eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n    return impl(eachPrefix, validationArguments);\n  };\n}\n\nexport function ValidateBy(options: ValidateByOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: options.name,\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: options.constraints,\n      validator: options.validator,\n    });\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\n\n// isDefined is (yet) a special case\nexport const IS_DEFINED = ValidationTypes.IS_DEFINED;\n\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function IsDefined(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DEFINED,\n      validator: {\n        validate: (value): boolean => isDefined(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be null or undefined',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [\n        (object: any, value: any): boolean => {\n          return object[propertyName] !== null && object[propertyName] !== undefined;\n        },\n      ],\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options?: { name?: string; async?: boolean }) {\n  return function (target: Function): void {\n    const isAsync = options && options.async;\n    let name = options && options.name ? options.name : '';\n    if (!name) {\n      name = (target as any).name;\n      if (!name)\n        // generate name if it was not given\n        name = name.replace(/\\.?([A-Z]+)/g, (x, y) => '_' + (y as string).toLowerCase()).replace(/^_/, '');\n    }\n    const metadata = new ConstraintMetadata(target, name, isAsync);\n    getMetadataStorage().addConstraintMetadata(metadata);\n  };\n}\n\n/**\n * Performs validation based on the given custom validation class.\n * Validation class must be decorated with ValidatorConstraint decorator.\n */\nexport function Validate(constraintClass: Function, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Validate(\n  constraintClass: Function,\n  constraints?: any[],\n  validationOptions?: ValidationOptions\n): PropertyDecorator;\nexport function Validate(\n  constraintClass: Function,\n  constraintsOrValidationOptions?: any[] | ValidationOptions,\n  maybeValidationOptions?: ValidationOptions\n): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CUSTOM_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraintCls: constraintClass,\n      constraints: constraintsOrValidationOptions instanceof Array ? constraintsOrValidationOptions : undefined,\n      validationOptions: !(constraintsOrValidationOptions instanceof Array)\n        ? constraintsOrValidationOptions\n        : maybeValidationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Ignores the other validators on a property when the provided condition function returns false.\n */\nexport function ValidateIf(\n  condition: (object: any, value: any) => boolean,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [condition],\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions?: ValidationOptions): PropertyDecorator {\n  const opts: ValidationOptions = { ...validationOptions };\n  const eachPrefix = opts.each ? 'each value in ' : '';\n  opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.NESTED_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: opts,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Resolve promise before validation\n */\nexport function ValidatePromise(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.PROMISE_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLatLong;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\n\nfunction isLatLong(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n\n  return lat.test(pair[0]) && long.test(pair[1]);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport isLatLongValidator from 'validator/lib/isLatLong';\n\nexport const IS_LATLONG = 'isLatLong';\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function isLatLong(value: string): boolean {\n  return typeof value === 'string' && isLatLongValidator(value);\n}\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function IsLatLong(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LATLONG,\n      validator: {\n        validate: (value, args): boolean => isLatLong(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a latitude,longitude string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\n\nexport const IS_LATITUDE = 'isLatitude';\n\n/**\n * Checks if a given value is a latitude.\n */\nexport function isLatitude(value: string): boolean {\n  return (typeof value === 'number' || typeof value === 'string') && isLatLong(`${value},0`);\n}\n\n/**\n * Checks if a given value is a latitude.\n */\nexport function IsLatitude(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LATITUDE,\n      validator: {\n        validate: (value, args): boolean => isLatitude(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a latitude string or number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\n\nexport const IS_LONGITUDE = 'isLongitude';\n\n/**\n * Checks if a given value is a longitude.\n */\nexport function isLongitude(value: string): boolean {\n  return (typeof value === 'number' || typeof value === 'string') && isLatLong(`0,${value}`);\n}\n\n/**\n * Checks if a given value is a longitude.\n */\nexport function IsLongitude(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LONGITUDE,\n      validator: {\n        validate: (value, args): boolean => isLongitude(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a longitude string or number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const EQUALS = 'equals';\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function equals(value: unknown, comparison: unknown): boolean {\n  return value === comparison;\n}\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function Equals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: EQUALS,\n      constraints: [comparison],\n      validator: {\n        validate: (value, args): boolean => equals(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be equal to $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const NOT_EQUALS = 'notEquals';\n\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function notEquals(value: unknown, comparison: unknown): boolean {\n  return value !== comparison;\n}\n\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function NotEquals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: NOT_EQUALS,\n      constraints: [comparison],\n      validator: {\n        validate: (value, args): boolean => notEquals(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be equal to $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_EMPTY = 'isEmpty';\n\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function isEmpty(value: unknown): boolean {\n  return value === '' || value === null || value === undefined;\n}\n\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function IsEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EMPTY,\n      validator: {\n        validate: (value, args): boolean => isEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NOT_EMPTY = 'isNotEmpty';\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value: unknown): boolean {\n  return value !== '' && value !== null && value !== undefined;\n}\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => isNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_IN = 'isIn';\n\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function isIn(value: unknown, possibleValues: readonly unknown[]): boolean {\n  return !(possibleValues instanceof Array) || possibleValues.some(possibleValue => possibleValue === value);\n}\n\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function IsIn(values: readonly any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IN,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => isIn(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be one of the following values: $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NOT_IN = 'isNotIn';\n\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value: unknown, possibleValues: readonly unknown[]): boolean {\n  return !(possibleValues instanceof Array) || !possibleValues.some(possibleValue => possibleValue === value);\n}\n\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function IsNotIn(values: readonly any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_IN,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => isNotIn(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be one of the following values: $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commaDecimal = exports.dotDecimal = exports.farsiLocales = exports.arabicLocales = exports.englishLocales = exports.decimal = exports.alphanumeric = exports.alpha = void 0;\nvar alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZ\u00C7\u018F\u011E\u0130\u0131\u00D6\u015E\u00DC]+$/i,\n  'bg-BG': /^[\u0410-\u042F]+$/i,\n  'cs-CZ': /^[A-Z\u00C1\u010C\u010E\u00C9\u011A\u00CD\u0147\u00D3\u0158\u0160\u0164\u00DA\u016E\u00DD\u017D]+$/i,\n  'da-DK': /^[A-Z\u00C6\u00D8\u00C5]+$/i,\n  'de-DE': /^[A-Z\u00C4\u00D6\u00DC\u00DF]+$/i,\n  'el-GR': /^[\u0391-\u03CE]+$/i,\n  'es-ES': /^[A-Z\u00C1\u00C9\u00CD\u00D1\u00D3\u00DA\u00DC]+$/i,\n  'fa-IR': /^[\u0627\u0628\u067E\u062A\u062B\u062C\u0686\u062D\u062E\u062F\u0630\u0631\u0632\u0698\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u06A9\u06AF\u0644\u0645\u0646\u0648\u0647\u06CC]+$/i,\n  'fi-FI': /^[A-Z\u00C5\u00C4\u00D6]+$/i,\n  'fr-FR': /^[A-Z\u00C0\u00C2\u00C6\u00C7\u00C9\u00C8\u00CA\u00CB\u00CF\u00CE\u00D4\u0152\u00D9\u00DB\u00DC\u0178]+$/i,\n  'it-IT': /^[A-Z\u00C0\u00C9\u00C8\u00CC\u00CE\u00D3\u00D2\u00D9]+$/i,\n  'nb-NO': /^[A-Z\u00C6\u00D8\u00C5]+$/i,\n  'nl-NL': /^[A-Z\u00C1\u00C9\u00CB\u00CF\u00D3\u00D6\u00DC\u00DA]+$/i,\n  'nn-NO': /^[A-Z\u00C6\u00D8\u00C5]+$/i,\n  'hu-HU': /^[A-Z\u00C1\u00C9\u00CD\u00D3\u00D6\u0150\u00DA\u00DC\u0170]+$/i,\n  'pl-PL': /^[A-Z\u0104\u0106\u0118\u015A\u0141\u0143\u00D3\u017B\u0179]+$/i,\n  'pt-PT': /^[A-Z\u00C3\u00C1\u00C0\u00C2\u00C4\u00C7\u00C9\u00CA\u00CB\u00CD\u00CF\u00D5\u00D3\u00D4\u00D6\u00DA\u00DC]+$/i,\n  'ru-RU': /^[\u0410-\u042F\u0401]+$/i,\n  'sl-SI': /^[A-Z\u010C\u0106\u0110\u0160\u017D]+$/i,\n  'sk-SK': /^[A-Z\u00C1\u010C\u010E\u00C9\u00CD\u0147\u00D3\u0160\u0164\u00DA\u00DD\u017D\u0139\u0154\u013D\u00C4\u00D4]+$/i,\n  'sr-RS@latin': /^[A-Z\u010C\u0106\u017D\u0160\u0110]+$/i,\n  'sr-RS': /^[\u0410-\u042F\u0402\u0408\u0409\u040A\u040B\u040F]+$/i,\n  'sv-SE': /^[A-Z\u00C5\u00C4\u00D6]+$/i,\n  'th-TH': /^[\u0E01-\u0E50\\s]+$/i,\n  'tr-TR': /^[A-Z\u00C7\u011E\u0130\u0131\u00D6\u015E\u00DC]+$/i,\n  'uk-UA': /^[\u0410-\u0429\u042C\u042E\u042F\u0404I\u0407\u0490\u0456]+$/i,\n  'vi-VN': /^[A-Z\u00C0\u00C1\u1EA0\u1EA2\u00C3\u00C2\u1EA6\u1EA4\u1EAC\u1EA8\u1EAA\u0102\u1EB0\u1EAE\u1EB6\u1EB2\u1EB4\u0110\u00C8\u00C9\u1EB8\u1EBA\u1EBC\u00CA\u1EC0\u1EBE\u1EC6\u1EC2\u1EC4\u00CC\u00CD\u1ECA\u1EC8\u0128\u00D2\u00D3\u1ECC\u1ECE\u00D5\u00D4\u1ED2\u1ED0\u1ED8\u1ED4\u1ED6\u01A0\u1EDC\u1EDA\u1EE2\u1EDE\u1EE0\u00D9\u00DA\u1EE4\u1EE6\u0168\u01AF\u1EEA\u1EE8\u1EF0\u1EEC\u1EEE\u1EF2\u00DD\u1EF4\u1EF6\u1EF8]+$/i,\n  'ku-IQ': /^[\u0626\u0627\u0628\u067E\u062A\u062C\u0686\u062D\u062E\u062F\u0631\u0695\u0632\u0698\u0633\u0634\u0639\u063A\u0641\u06A4\u0642\u06A9\u06AF\u0644\u06B5\u0645\u0646\u0648\u06C6\u06BE\u06D5\u06CC\u06CE\u064A\u0637\u0624\u062B\u0622\u0625\u0623\u0643\u0636\u0635\u0629\u0638\u0630]+$/i,\n  ar: /^[\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\u0670]+$/,\n  he: /^[\u05D0-\u05EA]+$/,\n  fa: /^['\u0622\u0627\u0621\u0623\u0624\u0626\u0628\u067E\u062A\u062B\u062C\u0686\u062D\u062E\u062F\u0630\u0631\u0632\u0698\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u06A9\u06AF\u0644\u0645\u0646\u0648\u0647\u0629\u06CC']+$/i,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i\n};\nexports.alpha = alpha;\nvar alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZ\u00C7\u018F\u011E\u0130\u0131\u00D6\u015E\u00DC]+$/i,\n  'bg-BG': /^[0-9\u0410-\u042F]+$/i,\n  'cs-CZ': /^[0-9A-Z\u00C1\u010C\u010E\u00C9\u011A\u00CD\u0147\u00D3\u0158\u0160\u0164\u00DA\u016E\u00DD\u017D]+$/i,\n  'da-DK': /^[0-9A-Z\u00C6\u00D8\u00C5]+$/i,\n  'de-DE': /^[0-9A-Z\u00C4\u00D6\u00DC\u00DF]+$/i,\n  'el-GR': /^[0-9\u0391-\u03C9]+$/i,\n  'es-ES': /^[0-9A-Z\u00C1\u00C9\u00CD\u00D1\u00D3\u00DA\u00DC]+$/i,\n  'fi-FI': /^[0-9A-Z\u00C5\u00C4\u00D6]+$/i,\n  'fr-FR': /^[0-9A-Z\u00C0\u00C2\u00C6\u00C7\u00C9\u00C8\u00CA\u00CB\u00CF\u00CE\u00D4\u0152\u00D9\u00DB\u00DC\u0178]+$/i,\n  'it-IT': /^[0-9A-Z\u00C0\u00C9\u00C8\u00CC\u00CE\u00D3\u00D2\u00D9]+$/i,\n  'hu-HU': /^[0-9A-Z\u00C1\u00C9\u00CD\u00D3\u00D6\u0150\u00DA\u00DC\u0170]+$/i,\n  'nb-NO': /^[0-9A-Z\u00C6\u00D8\u00C5]+$/i,\n  'nl-NL': /^[0-9A-Z\u00C1\u00C9\u00CB\u00CF\u00D3\u00D6\u00DC\u00DA]+$/i,\n  'nn-NO': /^[0-9A-Z\u00C6\u00D8\u00C5]+$/i,\n  'pl-PL': /^[0-9A-Z\u0104\u0106\u0118\u015A\u0141\u0143\u00D3\u017B\u0179]+$/i,\n  'pt-PT': /^[0-9A-Z\u00C3\u00C1\u00C0\u00C2\u00C4\u00C7\u00C9\u00CA\u00CB\u00CD\u00CF\u00D5\u00D3\u00D4\u00D6\u00DA\u00DC]+$/i,\n  'ru-RU': /^[0-9\u0410-\u042F\u0401]+$/i,\n  'sl-SI': /^[0-9A-Z\u010C\u0106\u0110\u0160\u017D]+$/i,\n  'sk-SK': /^[0-9A-Z\u00C1\u010C\u010E\u00C9\u00CD\u0147\u00D3\u0160\u0164\u00DA\u00DD\u017D\u0139\u0154\u013D\u00C4\u00D4]+$/i,\n  'sr-RS@latin': /^[0-9A-Z\u010C\u0106\u017D\u0160\u0110]+$/i,\n  'sr-RS': /^[0-9\u0410-\u042F\u0402\u0408\u0409\u040A\u040B\u040F]+$/i,\n  'sv-SE': /^[0-9A-Z\u00C5\u00C4\u00D6]+$/i,\n  'th-TH': /^[\u0E01-\u0E59\\s]+$/i,\n  'tr-TR': /^[0-9A-Z\u00C7\u011E\u0130\u0131\u00D6\u015E\u00DC]+$/i,\n  'uk-UA': /^[0-9\u0410-\u0429\u042C\u042E\u042F\u0404I\u0407\u0490\u0456]+$/i,\n  'ku-IQ': /^[\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u06690-9\u0626\u0627\u0628\u067E\u062A\u062C\u0686\u062D\u062E\u062F\u0631\u0695\u0632\u0698\u0633\u0634\u0639\u063A\u0641\u06A4\u0642\u06A9\u06AF\u0644\u06B5\u0645\u0646\u0648\u06C6\u06BE\u06D5\u06CC\u06CE\u064A\u0637\u0624\u062B\u0622\u0625\u0623\u0643\u0636\u0635\u0629\u0638\u0630]+$/i,\n  'vi-VN': /^[0-9A-Z\u00C0\u00C1\u1EA0\u1EA2\u00C3\u00C2\u1EA6\u1EA4\u1EAC\u1EA8\u1EAA\u0102\u1EB0\u1EAE\u1EB6\u1EB2\u1EB4\u0110\u00C8\u00C9\u1EB8\u1EBA\u1EBC\u00CA\u1EC0\u1EBE\u1EC6\u1EC2\u1EC4\u00CC\u00CD\u1ECA\u1EC8\u0128\u00D2\u00D3\u1ECC\u1ECE\u00D5\u00D4\u1ED2\u1ED0\u1ED8\u1ED4\u1ED6\u01A0\u1EDC\u1EDA\u1EE2\u1EDE\u1EE0\u00D9\u00DA\u1EE4\u1EE6\u0168\u01AF\u1EEA\u1EE8\u1EF0\u1EEC\u1EEE\u1EF2\u00DD\u1EF4\u1EF6\u1EF8]+$/i,\n  ar: /^[\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u06690-9\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\u0670]+$/,\n  he: /^[0-9\u05D0-\u05EA]+$/,\n  fa: /^['0-9\u0622\u0627\u0621\u0623\u0624\u0626\u0628\u067E\u062A\u062B\u062C\u0686\u062D\u062E\u062F\u0630\u0631\u0632\u0698\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u06A9\u06AF\u0644\u0645\u0646\u0648\u0647\u0629\u06CC\u06F1\u06F2\u06F3\u06F4\u06F5\u06F6\u06F7\u06F8\u06F9\u06F0']+$/i,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i\n};\nexports.alphanumeric = alphanumeric;\nvar decimal = {\n  'en-US': '.',\n  ar: '\u066B'\n};\nexports.decimal = decimal;\nvar englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nexports.englishLocales = englishLocales;\n\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n} // Source: http://www.localeplanet.com/java/\n\n\nvar arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nexports.arabicLocales = arabicLocales;\n\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\n\nvar farsiLocales = ['IR', 'AF'];\nexports.farsiLocales = farsiLocales;\n\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n} // Source: https://en.wikipedia.org/wiki/Decimal_mark\n\n\nvar dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nexports.dotDecimal = dotDecimal;\nvar commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nexports.commaDecimal = commaDecimal;\n\nfor (var _i3 = 0; _i3 < dotDecimal.length; _i3++) {\n  decimal[dotDecimal[_i3]] = decimal['en-US'];\n}\n\nfor (var _i4 = 0; _i4 < commaDecimal.length; _i4++) {\n  decimal[commaDecimal[_i4]] = ',';\n}\n\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT']; // see #862\n\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL']; // see #1455\n\nalpha['fa-AF'] = alpha.fa;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFloat;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isFloat(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n  var float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n\n  if (str === '' || str === '.' || str === '-' || str === '+') {\n    return false;\n  }\n\n  var value = parseFloat(str.replace(',', '.'));\n  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\n\nvar locales = Object.keys(_alpha.decimal);\nexports.locales = locales;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toFloat;\n\nvar _isFloat = _interopRequireDefault(require(\"./isFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toFloat(str) {\n  if (!(0, _isFloat.default)(str)) return NaN;\n  return parseFloat(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDivisibleBy;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toFloat = _interopRequireDefault(require(\"./toFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDivisibleBy(str, num) {\n  (0, _assertString.default)(str);\n  return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDivisibleByValidator from 'validator/lib/isDivisibleBy';\n\nexport const IS_DIVISIBLE_BY = 'isDivisibleBy';\n\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function isDivisibleBy(value: unknown, num: number): boolean {\n  return typeof value === 'number' && typeof num === 'number' && isDivisibleByValidator(String(value), num);\n}\n\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function IsDivisibleBy(num: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DIVISIBLE_BY,\n      constraints: [num],\n      validator: {\n        validate: (value, args): boolean => isDivisibleBy(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be divisible by $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_POSITIVE = 'isPositive';\n\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function isPositive(value: unknown): boolean {\n  return typeof value === 'number' && value > 0;\n}\n\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function IsPositive(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_POSITIVE,\n      validator: {\n        validate: (value, args): boolean => isPositive(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a positive number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NEGATIVE = 'isNegative';\n\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function isNegative(value: unknown): boolean {\n  return typeof value === 'number' && value < 0;\n}\n\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function IsNegative(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NEGATIVE,\n      validator: {\n        validate: (value, args): boolean => isNegative(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a negative number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MAX = 'max';\n\n/**\n * Checks if the first number is less than or equal to the second.\n */\nexport function max(num: unknown, max: number): boolean {\n  return typeof num === 'number' && typeof max === 'number' && num <= max;\n}\n\n/**\n * Checks if the first number is less than or equal to the second.\n */\nexport function Max(maxValue: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX,\n      constraints: [maxValue],\n      validator: {\n        validate: (value, args): boolean => max(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must not be greater than $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MIN = 'min';\n\n/**\n * Checks if the first number is greater than or equal to the second.\n */\nexport function min(num: unknown, min: number): boolean {\n  return typeof num === 'number' && typeof min === 'number' && num >= min;\n}\n\n/**\n * Checks if the first number is greater than or equal to the second.\n */\nexport function Min(minValue: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN,\n      constraints: [minValue],\n      validator: {\n        validate: (value, args): boolean => min(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must not be less than $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MIN_DATE = 'minDate';\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function minDate(date: unknown, minDate: Date): boolean {\n  return date instanceof Date && date.getTime() >= minDate.getTime();\n}\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MinDate(date: Date, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN_DATE,\n      constraints: [date],\n      validator: {\n        validate: (value, args): boolean => minDate(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => 'minimal allowed date for ' + eachPrefix + '$property is $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MAX_DATE = 'maxDate';\n\n/**\n * Checks if the value is a date that's before the specified date.\n */\nexport function maxDate(date: unknown, maxDate: Date): boolean {\n  return date instanceof Date && date.getTime() <= maxDate.getTime();\n}\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MaxDate(date: Date, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX_DATE,\n      constraints: [date],\n      validator: {\n        validate: (value, args): boolean => maxDate(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => 'maximal allowed date for ' + eachPrefix + '$property is $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction toString(input) {\n  if (_typeof(input) === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n    input = '';\n  }\n\n  return String(input);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaulContainsOptions = {\n  ignoreCase: false,\n  minOccurrences: 1\n};\n\nfunction contains(str, elem, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaulContainsOptions);\n\n  if (options.ignoreCase) {\n    return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length > options.minOccurrences;\n  }\n\n  return str.split((0, _toString.default)(elem)).length > options.minOccurrences;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\n\nexport const CONTAINS = 'contains';\n\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function contains(value: unknown, seed: string): boolean {\n  return typeof value === 'string' && containsValidator(value, seed);\n}\n\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function Contains(seed: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: CONTAINS,\n      constraints: [seed],\n      validator: {\n        validate: (value, args): boolean => contains(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a $constraint1 string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\n\nexport const NOT_CONTAINS = 'notContains';\n\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function notContains(value: unknown, seed: string): boolean {\n  return typeof value === 'string' && !containsValidator(value, seed);\n}\n\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function NotContains(seed: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: NOT_CONTAINS,\n      constraints: [seed],\n      validator: {\n        validate: (value, args): boolean => notContains(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not contain a $constraint1 string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlpha;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlpha(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alpha) {\n    return _alpha.alpha[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alpha);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphaValidator from 'validator/lib/isAlpha';\nimport ValidatorJS from 'validator';\n\nexport const IS_ALPHA = 'isAlpha';\n\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function isAlpha(value: unknown, locale?: ValidatorJS.AlphaLocale): boolean {\n  return typeof value === 'string' && isAlphaValidator(value, locale);\n}\n\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function IsAlpha(locale?: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ALPHA,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isAlpha(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only letters (a-zA-Z)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlphanumeric;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlphanumeric(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alphanumeric);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphanumericValidator from 'validator/lib/isAlphanumeric';\nimport ValidatorJS from 'validator';\n\nexport const IS_ALPHANUMERIC = 'isAlphanumeric';\n\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function isAlphanumeric(value: unknown, locale?: ValidatorJS.AlphanumericLocale): boolean {\n  return typeof value === 'string' && isAlphanumericValidator(value, locale);\n}\n\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function IsAlphanumeric(locale?: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ALPHANUMERIC,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isAlphanumeric(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only letters and numbers',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar includes = function includes(arr, val) {\n  return arr.some(function (arrVal) {\n    return val === arrVal;\n  });\n};\n\nvar _default = includes;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDecimalValidator from 'validator/lib/isDecimal';\nimport ValidatorJS from 'validator';\n\nexport const IS_DECIMAL = 'isDecimal';\n\n/**\n * Checks if the string is a valid decimal.\n * If given value is not a string, then it returns false.\n */\nexport function isDecimal(value: unknown, options?: ValidatorJS.IsDecimalOptions): boolean {\n  return typeof value === 'string' && isDecimalValidator(value, options);\n}\n\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function IsDecimal(\n  options?: ValidatorJS.IsDecimalOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DECIMAL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isDecimal(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property is not a valid decimal number.',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAscii;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0, _assertString.default)(str);\n  return ascii.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAsciiValidator from 'validator/lib/isAscii';\n\nexport const IS_ASCII = 'isAscii';\n\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function isAscii(value: unknown): boolean {\n  return typeof value === 'string' && isAsciiValidator(value);\n}\n\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function IsAscii(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ASCII,\n      validator: {\n        validate: (value, args): boolean => isAscii(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only ASCII characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nvar defaultBase64Options = {\n  urlSafe: false\n};\n\nfunction isBase64(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase64Options);\n  var len = str.length;\n\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase64Validator from 'validator/lib/isBase64';\n\nexport const IS_BASE64 = 'isBase64';\n\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase64(value: unknown): boolean {\n  return typeof value === 'string' && isBase64Validator(value);\n}\n\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase64(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BASE64,\n      validator: {\n        validate: (value, args): boolean => isBase64(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base64 encoded', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isByteLengthValidator from 'validator/lib/isByteLength';\n\nexport const IS_BYTE_LENGTH = 'isByteLength';\n\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function isByteLength(value: unknown, min: number, max?: number): boolean {\n  return typeof value === 'string' && isByteLengthValidator(value, { min, max });\n}\n\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function IsByteLength(min: number, max?: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BYTE_LENGTH,\n      constraints: [min, max],\n      validator: {\n        validate: (value, args): boolean => isByteLength(value, args.constraints[0], args.constraints[1]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + \"$property's byte length must fall into ($constraint1, $constraint2) range\",\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14}|^(81[0-9]{14,17}))$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0, _assertString.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\n\nexport const IS_CREDIT_CARD = 'isCreditCard';\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value: unknown): boolean {\n  return typeof value === 'string' && isCreditCardValidator(value);\n}\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_CREDIT_CARD,\n      validator: {\n        validate: (value, args): boolean => isCreditCard(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a credit card', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\n  });\n  var symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\n    return \"\\\\\".concat(m);\n  }), \")\").concat(options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\n      decimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)\n\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  } // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n\n\n  if (options.allow_negative_sign_placeholder) {\n    pattern = \"( (?!\\\\-))?\".concat(pattern);\n  } else if (options.allow_space_after_symbol) {\n    pattern = \" ?\".concat(pattern);\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  } // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n\n\n  return new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCurrencyValidator from 'validator/lib/isCurrency';\nimport ValidatorJS from 'validator';\n\nexport const IS_CURRENCY = 'isCurrency';\n\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function isCurrency(value: unknown, options?: ValidatorJS.IsCurrencyOptions): boolean {\n  return typeof value === 'string' && isCurrencyValidator(value, options);\n}\n\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function IsCurrency(\n  options?: ValidatorJS.IsCurrencyOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_CURRENCY,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isCurrency(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a currency', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: []\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.substr(0, display_name.length - 1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  var user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.substr(1, domain.length - 2);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEmailValidator from 'validator/lib/isEmail';\nimport ValidatorJS from 'validator';\n\nexport const IS_EMAIL = 'isEmail';\n\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function isEmail(value: unknown, options?: ValidatorJS.IsEmailOptions): boolean {\n  return typeof value === 'string' && isEmailValidator(value, options);\n}\n\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function IsEmail(\n  options?: ValidatorJS.IsEmailOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EMAIL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isEmail(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an email', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFqdnValidator from 'validator/lib/isFQDN';\nimport ValidatorJS from 'validator';\n\nexport const IS_FQDN = 'isFqdn';\n\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function isFQDN(value: unknown, options?: ValidatorJS.IsFQDNOptions): boolean {\n  return typeof value === 'string' && isFqdnValidator(value, options);\n}\n\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function IsFQDN(options?: ValidatorJS.IsFQDNOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FQDN,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isFQDN(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid domain name',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFullWidth;\nexports.fullWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.fullWidth = fullWidth;\n\nfunction isFullWidth(str) {\n  (0, _assertString.default)(str);\n  return fullWidth.test(str);\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFullWidthValidator from 'validator/lib/isFullWidth';\n\nexport const IS_FULL_WIDTH = 'isFullWidth';\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isFullWidth(value: unknown): boolean {\n  return typeof value === 'string' && isFullWidthValidator(value);\n}\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsFullWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FULL_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isFullWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a full-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHalfWidth;\nexports.halfWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.halfWidth = halfWidth;\n\nfunction isHalfWidth(str) {\n  (0, _assertString.default)(str);\n  return halfWidth.test(str);\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHalfWidthValidator from 'validator/lib/isHalfWidth';\n\nexport const IS_HALF_WIDTH = 'isHalfWidth';\n\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value: unknown): boolean {\n  return typeof value === 'string' && isHalfWidthValidator(value);\n}\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsHalfWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HALF_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isHalfWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a half-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVariableWidth;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFullWidth = require(\"./isFullWidth\");\n\nvar _isHalfWidth = require(\"./isHalfWidth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isVariableWidth(str) {\n  (0, _assertString.default)(str);\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isVariableWidthValidator from 'validator/lib/isVariableWidth';\n\nexport const IS_VARIABLE_WIDTH = 'isVariableWidth';\n\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isVariableWidth(value: unknown): boolean {\n  return typeof value === 'string' && isVariableWidthValidator(value);\n}\n\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsVariableWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_VARIABLE_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isVariableWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a full-width and half-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\n\nfunction isHexColor(str) {\n  (0, _assertString.default)(str);\n  return hexcolor.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexColorValidator from 'validator/lib/isHexColor';\n\nexport const IS_HEX_COLOR = 'isHexColor';\n\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function isHexColor(value: unknown): boolean {\n  return typeof value === 'string' && isHexColorValidator(value);\n}\n\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexColor(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HEX_COLOR,\n      validator: {\n        validate: (value, args): boolean => isHexColor(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hexadecimal color',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexadecimal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\n\nfunction isHexadecimal(str) {\n  (0, _assertString.default)(str);\n  return hexadecimal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexadecimalValidator from 'validator/lib/isHexadecimal';\n\nexport const IS_HEXADECIMAL = 'isHexadecimal';\n\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function isHexadecimal(value: unknown): boolean {\n  return typeof value === 'string' && isHexadecimalValidator(value);\n}\n\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexadecimal(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HEXADECIMAL,\n      validator: {\n        validate: (value, args): boolean => isHexadecimal(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hexadecimal number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationArguments } from '../validation/ValidationArguments';\n\n/**\n * Options used to pass to validation decorators.\n */\nexport interface ValidationOptions {\n  /**\n   * Specifies if validated value is an array and each of its items must be validated.\n   */\n  each?: boolean;\n\n  /**\n   * Error message to be used on validation fail.\n   * Message can be either string or a function that returns a string.\n   */\n  message?: string | ((validationArguments: ValidationArguments) => string);\n\n  /**\n   * Validation groups used for this validation.\n   */\n  groups?: string[];\n\n  /**\n   * Indicates if validation must be performed always, no matter of validation groups used.\n   */\n  always?: boolean;\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  context?: any;\n}\n\nexport function isValidationOptions(val: any): val is ValidationOptions {\n  if (!val) {\n    return false;\n  }\n  return 'each' in val || 'message' in val || 'groups' in val || 'always' in val || 'context' in val;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMACAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\n\nfunction isMACAddress(str, options) {\n  (0, _assertString.default)(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions, isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nimport ValidatorJS from 'validator';\n\nexport const IS_MAC_ADDRESS = 'isMacAddress';\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value: unknown, options?: ValidatorJS.IsMACAddressOptions): boolean {\n  return typeof value === 'string' && isMacAddressValidator(value, options);\n}\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsMACAddress(\n  optionsArg?: ValidatorJS.IsMACAddressOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator;\nexport function IsMACAddress(validationOptionsArg?: ValidationOptions): PropertyDecorator;\nexport function IsMACAddress(\n  optionsOrValidationOptionsArg?: ValidatorJS.IsMACAddressOptions | ValidationOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator {\n  const options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n  const validationOptions = isValidationOptions(optionsOrValidationOptionsArg)\n    ? optionsOrValidationOptionsArg\n    : validationOptionsArg;\n\n  return ValidateBy(\n    {\n      name: IS_MAC_ADDRESS,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isMACAddress(value, options),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a MAC Address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\n\nexport type IsIpVersion = '4' | '6' | 4 | 6;\n\nexport const IS_IP = 'isIp';\n\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function isIP(value: unknown, version?: IsIpVersion): boolean {\n  const versionStr = version ? (`${version}` as '4' | '6') : undefined;\n  return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function IsIP(version?: IsIpVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IP,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isIP(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ip address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPort;\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isPort(str) {\n  return (0, _isInt.default)(str, {\n    min: 0,\n    max: 65535\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPortValidator from 'validator/lib/isPort';\n\nexport const IS_PORT = 'isPort';\n\n/**\n * Check if the string is a valid port number.\n */\nexport function isPort(value: unknown): boolean {\n  return typeof value === 'string' && isPortValidator(value);\n}\n\n/**\n * Check if the string is a valid port number.\n */\nexport function IsPort(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PORT,\n      validator: {\n        validate: (value, args): boolean => isPort(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a port', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n\n  var sanitized = str.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  var i;\n\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return !!sanitized;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsbnValidator from 'validator/lib/isISBN';\n\nexport type IsISBNVersion = '10' | '13' | 10 | 13;\n\nexport const IS_ISBN = 'isIsbn';\n\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function isISBN(value: unknown, version?: IsISBNVersion): boolean {\n  const versionStr = version ? (`${version}` as '10' | '13') : undefined;\n  return typeof value === 'string' && isIsbnValidator(value, versionStr);\n}\n\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function IsISBN(version?: IsISBNVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISBN,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isISBN(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ISBN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/; // this link details how the check digit is calculated:\n// https://www.isin.org/isin-format/. it is a little bit\n// odd in that it works with digits, not numbers. in order\n// to make only one pass through the ISIN characters, the\n// each alpha character is handled as 2 characters within\n// the loop.\n\nfunction isISIN(str) {\n  (0, _assertString.default)(str);\n\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var double = true;\n  var sum = 0; // convert values\n\n  for (var i = str.length - 2; i >= 0; i--) {\n    if (str[i] >= 'A' && str[i] <= 'Z') {\n      var value = str[i].charCodeAt(0) - 55;\n      var lo = value % 10;\n      var hi = Math.trunc(value / 10); // letters have two digits, so handle the low order\n      // and high order digits separately.\n\n      for (var _i = 0, _arr = [lo, hi]; _i < _arr.length; _i++) {\n        var digit = _arr[_i];\n\n        if (double) {\n          if (digit >= 5) {\n            sum += 1 + (digit - 5) * 2;\n          } else {\n            sum += digit * 2;\n          }\n        } else {\n          sum += digit;\n        }\n\n        double = !double;\n      }\n    } else {\n      var _digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (double) {\n        if (_digit >= 5) {\n          sum += 1 + (_digit - 5) * 2;\n        } else {\n          sum += _digit * 2;\n        }\n      } else {\n        sum += _digit;\n      }\n\n      double = !double;\n    }\n  }\n\n  var check = Math.trunc((sum + 9) / 10) * 10 - sum;\n  return +str[str.length - 1] === check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsinValidator from 'validator/lib/isISIN';\n\nexport const IS_ISIN = 'isIsin';\n\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function isISIN(value: unknown): boolean {\n  return typeof value === 'string' && isIsinValidator(value);\n}\n\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function IsISIN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISIN,\n      validator: {\n        validate: (value, args): boolean => isISIN(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an ISIN (stock/security identifier)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIso8601Validator from 'validator/lib/isISO8601';\nimport ValidatorJS from 'validator';\n\nexport const IS_ISO8601 = 'isIso8601';\n\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function isISO8601(value: unknown, options?: ValidatorJS.IsISO8601Options): boolean {\n  return typeof value === 'string' && isIso8601Validator(value, options);\n}\n\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function IsISO8601(\n  options?: ValidatorJS.IsISO8601Options,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO8601,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isISO8601(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJSON;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar default_json_options = {\n  allow_primitives: false\n};\n\nfunction isJSON(str, options) {\n  (0, _assertString.default)(str);\n\n  try {\n    options = (0, _merge.default)(options, default_json_options);\n    var primitives = [];\n\n    if (options.allow_primitives) {\n      primitives = [null, false, true];\n    }\n\n    var obj = JSON.parse(str);\n    return primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\n  } catch (e) {\n    /* ignore */\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJSONValidator from 'validator/lib/isJSON';\n\nexport const IS_JSON = 'isJson';\n\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function isJSON(value: unknown): boolean {\n  return typeof value === 'string' && isJSONValidator(value);\n}\n\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function IsJSON(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_JSON,\n      validator: {\n        validate: (value, args): boolean => isJSON(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a json string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJWT;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isBase = _interopRequireDefault(require(\"./isBase64\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isJWT(str) {\n  (0, _assertString.default)(str);\n  var dotSplit = str.split('.');\n  var len = dotSplit.length;\n\n  if (len > 3 || len < 2) {\n    return false;\n  }\n\n  return dotSplit.reduce(function (acc, currElem) {\n    return acc && (0, _isBase.default)(currElem, {\n      urlSafe: true\n    });\n  }, true);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\n\nexport const IS_JWT = 'isJwt';\n\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function isJWT(value: unknown): boolean {\n  return typeof value === 'string' && isJwtValidator(value);\n}\n\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function IsJWT(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_JWT,\n      validator: {\n        validate: (value, args): boolean => isJWT(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a jwt string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLowercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isLowercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toLowerCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLowercaseValidator from 'validator/lib/isLowercase';\n\nexport const IS_LOWERCASE = 'isLowercase';\n\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function isLowercase(value: unknown): boolean {\n  return typeof value === 'string' && isLowercaseValidator(value);\n}\n\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsLowercase(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LOWERCASE,\n      validator: {\n        validate: (value, args): boolean => isLowercase(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a lowercase string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMobilePhone;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar phones = {\n  'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)[569]\\d{7}$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)[1|3])([0|5][0-45-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|91|9[3-9])\\d{7}$/,\n  'el-GR': /^(\\+?30|0)?(69\\d{8})$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}))/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(5|79)\\d{7}$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'ms-MY': /^(\\+?6?01){1}(([0145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[2-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-RO': /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/\n};\n/* eslint-enable max-len */\n// aliases\n\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\n\nfunction isMobilePhone(str, locale, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n\n  if (Array.isArray(locale)) {\n    return locale.some(function (key) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str); // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (var key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(phones);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMobilePhoneValidator from 'validator/lib/isMobilePhone';\nimport ValidatorJS from 'validator';\n\nexport const IS_MOBILE_PHONE = 'isMobilePhone';\n\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function isMobilePhone(\n  value: unknown,\n  locale?: ValidatorJS.MobilePhoneLocale,\n  options?: ValidatorJS.IsMobilePhoneOptions\n): boolean {\n  return typeof value === 'string' && isMobilePhoneValidator(value, locale, options);\n}\n\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function IsMobilePhone(\n  locale?: ValidatorJS.MobilePhoneLocale,\n  options?: ValidatorJS.IsMobilePhoneOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MOBILE_PHONE,\n      constraints: [locale, options],\n      validator: {\n        validate: (value, args): boolean => isMobilePhone(value, args.constraints[0], args.constraints[1]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a phone number', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha2;\nexports.CountryCodes = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nvar validISO31661Alpha2CountriesCodes = new Setn\nfunction isISO31661Alpha2(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\n\nvar CountryCodes = validISO31661Alpha2CountriesCodes;\nexports.CountryCodes = CountryCodes;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha2Validator from 'validator/lib/isISO31661Alpha2';\n\nexport const IS_ISO31661_ALPHA_2 = 'isISO31661Alpha2';\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function isISO31661Alpha2(value: unknown): boolean {\n  return typeof value === 'string' && isISO31661Alpha2Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO31661_ALPHA_2,\n      validator: {\n        validate: (value, args): boolean => isISO31661Alpha2(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha2 code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha3;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nvar validISO31661Alpha3CountriesCodes = new Set(['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE']);\n\nfunction isISO31661Alpha3(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha3Validator from 'validator/lib/isISO31661Alpha3';\n\nexport const IS_ISO31661_ALPHA_3 = 'isISO31661Alpha3';\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function isISO31661Alpha3(value: unknown): boolean {\n  return typeof value === 'string' && isISO31661Alpha3Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO31661_ALPHA_3,\n      validator: {\n        validate: (value, args): boolean => isISO31661Alpha3(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha3 code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMongoId;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isHexadecimal = _interopRequireDefault(require(\"./isHexadecimal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMongoId(str) {\n  (0, _assertString.default)(str);\n  return (0, _isHexadecimal.default)(str) && str.length === 24;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMongoIdValidator from 'validator/lib/isMongoId';\n\nexport const IS_MONGO_ID = 'isMongoId';\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function isMongoId(value: unknown): boolean {\n  return typeof value === 'string' && isMongoIdValidator(value);\n}\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function IsMongoId(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MONGO_ID,\n      validator: {\n        validate: (value, args): boolean => isMongoId(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a mongodb id', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMultibyte;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0, _assertString.default)(str);\n  return multibyte.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMultibyteValidator from 'validator/lib/isMultibyte';\n\nexport const IS_MULTIBYTE = 'isMultibyte';\n\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function isMultibyte(value: unknown): boolean {\n  return typeof value === 'string' && isMultibyteValidator(value);\n}\n\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsMultibyte(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MULTIBYTE,\n      validator: {\n        validate: (value, args): boolean => isMultibyte(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain one or more multibyte chars',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0, _assertString.default)(str);\n  return surrogatePair.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSurrogatePairValidator from 'validator/lib/isSurrogatePair';\n\nexport const IS_SURROGATE_PAIR = 'isSurrogatePair';\n\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function isSurrogatePair(value: unknown): boolean {\n  return typeof value === 'string' && isSurrogatePairValidator(value);\n}\n\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsSurrogatePair(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_SURROGATE_PAIR,\n      validator: {\n        validate: (value, args): boolean => isSurrogatePair(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain any surrogate pairs chars',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUrlValidator from 'validator/lib/isURL';\nimport ValidatorJS from 'validator';\n\nexport const IS_URL = 'isUrl';\n\n/**\n * Checks if the string is an url.\n * If given value is not a string, then it returns false.\n */\nexport function isURL(value: string, options?: ValidatorJS.IsURLOptions): boolean {\n  return typeof value === 'string' && isUrlValidator(value, options);\n}\n\n/**\n * Checks if the string is an url.\n * If given value is not a string, then it returns false.\n */\nexport function IsUrl(options?: ValidatorJS.IsURLOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_URL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isURL(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an URL address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUUID;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\n\nfunction isUUID(str, version) {\n  (0, _assertString.default)(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUuidValidator from 'validator/lib/isUUID';\n\nexport type UUIDVersion = '3' | '4' | '5' | 'all' | 3 | 4 | 5;\n\nexport const IS_UUID = 'isUuid';\n\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function isUUID(value: unknown, version?: UUIDVersion): boolean {\n  return typeof value === 'string' && isUuidValidator(value, version);\n}\n\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function IsUUID(version?: UUIDVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_UUID,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isUUID(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a UUID', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_FIREBASE_PUSH_ID = 'IsFirebasePushId';\n\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function isFirebasePushId(value: unknown): boolean {\n  const webSafeRegex = /^[a-zA-Z0-9_-]*$/;\n  return typeof value === 'string' && value.length === 20 && webSafeRegex.test(value);\n}\n\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function IsFirebasePushId(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FIREBASE_PUSH_ID,\n      validator: {\n        validate: (value, args): boolean => isFirebasePushId(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Firebase Push Id',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUppercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isUppercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toUpperCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUppercaseValidator from 'validator/lib/isUppercase';\n\nexport const IS_UPPERCASE = 'isUppercase';\n\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function isUppercase(value: unknown): boolean {\n  return typeof value === 'string' && isUppercaseValidator(value);\n}\n\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsUppercase(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_UPPERCASE,\n      validator: {\n        validate: (value, args): boolean => isUppercase(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be uppercase', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const IS_LENGTH = 'isLength';\n\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function length(value: unknown, min: number, max?: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min, max });\n}\n\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function Length(min: number, max?: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LENGTH,\n      constraints: [min, max],\n      validator: {\n        validate: (value, args): boolean => length(value, args.constraints[0], args.constraints[1]),\n        defaultMessage: buildMessage((eachPrefix, args) => {\n          const isMinLength = args.constraints[0] !== null && args.constraints[0] !== undefined;\n          const isMaxLength = args.constraints[1] !== null && args.constraints[1] !== undefined;\n          if (isMinLength && (!args.value || args.value.length < args.constraints[0])) {\n            return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n          } else if (isMaxLength && args.value.length > args.constraints[1]) {\n            return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n          }\n          return (\n            eachPrefix +\n            '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters'\n          );\n        }, validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const MAX_LENGTH = 'maxLength';\n\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function maxLength(value: unknown, max: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min: 0, max });\n}\n\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MaxLength(max: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX_LENGTH,\n      constraints: [max],\n      validator: {\n        validate: (value, args): boolean => maxLength(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be shorter than or equal to $constraint1 characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const MIN_LENGTH = 'minLength';\n\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function minLength(value: unknown, min: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min });\n}\n\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MinLength(min: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN_LENGTH,\n      constraints: [min],\n      validator: {\n        validate: (value, args): boolean => minLength(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be longer than or equal to $constraint1 characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matches;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matches(str, pattern, modifiers) {\n  (0, _assertString.default)(str);\n\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n\n  return pattern.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\n\nexport const MATCHES = 'matches';\n\n/**\n * Checks if string matches the pattern. Either matches('foo', /foo/i).\n * If given value is not a string, then it returns false.\n */\nexport function matches(value: string, pattern: RegExp): boolean;\nexport function matches(value: string, pattern: string, modifiers: string): boolean;\nexport function matches(value: string, pattern: RegExp | string, modifiers?: string): boolean {\n  return typeof value === 'string' && matchesValidator(value, (pattern as unknown) as any, modifiers);\n}\n\n/**\n * Checks if string matches the pattern. Either matches('foo', /foo/i)\n * If given value is not a string, then it returns false.\n */\nexport function Matches(pattern: RegExp, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Matches(pattern: string, modifiers?: string, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Matches(\n  pattern: RegExp | string,\n  modifiersOrAnnotationOptions?: string | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  let modifiers: string;\n  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n    validationOptions = modifiersOrAnnotationOptions;\n  } else {\n    modifiers = modifiersOrAnnotationOptions as string;\n  }\n\n  return ValidateBy(\n    {\n      name: MATCHES,\n      constraints: [pattern, modifiers],\n      validator: {\n        validate: (value, args): boolean => matches(value, args.constraints[0], args.constraints[1]),\n        defaultMessage: buildMessage(\n          (eachPrefix, args) => eachPrefix + '$property must match $constraint1 regular expression',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')", "// https://stackoverflow.com/a/46971044/970769\r\nexport default class ParseError {\r\n  constructor(code) {\r\n    this.name = this.constructor.name\r\n    this.message = code\r\n    this.stack = (new Error(code)).stack\r\n  }\r\n}\r\n\r\nParseError.prototype = Object.create(Error.prototype)\r\nParseError.prototype.constructor = ParseError", "// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}", "import compare from './tools/semver-compare'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// Is always present.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!is_object(metadata) || !is_object(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst type_of = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries[country] !== undefined\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }", "import { VALID_DIGITS } from '../../constants'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}", "import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message \u2014 whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message \u2014 whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}", "import createExtensionPattern from './createExtensionPattern'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}", "// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+\u0664\u0664\u0662\u0663\u0662\u0663\u0662\u0663\u0664`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+\u0664\u0664\u0662\u0663\u0662\u0663\u0662\u0663\u0664`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}", "import { parseDigit } from './helpers/parseDigits'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+\u0664\u0664\u0662\u0663\u0662\u0663\u0662\u0663\u0664`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}", "// Deprecated. Import from 'metadata.js' directly instead.\r\nexport { getCountryCallingCode as default } from './metadata'", "/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}", "import mergeArrays from './mergeArrays'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}", "import Metadata from './metadata'\r\nimport checkNumberLength from './helpers/checkNumberLength'\r\n\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}", "import isViablePhoneNumber from './isViablePhoneNumber'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}", "/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}", "import Metadata from '../metadata'\r\nimport matchesEntirely from './matchesEntirely'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returned `{}`\r\n\t// meaning that the phone number is not a valid one.\r\n\tif (!input.country) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// v1 metadata.\r\n\t\t// Legacy.\r\n\t\t// Deprecated.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}", "import Metadata from './metadata'\r\nimport matchesEntirely from './helpers/matchesEntirely'\r\nimport getNumberType from './helpers/getNumberType'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// This is just to support `isValidNumber({})`\r\n\t// for cases when `parseNumber()` returns `{}`.\r\n\tif (!input.country)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes())\r\n\t{\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst national_number = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(national_number, metadata.nationalNumberPattern())\r\n}", "import isValidNumber from './validate_'\r\n\r\n/**\r\n * Checks if a given phone number is valid within a given region.\r\n * Is just an alias for `phoneNumber.isValid() && phoneNumber.country === country`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n */\r\nexport default function isValidNumberForRegion(input, country, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\treturn input.country === country && isValidNumber(input, options, metadata)\r\n}", "import { VALID_PUNCTUATION } from '../constants'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}", "import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}", "import Metadata from '../metadata'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat'\r\nimport Metadata, { getCountryCallingCode } from './metadata'\r\nimport getIddPrefix from './helpers/getIddPrefix'\r\nimport { formatRFC3966 } from './helpers/RFC3966'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n// Formats a phone number\r\n//\r\n// Example use cases:\r\n//\r\n// ```js\r\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL')\r\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL', metadata)\r\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL')\r\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', metadata)\r\n// formatNumber('+78005553535', 'NATIONAL')\r\n// formatNumber('+78005553535', 'NATIONAL', metadata)\r\n// ```\r\n//\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nfunction chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}", "import Metadata from './metadata'\r\nimport isPossibleNumber from './isPossibleNumber_'\r\nimport isValidNumber from './validate_'\r\nimport isValidNumberForRegion from './isValidNumberForRegion_'\r\nimport getNumberType from './helpers/getNumberType'\r\nimport formatNumber from './format_'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\tconstructor(countryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst _metadata = new Metadata(metadata)\r\n\t\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t\t// Also store the country code as `.country`.\r\n\t\tif (isCountryCode(countryCallingCode)) {\r\n\t\t\tthis.country = countryCallingCode\r\n\t\t\t_metadata.country(countryCallingCode)\r\n\t\t\tcountryCallingCode = _metadata.countryCallingCode()\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\t\tthis.country = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.metadata)\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// // Is just an alias for `this.isValid() && this.country === country`.\r\n\t// // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n\t// isValidForRegion(country) {\r\n\t// \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)", "import Metadata from '../metadata'\r\nimport { VALID_DIGITS } from '../constants'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}", "/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number \u2014 National number digits.\r\n * @param {object} metadata \u2014 Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}", "import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber'\r\nimport matchesEntirely from './matchesEntirely'\r\nimport checkNumberLength from './checkNumberLength'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number \u2014 Complete phone number digits.\r\n * @param  {Metadata} metadata \u2014 Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\tif (!shouldExtractNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t// Don't strip the national prefix.\r\n\t\treturn { nationalNumber: number }\r\n\t}\r\n\t// If a national prefix has been extracted, check to see\r\n\t// if the resultant number isn't too short.\r\n\t// Same code in Google's `libphonenumber`:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3291-L3302\r\n\t// For some reason, they do this check right after the `national_number_pattern` check\r\n\t// this library does in `shouldExtractNationalPrefix()` function.\r\n\t// Why is there a second \"resultant\" number validity check?\r\n\t// They don't provide an explanation.\r\n\t// This library just copies the behavior.\r\n\tif (number.length !== nationalNumber.length + (carrierCode ? carrierCode.length : 0)) {\r\n\t\t// If not using legacy generated metadata (before version `1.0.18`)\r\n\t\t// then it has \"possible lengths\", so use those to validate the number length.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// \"We require that the NSN remaining after stripping the national prefix and\r\n\t\t\t// carrier code be long enough to be a possible length for the region.\r\n\t\t\t// Otherwise, we don't do the stripping, since the original number could be\r\n\t\t\t// a valid short number.\"\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\t\t\tcase 'TOO_SHORT':\r\n\t\t\t\tcase 'INVALID_LENGTH':\r\n\t\t\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldExtractNationalPrefix(number, nationalSignificantNumber, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(number, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalSignificantNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// Just \"possible\" number check would be more relaxed, so it's not used.\r\n\t// if (isPossibleNumber(number, metadata) &&\r\n\t// \t!isPossibleNumber(numberWithNationalPrefixExtracted, metadata)) {\r\n\t// \treturn false\r\n\t// }\r\n\treturn true\r\n}", "import Metadata from '../metadata'\r\nimport matchesEntirely from './matchesEntirely'\r\nimport extractNationalNumber from './extractNationalNumber'\r\nimport checkNumberLength from './checkNumberLength'\r\nimport getCountryCallingCode from '../getCountryCallingCode'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number \u2014 Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}", "import stripIddPrefix from './stripIddPrefix'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign'\r\nimport Metadata from '../metadata'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number \u2014 Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] \u2014\u00A0Default country.\r\n * @param  {string} [callingCode] \u2014 Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn { number }\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}", "import Metadata from '../metadata'\r\nimport getNumberType from './getNumberType'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, nationalPhoneNumber, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\t// Is always non-empty, because `callingCode` is always valid\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata.metadata)\r\n}\r\n\r\nfunction selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\tfor (const country of possibleCountries) {\r\n\t\tmetadata.country(country)\r\n\t\t// Leading digits check would be the simplest and fastest one.\r\n\t\t// Leading digits patterns are only defined for about 20% of all countries.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// Matching \"leading digits\" is a sufficient but not necessary condition.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\treturn country\r\n\t\t}\r\n\t}\r\n}", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants'\r\n\r\nimport ParseError from './ParseError'\r\nimport Metadata from './metadata'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber'\r\nimport extractExtension from './helpers/extension/extractExtension'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber'\r\nimport getCountryCallingCode from './getCountryCallingCode'\r\nimport { isPossibleNumber } from './isPossibleNumber_'\r\nimport { parseRFC3966 } from './helpers/RFC3966'\r\nimport PhoneNumber from './PhoneNumber'\r\nimport matchesEntirely from './helpers/matchesEntirely'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign'\r\nimport extractNationalNumber from './helpers/extractNationalNumber'\r\nimport stripIddPrefix from './helpers/stripIddPrefix'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] \u2014 If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] \u2014 By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// Parse RFC 3966 phone number URI.\r\n\tif (text && text.indexOf('tel:') === 0) {\r\n\t\treturn parseRFC3966(text)\r\n\t}\r\n\tlet number = extractFormattedPhoneNumber(text, extract, v2)\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber \u2014 Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` isn't.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn { countryCallingCode }\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, nationalNumber, metadata)\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}", "import parseNumber from './parse_'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\treturn parseNumber(text, { ...options, v2: true }, metadata)\r\n}", "import parsePhoneNumber_ from './parsePhoneNumber_'\r\n\r\nexport default function parsePhoneNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumber_(text, options, metadata)\r\n}\r\n\r\nexport function normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Otherwise istanbul would show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst isObject = _ => typeof _ === 'object'", "import parsePhoneNumber from './parsePhoneNumber_'\r\nimport ParseError from './ParseError'\r\nimport { isSupportedCountry } from './metadata'\r\n\r\nexport default function parsePhoneNumberFromString(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumber(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n", "import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumberFromString_ from './parsePhoneNumberFromString_'\r\n\r\nexport default function parsePhoneNumberFromString() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumberFromString_(text, options, metadata)\r\n}\r\n", "import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumberFromString from './parsePhoneNumberFromString_'\r\n\r\nexport default function isValidPhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumberFromString(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isValid() || false\r\n}", "import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumberFromString from './parsePhoneNumberFromString_'\r\n\r\nexport default function isPossiblePhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumberFromString(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isPossible() || false\r\n}", "import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumber from './parsePhoneNumber_'\r\nimport ParseError from './ParseError'\r\nimport Metadata from './metadata'\r\nimport checkNumberLength from './helpers/checkNumberLength'\r\n\r\nexport default function validatePhoneNumberLength() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\tconst phoneNumber = parsePhoneNumber(text, options, metadata)\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(phoneNumber.countryCallingCode)\r\n\t\tconst result = checkNumberLength(phoneNumber.nationalNumber, metadata)\r\n\t\tif (result !== 'IS_POSSIBLE') {\r\n\t\t\treturn result\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\treturn error.message\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}", "// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\r\n\r\nclass Node {\r\n  constructor(key, value, next = null, prev = null) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = next;\r\n    this.prev = prev;\r\n  }\r\n}\r\n\r\nexport default class LRUCache {\r\n  //set default limit of 10 if limit is not passed.\r\n  constructor(limit = 10) {\r\n    this.size = 0;\r\n    this.limit = limit;\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.cache = {};\r\n  }\r\n\r\n  // Write Node to head of LinkedList\r\n  // update cache with Node key and Node reference\r\n  put(key, value){\r\n    this.ensureLimit();\r\n\r\n    if(!this.head){\r\n      this.head = this.tail = new Node(key, value);\r\n    }else{\r\n      const node = new Node(key, value, this.head);\r\n      this.head.prev = node;\r\n      this.head = node;\r\n    }\r\n\r\n    //Update the cache map\r\n    this.cache[key] = this.head;\r\n    this.size++;\r\n  }\r\n\r\n  // Read from cache map and make that node as new Head of LinkedList\r\n  get(key){\r\n    if(this.cache[key]){\r\n      const value = this.cache[key].value;\r\n\r\n      // node removed from it's position and cache\r\n      this.remove(key)\r\n      // write node again to the head of LinkedList to make it most recently used\r\n      this.put(key, value);\r\n\r\n      return value;\r\n    }\r\n\r\n    console.log(`Item not available in cache for key ${key}`);\r\n  }\r\n\r\n  ensureLimit(){\r\n    if(this.size === this.limit){\r\n      this.remove(this.tail.key)\r\n    }\r\n  }\r\n\r\n  remove(key){\r\n    const node = this.cache[key];\r\n\r\n    if(node.prev !== null){\r\n      node.prev.next = node.next;\r\n    }else{\r\n      this.head = node.next;\r\n    }\r\n\r\n    if(node.next !== null){\r\n      node.next.prev = node.prev;\r\n    }else{\r\n      this.tail = node.prev\r\n    }\r\n\r\n    delete this.cache[key];\r\n    this.size--;\r\n  }\r\n\r\n  clear() {\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.size = 0;\r\n    this.cache = {};\r\n  }\r\n\r\n  // // Invokes the callback function with every node of the chain and the index of the node.\r\n  // forEach(fn) {\r\n  //   let node = this.head;\r\n  //   let counter = 0;\r\n  //   while (node) {\r\n  //     fn(node, counter);\r\n  //     node = node.next;\r\n  //     counter++;\r\n  //   }\r\n  // }\r\n\r\n  // // To iterate over LRU with a 'for...of' loop\r\n  // *[Symbol.iterator]() {\r\n  //   let node = this.head;\r\n  //   while (node) {\r\n  //     yield node;\r\n  //     node = node.next;\r\n  //   }\r\n  // }\r\n}", "import LRUCache from './LRUCache'\r\n\r\n// A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\r\n// countries being used for the same doc with ~10 patterns for each country. Some pages will have\r\n// a lot more countries in use, but typically fewer numbers for each so expanding the cache for\r\n// that use-case won't have a lot of benefit.\r\nexport default class RegExpCache {\r\n\tconstructor(size) {\r\n\t\tthis.cache = new LRUCache(size)\r\n\t}\r\n\r\n\tgetPatternForRegExp(pattern) {\r\n\t\tlet regExp = this.cache.get(pattern)\r\n\t\tif (!regExp) {\r\n\t\t\tregExp = new RegExp('^' + pattern)\r\n\t\t\tthis.cache.put(pattern, regExp)\r\n\t\t}\r\n\t\treturn regExp\r\n\t}\r\n}", "/** Returns a regular expression quantifier with an upper and lower limit. */\r\nexport function limit(lower, upper)\r\n{\r\n\tif ((lower < 0) || (upper <= 0) || (upper < lower)) {\r\n\t\tthrow new TypeError()\r\n\t}\r\n\treturn `{${lower},${upper}}`\r\n}\r\n\r\n/**\r\n * Trims away any characters after the first match of {@code pattern} in {@code candidate},\r\n * returning the trimmed version.\r\n */\r\nexport function trimAfterFirstMatch(regexp, string)\r\n{\r\n\tconst index = string.search(regexp)\r\n\r\n\tif (index >= 0) {\r\n\t\treturn string.slice(0, index)\r\n\t}\r\n\r\n\treturn string\r\n}\r\n\r\nexport function startsWith(string, substring)\r\n{\r\n\treturn string.indexOf(substring) === 0\r\n}\r\n\r\nexport function endsWith(string, substring)\r\n{\r\n\treturn string.indexOf(substring, string.length - substring.length) === string.length - substring.length\r\n}\r\n", "// Javascript doesn't support UTF-8 regular expressions.\r\n// So mimicking them here.\r\n\r\n// Copy-pasted from `PhoneNumberMatcher.js`.\r\n\r\n/**\r\n * \"\\p{Z}\" is any kind of whitespace or invisible separator (\"Separator\").\r\n * http://www.regular-expressions.info/unicode.html\r\n * \"\\P{Z}\" is the reverse of \"\\p{Z}\".\r\n * \"\\p{N}\" is any kind of numeric character in any script (\"Number\").\r\n * \"\\p{Nd}\" is a digit zero through nine in any script except \"ideographic scripts\" (\"Decimal_Digit_Number\").\r\n * \"\\p{Sc}\" is a currency symbol (\"Currency_Symbol\").\r\n * \"\\p{L}\" is any kind of letter from any language (\"Letter\").\r\n * \"\\p{Mn}\" is \"non-spacing mark\".\r\n *\r\n * Javascript doesn't support Unicode Regular Expressions\r\n * so substituting it with this explicit set of characters.\r\n *\r\n * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl\r\n * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js\r\n */\r\n\r\nconst _pZ = '\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\nexport const pZ = `[${_pZ}]`\r\nexport const PZ = `[^${_pZ}]`\r\n\r\nexport const _pN = '\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19'\r\n// const pN = `[${_pN}]`\r\n\r\nconst _pNd = '\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19'\r\nexport const pNd = `[${_pNd}]`\r\n\r\nexport const _pL = '\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\r\nconst pL = `[${_pL}]`\r\nconst pL_regexp = new RegExp(pL)\r\n\r\nconst _pSc = '\\u0024\\u00A2-\\u00A5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\r\nconst pSc = `[${_pSc}]`\r\nconst pSc_regexp = new RegExp(pSc)\r\n\r\nconst _pMn = '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26'\r\nconst pMn = `[${_pMn}]`\r\nconst pMn_regexp = new RegExp(pMn)\r\n\r\nconst _InBasic_Latin = '\\u0000-\\u007F'\r\nconst _InLatin_1_Supplement = '\\u0080-\\u00FF'\r\nconst _InLatin_Extended_A = '\\u0100-\\u017F'\r\nconst _InLatin_Extended_Additional = '\\u1E00-\\u1EFF'\r\nconst _InLatin_Extended_B = '\\u0180-\\u024F'\r\nconst _InCombining_Diacritical_Marks = '\\u0300-\\u036F'\r\n\r\nconst latinLetterRegexp = new RegExp\r\n(\r\n\t'[' +\r\n\t_InBasic_Latin +\r\n\t_InLatin_1_Supplement +\r\n\t_InLatin_Extended_A +\r\n\t_InLatin_Extended_Additional +\r\n\t_InLatin_Extended_B +\r\n\t_InCombining_Diacritical_Marks +\r\n\t']'\r\n)\r\n\r\n/**\r\n * Helper method to determine if a character is a Latin-script letter or not.\r\n * For our purposes, combining marks should also return true since we assume\r\n * they have been added to a preceding Latin character.\r\n */\r\nexport function isLatinLetter(letter)\r\n{\r\n\t// Combining marks are a subset of non-spacing-mark.\r\n\tif (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn latinLetterRegexp.test(letter)\r\n}\r\n\r\nexport function isInvalidPunctuationSymbol(character)\r\n{\r\n\treturn character === '%' || pSc_regexp.test(character)\r\n}", "import isValidNumber from '../validate_'\r\nimport parseDigits from '../helpers/parseDigits'\r\n\r\nimport {\r\n\tstartsWith,\r\n\tendsWith\r\n} from './util'\r\n\r\n/**\r\n * Leniency when finding potential phone numbers in text segments\r\n * The levels here are ordered in increasing strictness.\r\n */\r\nexport default\r\n{\r\n\t/**\r\n\t * Phone numbers accepted are \"possible\", but not necessarily \"valid\".\r\n\t */\r\n\tPOSSIBLE(number, candidate, metadata)\r\n\t{\r\n\t\treturn true\r\n\t},\r\n\r\n\t/**\r\n\t * Phone numbers accepted are \"possible\" and \"valid\".\r\n\t * Numbers written in national format must have their national-prefix\r\n\t * present if it is usually written for a number of this type.\r\n\t */\r\n\tVALID(number, candidate, metadata)\r\n\t{\r\n\t\tif (!isValidNumber(number, undefined, metadata) ||\r\n\t\t\t!containsOnlyValidXChars(number, candidate.toString(), metadata))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n    // Skipped for simplicity.\r\n\t\t// return isNationalPrefixPresentIfRequired(number, metadata)\r\n    return true\r\n  },\r\n\r\n\t/**\r\n\t * Phone numbers accepted are \"valid\" and\r\n\t * are grouped in a possible way for this locale. For example, a US number written as\r\n\t * \"65 02 53 00 00\" and \"650253 0000\" are not accepted at this leniency level, whereas\r\n\t * \"650 253 0000\", \"650 2530000\" or \"6502530000\" are.\r\n\t * Numbers with more than one '/' symbol in the national significant number\r\n\t * are also dropped at this level.\r\n\t *\r\n\t * Warning: This level might result in lower coverage especially for regions outside of\r\n\t * country code \"+1\". If you are not sure about which level to use,\r\n\t * email the discussion group libphonenumber-discuss@googlegroups.com.\r\n\t */\r\n\tSTRICT_GROUPING(number, candidate, metadata, regExpCache)\r\n\t{\r\n\t\tconst candidateString = candidate.toString()\r\n\r\n\t\tif (!isValidNumber(number, undefined, metadata)\r\n\t\t\t|| !containsOnlyValidXChars(number, candidateString, metadata)\r\n\t\t\t|| containsMoreThanOneSlashInNationalNumber(number, candidateString)\r\n\t\t\t|| !isNationalPrefixPresentIfRequired(number, metadata))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn checkNumberGroupingIsValid\r\n\t\t(\r\n\t\t\tnumber,\r\n\t\t\tcandidate,\r\n\t\t\tmetadata,\r\n\t\t\tallNumberGroupsRemainGrouped,\r\n\t\t\tregExpCache\r\n\t\t)\r\n  },\r\n\r\n\t/**\r\n\t * Phone numbers accepted are {@linkplain PhoneNumberUtil#isValidNumber(PhoneNumber) valid} and\r\n\t * are grouped in the same way that we would have formatted it, or as a single block. For\r\n\t * example, a US number written as \"650 2530000\" is not accepted at this leniency level, whereas\r\n\t * \"650 253 0000\" or \"6502530000\" are.\r\n\t * Numbers with more than one '/' symbol are also dropped at this level.\r\n\t * <p>\r\n\t * Warning: This level might result in lower coverage especially for regions outside of country\r\n\t * code \"+1\". If you are not sure about which level to use, email the discussion group\r\n\t * libphonenumber-discuss@googlegroups.com.\r\n\t */\r\n\tEXACT_GROUPING(number, candidate, metadata, regExpCache)\r\n\t{\r\n\t\tconst candidateString = candidate.toString()\r\n\r\n\t\tif (!isValidNumber(number, undefined, metadata)\r\n\t\t\t|| !containsOnlyValidXChars(number, candidateString, metadata)\r\n\t\t\t|| containsMoreThanOneSlashInNationalNumber(number, candidateString)\r\n\t\t\t|| !isNationalPrefixPresentIfRequired(number, metadata))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn checkNumberGroupingIsValid\r\n\t\t(\r\n\t\t\tnumber,\r\n\t\t\tcandidate,\r\n\t\t\tmetadata,\r\n\t\t\tallNumberGroupsAreExactlyPresent,\r\n\t\t\tregExpCache\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction containsOnlyValidXChars(number, candidate, metadata)\r\n{\r\n  // The characters 'x' and 'X' can be (1) a carrier code, in which case they always precede the\r\n  // national significant number or (2) an extension sign, in which case they always precede the\r\n  // extension number. We assume a carrier code is more than 1 digit, so the first case has to\r\n  // have more than 1 consecutive 'x' or 'X', whereas the second case can only have exactly 1 'x'\r\n  // or 'X'. We ignore the character if it appears as the last character of the string.\r\n  for (let index = 0; index < candidate.length - 1; index++)\r\n  {\r\n    const charAtIndex = candidate.charAt(index)\r\n\r\n    if (charAtIndex === 'x' || charAtIndex === 'X')\r\n    {\r\n      const charAtNextIndex = candidate.charAt(index + 1)\r\n\r\n      if (charAtNextIndex === 'x' || charAtNextIndex === 'X')\r\n      {\r\n        // This is the carrier code case, in which the 'X's always precede the national\r\n        // significant number.\r\n        index++\r\n        if (util.isNumberMatch(number, candidate.substring(index)) != MatchType.NSN_MATCH)\r\n        {\r\n          return false\r\n        }\r\n\t      // This is the extension sign case, in which the 'x' or 'X' should always precede the\r\n\t      // extension number.\r\n      }\r\n      else if (parseDigits(candidate.substring(index)) !== number.ext)\r\n      {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction isNationalPrefixPresentIfRequired(number, _metadata)\r\n{\r\n  // First, check how we deduced the country code. If it was written in international format, then\r\n  // the national prefix is not required.\r\n  if (number.getCountryCodeSource() != 'FROM_DEFAULT_COUNTRY')\r\n  {\r\n    return true\r\n  }\r\n\r\n  const phoneNumberRegion = util.getRegionCodeForCountryCode(number.getCountryCode())\r\n\r\n  const metadata = util.getMetadataForRegion(phoneNumberRegion)\r\n  if (metadata == null)\r\n  {\r\n    return true\r\n  }\r\n\r\n  // Check if a national prefix should be present when formatting this number.\r\n  const nationalNumber = util.getNationalSignificantNumber(number)\r\n  const formatRule = util.chooseFormattingPatternForNumber(metadata.numberFormats(), nationalNumber)\r\n\r\n  // To do this, we check that a national prefix formatting rule was present\r\n  // and that it wasn't just the first-group symbol ($1) with punctuation.\r\n  if (formatRule && formatRule.getNationalPrefixFormattingRule().length > 0)\r\n  {\r\n    if (formatRule.getNationalPrefixOptionalWhenFormatting())\r\n    {\r\n      // The national-prefix is optional in these cases, so we don't need to check if it was\r\n      // present.\r\n      return true\r\n    }\r\n\r\n    if (PhoneNumberUtil.formattingRuleHasFirstGroupOnly(\r\n        formatRule.getNationalPrefixFormattingRule()))\r\n    {\r\n      // National Prefix not needed for this number.\r\n      return true\r\n    }\r\n\r\n    // Normalize the remainder.\r\n    const rawInputCopy = PhoneNumberUtil.normalizeDigitsOnly(number.getRawInput())\r\n\r\n    // Check if we found a national prefix and/or carrier code at the start of the raw input, and\r\n    // return the result.\r\n    return util.maybeStripNationalPrefixAndCarrierCode(rawInputCopy, metadata, null)\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport function containsMoreThanOneSlashInNationalNumber(number, candidate)\r\n{\r\n  const firstSlashInBodyIndex = candidate.indexOf('/')\r\n  if (firstSlashInBodyIndex < 0)\r\n  {\r\n    // No slashes, this is okay.\r\n    return false\r\n  }\r\n\r\n  // Now look for a second one.\r\n  const secondSlashInBodyIndex = candidate.indexOf('/', firstSlashInBodyIndex + 1)\r\n  if (secondSlashInBodyIndex < 0)\r\n  {\r\n    // Only one slash, this is okay.\r\n    return false\r\n  }\r\n\r\n  // If the first slash is after the country calling code, this is permitted.\r\n  const candidateHasCountryCode =\r\n      (number.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN\r\n       || number.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN)\r\n\r\n  if (candidateHasCountryCode\r\n      && PhoneNumberUtil.normalizeDigitsOnly(candidate.substring(0, firstSlashInBodyIndex))\r\n          === String(number.getCountryCode()))\r\n  {\r\n    // Any more slashes and this is illegal.\r\n    return candidate.slice(secondSlashInBodyIndex + 1).indexOf('/') >= 0\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction checkNumberGroupingIsValid(\r\n  number,\r\n  candidate,\r\n  metadata,\r\n  checkGroups,\r\n  regExpCache\r\n) {\r\n  const normalizedCandidate = normalizeDigits(candidate, true /* keep non-digits */)\r\n  let formattedNumberGroups = getNationalNumberGroups(metadata, number, null)\r\n  if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\r\n    return true\r\n  }\r\n\r\n  // If this didn't pass, see if there are any alternate formats that match, and try them instead.\r\n  const alternateFormats = MetadataManager.getAlternateFormatsForCountry(number.getCountryCode())\r\n  const nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n\r\n  if (alternateFormats) {\r\n    for (const alternateFormat of alternateFormats.numberFormats()) {\r\n      if (alternateFormat.leadingDigitsPatterns().length > 0) {\r\n        // There is only one leading digits pattern for alternate formats.\r\n        const leadingDigitsRegExp = regExpCache.getPatternForRegExp('^' + alternateFormat.leadingDigitsPatterns()[0])\r\n        if (!leadingDigitsRegExp.test(nationalSignificantNumber)) {\r\n          // Leading digits don't match; try another one.\r\n          continue\r\n        }\r\n      }\r\n      formattedNumberGroups = getNationalNumberGroups(metadata, number, alternateFormat)\r\n      if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Helper method to get the national-number part of a number, formatted without any national\r\n * prefix, and return it as a set of digit blocks that would be formatted together following\r\n * standard formatting rules.\r\n */\r\nfunction getNationalNumberGroups(\r\n\tmetadata,\r\n\tnumber,\r\n\tformattingPattern\r\n) {\r\n  if (formattingPattern) {\r\n    // We format the NSN only, and split that according to the separator.\r\n    const nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n    return util.formatNsnUsingPattern(nationalSignificantNumber,\r\n                                      formattingPattern, 'RFC3966', metadata).split('-')\r\n\t}\r\n\r\n  // This will be in the format +CC-DG1-DG2-DGX;ext=EXT where DG1..DGX represents groups of digits.\r\n  const rfc3966Format = formatNumber(number, 'RFC3966', metadata)\r\n\r\n  // We remove the extension part from the formatted string before splitting it into different\r\n  // groups.\r\n  let endIndex = rfc3966Format.indexOf(';')\r\n  if (endIndex < 0) {\r\n    endIndex = rfc3966Format.length\r\n  }\r\n\r\n  // The country-code will have a '-' following it.\r\n  const startIndex = rfc3966Format.indexOf('-') + 1\r\n  return rfc3966Format.slice(startIndex, endIndex).split('-')\r\n}\r\n\r\nfunction allNumberGroupsAreExactlyPresent\r\n(\r\n\tmetadata,\r\n\tnumber,\r\n\tnormalizedCandidate,\r\n\tformattedNumberGroups\r\n)\r\n{\r\n  const candidateGroups = normalizedCandidate.split(NON_DIGITS_PATTERN)\r\n\r\n  // Set this to the last group, skipping it if the number has an extension.\r\n  let candidateNumberGroupIndex =\r\n      number.hasExtension() ? candidateGroups.length - 2 : candidateGroups.length - 1\r\n\r\n  // First we check if the national significant number is formatted as a block.\r\n  // We use contains and not equals, since the national significant number may be present with\r\n  // a prefix such as a national number prefix, or the country code itself.\r\n  if (candidateGroups.length == 1\r\n      || candidateGroups[candidateNumberGroupIndex].contains(\r\n          util.getNationalSignificantNumber(number)))\r\n  {\r\n    return true\r\n  }\r\n\r\n  // Starting from the end, go through in reverse, excluding the first group, and check the\r\n  // candidate and number groups are the same.\r\n  let formattedNumberGroupIndex = (formattedNumberGroups.length - 1)\r\n  while (formattedNumberGroupIndex > 0 && candidateNumberGroupIndex >= 0)\r\n  {\r\n    if (candidateGroups[candidateNumberGroupIndex] !== formattedNumberGroups[formattedNumberGroupIndex])\r\n    {\r\n      return false\r\n    }\r\n    formattedNumberGroupIndex--\r\n    candidateNumberGroupIndex--\r\n  }\r\n\r\n  // Now check the first group. There may be a national prefix at the start, so we only check\r\n  // that the candidate group ends with the formatted number group.\r\n  return (candidateNumberGroupIndex >= 0\r\n      && endsWith(candidateGroups[candidateNumberGroupIndex], formattedNumberGroups[0]))\r\n}\r\n\r\n\r\nfunction allNumberGroupsRemainGrouped\r\n(\r\n\tmetadata,\r\n\tnumber,\r\n\tnormalizedCandidate,\r\n\tformattedNumberGroups\r\n)\r\n{\r\n  let fromIndex = 0\r\n  if (number.getCountryCodeSource() !== CountryCodeSource.FROM_DEFAULT_COUNTRY)\r\n  {\r\n    // First skip the country code if the normalized candidate contained it.\r\n    const countryCode = String(number.getCountryCode())\r\n    fromIndex = normalizedCandidate.indexOf(countryCode) + countryCode.length()\r\n  }\r\n\r\n  // Check each group of consecutive digits are not broken into separate groupings in the\r\n  // {@code normalizedCandidate} string.\r\n  for (let i = 0; i < formattedNumberGroups.length; i++)\r\n  {\r\n    // Fails if the substring of {@code normalizedCandidate} starting from {@code fromIndex}\r\n    // doesn't contain the consecutive digits in formattedNumberGroups[i].\r\n    fromIndex = normalizedCandidate.indexOf(formattedNumberGroups[i], fromIndex)\r\n    if (fromIndex < 0) {\r\n      return false\r\n    }\r\n    // Moves {@code fromIndex} forward.\r\n    fromIndex += formattedNumberGroups[i].length()\r\n    if (i == 0 && fromIndex < normalizedCandidate.length())\r\n    {\r\n      // We are at the position right after the NDC. We get the region used for formatting\r\n      // information based on the country code in the phone number, rather than the number itself,\r\n      // as we do not need to distinguish between different countries with the same country\r\n      // calling code and this is faster.\r\n      const region = util.getRegionCodeForCountryCode(number.getCountryCode())\r\n      if (util.getNddPrefixForRegion(region, true) != null\r\n          && Character.isDigit(normalizedCandidate.charAt(fromIndex))) {\r\n        // This means there is no formatting symbol after the NDC. In this case, we only\r\n        // accept the number if there is no formatting symbol at all in the number, except\r\n        // for extensions. This is only important for countries with national prefixes.\r\n        const nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n        return startsWith\r\n        (\r\n      \t  normalizedCandidate.slice(fromIndex - formattedNumberGroups[i].length),\r\n           nationalSignificantNumber\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // The check here makes sure that we haven't mistakenly already used the extension to\r\n  // match the last group of the subscriber number. Note the extension cannot have\r\n  // formatting in-between digits.\r\n  return normalizedCandidate.slice(fromIndex).contains(number.getExtension())\r\n}", "import { trimAfterFirstMatch } from './util'\r\n\r\n// Regular expression of characters typically used to start a second phone number for the purposes\r\n// of parsing. This allows us to strip off parts of the number that are actually the start of\r\n// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this\r\n// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second\r\n// extension so that the first number is parsed correctly.\r\n//\r\n// Matches a slash (\\ or /) followed by a space followed by an `x`.\r\n//\r\nconst SECOND_NUMBER_START_PATTERN = /[\\\\/] *x/\r\n\r\nexport default function parsePreCandidate(candidate)\r\n{\r\n\t// Check for extra numbers at the end.\r\n\t// TODO: This is the place to start when trying to support extraction of multiple phone number\r\n\t// from split notations (+41 79 123 45 67 / 68).\r\n\treturn trimAfterFirstMatch(SECOND_NUMBER_START_PATTERN, candidate)\r\n}", "// Matches strings that look like dates using \"/\" as a separator.\r\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\r\nconst SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/\r\n\r\n// Matches timestamps.\r\n// Examples: \"2012-01-02 08:00\".\r\n// Note that the reg-ex does not include the\r\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\r\nconst TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/\r\nconst TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/\r\n\r\nexport default function isValidPreCandidate(candidate, offset, text)\r\n{\r\n\t// Skip a match that is more likely to be a date.\r\n\tif (SLASH_SEPARATED_DATES.test(candidate)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Skip potential time-stamps.\r\n\tif (TIME_STAMPS.test(candidate))\r\n\t{\r\n\t\tconst followingText = text.slice(offset + candidate.length)\r\n\t\tif (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}", "// Copy-pasted from `PhoneNumberMatcher.js`.\r\n\r\nimport { PLUS_CHARS } from '../constants'\r\nimport { limit } from './util'\r\n\r\nimport {\r\n\tisLatinLetter,\r\n\tisInvalidPunctuationSymbol\r\n} from './utf-8'\r\n\r\nconst OPENING_PARENS = '(\\\\[\\uFF08\\uFF3B'\r\nconst CLOSING_PARENS = ')\\\\]\\uFF09\\uFF3D'\r\nconst NON_PARENS = `[^${OPENING_PARENS}${CLOSING_PARENS}]`\r\n\r\nexport const LEAD_CLASS = `[${OPENING_PARENS}${PLUS_CHARS}]`\r\n\r\n// Punctuation that may be at the start of a phone number - brackets and plus signs.\r\nconst LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS)\r\n\r\n// Limit on the number of pairs of brackets in a phone number.\r\nconst BRACKET_PAIR_LIMIT = limit(0, 3)\r\n\r\n/**\r\n * Pattern to check that brackets match. Opening brackets should be closed within a phone number.\r\n * This also checks that there is something inside the brackets. Having no brackets at all is also\r\n * fine.\r\n *\r\n * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's\r\n * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a\r\n * closing bracket first. We limit the sets of brackets in a phone number to four.\r\n */\r\nconst MATCHING_BRACKETS_ENTIRE = new RegExp\r\n(\r\n\t'^'\r\n\t+ \"(?:[\" + OPENING_PARENS + \"])?\" + \"(?:\" + NON_PARENS + \"+\" + \"[\" + CLOSING_PARENS + \"])?\"\r\n\t+ NON_PARENS + \"+\"\r\n\t+ \"(?:[\" + OPENING_PARENS + \"]\" + NON_PARENS + \"+[\" + CLOSING_PARENS + \"])\" + BRACKET_PAIR_LIMIT\r\n\t+ NON_PARENS + \"*\"\r\n\t+ '$'\r\n)\r\n\r\n/**\r\n * Matches strings that look like publication pages. Example:\r\n * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.\r\n * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>\r\n *\r\n * The string \"211-227 (2003)\" is not a telephone number.\r\n */\r\nconst PUB_PAGES = /\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}/\r\n\r\nexport default function isValidCandidate(candidate, offset, text, leniency)\r\n{\r\n\t// Check the candidate doesn't contain any formatting\r\n\t// which would indicate that it really isn't a phone number.\r\n\tif (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded\r\n\t// by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.\r\n\tif (leniency !== 'POSSIBLE')\r\n\t{\r\n\t\t// If the candidate is not at the start of the text,\r\n\t\t// and does not start with phone-number punctuation,\r\n\t\t// check the previous character.\r\n\t\tif (offset > 0 && !LEAD_CLASS_LEADING.test(candidate))\r\n\t\t{\r\n\t\t\tconst previousChar = text[offset - 1]\r\n\t\t\t// We return null if it is a latin letter or an invalid punctuation symbol.\r\n\t\t\tif (isInvalidPunctuationSymbol(previousChar) || isLatinLetter(previousChar)) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastCharIndex = offset + candidate.length\r\n\t\tif (lastCharIndex < text.length)\r\n\t\t{\r\n\t\t\tconst nextChar = text[lastCharIndex]\r\n\t\t\tif (isInvalidPunctuationSymbol(nextChar) || isLatinLetter(nextChar)) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}", "/**\r\n * A port of Google's `PhoneNumberMatcher.java`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberMatcher.java\r\n * Date: 08.03.2018.\r\n */\r\n\r\nimport PhoneNumber from './PhoneNumber'\r\n\r\nimport {\r\n  MAX_LENGTH_FOR_NSN,\r\n  MAX_LENGTH_COUNTRY_CODE,\r\n  VALID_PUNCTUATION\r\n} from './constants'\r\n\r\nimport createExtensionPattern from './helpers/extension/createExtensionPattern'\r\n\r\nimport RegExpCache from './findNumbers/RegExpCache'\r\n\r\nimport {\r\n\tlimit,\r\n\ttrimAfterFirstMatch\r\n} from './findNumbers/util'\r\n\r\nimport {\r\n\t_pL,\r\n\t_pN,\r\n\tpZ,\r\n\tPZ,\r\n\tpNd\r\n} from './findNumbers/utf-8'\r\n\r\nimport Leniency from './findNumbers/Leniency'\r\nimport parsePreCandidate from './findNumbers/parsePreCandidate'\r\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate'\r\nimport isValidCandidate, { LEAD_CLASS } from './findNumbers/isValidCandidate'\r\n\r\nimport { isSupportedCountry } from './metadata'\r\n\r\nimport parseNumber from './parse_'\r\n\r\nconst EXTN_PATTERNS_FOR_MATCHING = createExtensionPattern('matching')\r\n\r\n/**\r\n * Patterns used to extract phone numbers from a larger phone-number-like pattern. These are\r\n * ordered according to specificity. For example, white-space is last since that is frequently\r\n * used in numbers, not just to separate two numbers. We have separate patterns since we don't\r\n * want to break up the phone-number-like text on more than one different kind of symbol at one\r\n * time, although symbols of the same type (e.g. space) can be safely grouped together.\r\n *\r\n * Note that if there is a match, we will always check any text found up to the first match as\r\n * well.\r\n */\r\nconst INNER_MATCHES =\r\n[\r\n\t// Breaks on the slash - e.g. \"651-234-2345/332-445-1234\"\r\n\t'\\\\/+(.*)/',\r\n\r\n\t// Note that the bracket here is inside the capturing group, since we consider it part of the\r\n\t// phone number. Will match a pattern like \"(650) 223 3345 (754) 223 3321\".\r\n\t'(\\\\([^(]*)',\r\n\r\n\t// Breaks on a hyphen - e.g. \"12345 - 332-445-1234 is my number.\"\r\n\t// We require a space on either side of the hyphen for it to be considered a separator.\r\n\t`(?:${pZ}-|-${pZ})${pZ}*(.+)`,\r\n\r\n\t// Various types of wide hyphens. Note we have decided not to enforce a space here, since it's\r\n\t// possible that it's supposed to be used to break two numbers without spaces, and we haven't\r\n\t// seen many instances of it used within a number.\r\n\t`[\\u2012-\\u2015\\uFF0D]${pZ}*(.+)`,\r\n\r\n\t// Breaks on a full stop - e.g. \"12345. 332-445-1234 is my number.\"\r\n\t`\\\\.+${pZ}*([^.]+)`,\r\n\r\n\t// Breaks on space - e.g. \"3324451234 8002341234\"\r\n\t`${pZ}+(${PZ}+)`\r\n]\r\n\r\n// Limit on the number of leading (plus) characters.\r\nconst leadLimit = limit(0, 2)\r\n\r\n// Limit on the number of consecutive punctuation characters.\r\nconst punctuationLimit = limit(0, 4)\r\n\r\n/* The maximum number of digits allowed in a digit-separated block. As we allow all digits in a\r\n * single block, set high enough to accommodate the entire national number and the international\r\n * country code. */\r\nconst digitBlockLimit = MAX_LENGTH_FOR_NSN + MAX_LENGTH_COUNTRY_CODE\r\n\r\n// Limit on the number of blocks separated by punctuation.\r\n// Uses digitBlockLimit since some formats use spaces to separate each digit.\r\nconst blockLimit = limit(0, digitBlockLimit)\r\n\r\n/* A punctuation sequence allowing white space. */\r\nconst punctuation = `[${VALID_PUNCTUATION}]` + punctuationLimit\r\n\r\n// A digits block without punctuation.\r\nconst digitSequence = pNd + limit(1, digitBlockLimit)\r\n\r\n/**\r\n * Phone number pattern allowing optional punctuation.\r\n * The phone number pattern used by `find()`, similar to\r\n * VALID_PHONE_NUMBER, but with the following differences:\r\n * <ul>\r\n *   <li>All captures are limited in order to place an upper bound to the text matched by the\r\n *       pattern.\r\n * <ul>\r\n *   <li>Leading punctuation / plus signs are limited.\r\n *   <li>Consecutive occurrences of punctuation are limited.\r\n *   <li>Number of digits is limited.\r\n * </ul>\r\n *   <li>No whitespace is allowed at the start or end.\r\n *   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.\r\n * </ul>\r\n */\r\nconst PATTERN = '(?:' + LEAD_CLASS + punctuation + ')' + leadLimit\r\n\t+ digitSequence + '(?:' + punctuation + digitSequence + ')' + blockLimit\r\n\t+ '(?:' + EXTN_PATTERNS_FOR_MATCHING + ')?'\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// We remove all characters that are not alpha or numerical characters.\r\n// The hash character is retained here, as it may signify\r\n// the previous block was an extension.\r\n//\r\n// // Don't know what does '&&' mean here.\r\n// const UNWANTED_END_CHAR_PATTERN = new RegExp(`[[\\\\P{N}&&\\\\P{L}]&&[^#]]+$`)\r\n//\r\nconst UNWANTED_END_CHAR_PATTERN = new RegExp(`[^${_pN}${_pL}#]+$`)\r\n\r\nconst NON_DIGITS_PATTERN = /(\\D+)/\r\n\r\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1\r\n\r\n/**\r\n * A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.\r\n * Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in\r\n * {@link PhoneNumberUtil}.\r\n *\r\n * <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are\r\n * not found.\r\n *\r\n * <p>This class is not thread-safe.\r\n */\r\nexport default class PhoneNumberMatcher\r\n{\r\n  /** The iteration tristate. */\r\n  state = 'NOT_READY'\r\n\r\n  /** The next index to start searching at. Undefined in {@link State#DONE}. */\r\n  searchIndex = 0\r\n\r\n  // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\r\n  // countries being used for the same doc with ~10 patterns for each country. Some pages will have\r\n  // a lot more countries in use, but typically fewer numbers for each so expanding the cache for\r\n  // that use-case won't have a lot of benefit.\r\n  regExpCache = new RegExpCache(32)\r\n\r\n  /**\r\n   * Creates a new instance. See the factory methods in {@link PhoneNumberUtil} on how to obtain a\r\n   * new instance.\r\n   *\r\n   * @param util  the phone number util to use\r\n   * @param text  the character sequence that we will search, null for no text\r\n   * @param country  the country to assume for phone numbers not written in international format\r\n   *     (with a leading plus, or with the international dialing prefix of the specified region).\r\n   *     May be null or \"ZZ\" if only numbers with a leading plus should be\r\n   *     considered.\r\n   * @param leniency  the leniency to use when evaluating candidate phone numbers\r\n   * @param maxTries  the maximum number of invalid numbers to try before giving up on the text.\r\n   *     This is to cover degenerate cases where the text has a lot of false positives in it. Must\r\n   *     be {@code >= 0}.\r\n   */\r\n  constructor(text = '', options = {}, metadata)\r\n  {\r\n    options = {\r\n      ...options,\r\n      defaultCallingCode: options.defaultCallingCode,\r\n      defaultCountry: options.defaultCountry && isSupportedCountry(options.defaultCountry, metadata) ? options.defaultCountry : undefined,\r\n      leniency: options.leniency || options.extended ? 'POSSIBLE' : 'VALID',\r\n      maxTries: options.maxTries || MAX_SAFE_INTEGER\r\n    }\r\n\r\n\t\tif (!options.leniency) {\r\n\t\t\tthrow new TypeError('`Leniency` not supplied')\r\n\t\t}\r\n\r\n\t\tif (options.maxTries < 0) {\r\n\t\t\tthrow new TypeError('`maxTries` not supplied')\r\n\t\t}\r\n\r\n\t\tthis.text = text\r\n\t\tthis.options = options\r\n    this.metadata = metadata\r\n\r\n\t\t/** The degree of validation requested. */\r\n\t\tthis.leniency = Leniency[options.leniency]\r\n\r\n\t\tif (!this.leniency) {\r\n\t\t\tthrow new TypeError(`Unknown leniency: ${options.leniency}.`)\r\n\t\t}\r\n\r\n\t\t/** The maximum number of retries after matching an invalid number. */\r\n\t\tthis.maxTries = options.maxTries\r\n\r\n\t\tthis.PATTERN = new RegExp(PATTERN, 'ig')\r\n  }\r\n\r\n  /**\r\n   * Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}\r\n   * that represents a phone number. Returns the next match, null if none was found.\r\n   *\r\n   * @param index  the search index to start searching at\r\n   * @return  the phone number match found, null if none can be found\r\n   */\r\n\tfind() {\r\n\t\t// // Reset the regular expression.\r\n\t\t// this.PATTERN.lastIndex = index\r\n\r\n\t\tlet matches\r\n\t\twhile ((this.maxTries > 0) && (matches = this.PATTERN.exec(this.text)) !== null) {\r\n\t\t\tlet candidate = matches[0]\r\n\t\t\tconst offset = matches.index\r\n\r\n\t\t\tcandidate = parsePreCandidate(candidate)\r\n\r\n\t\t\tif (isValidPreCandidate(candidate, offset, this.text)) {\r\n\t\t\t\tconst match =\r\n\t\t\t\t\t// Try to come up with a valid match given the entire candidate.\r\n\t\t\t\t\tthis.parseAndVerify(candidate, offset, this.text)\r\n\t\t\t\t\t// If that failed, try to find an \"inner match\" -\r\n\t\t\t\t\t// there might be a phone number within this candidate.\r\n\t\t\t\t\t|| this.extractInnerMatch(candidate, offset, this.text)\r\n\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\tif (this.options.v2) {\r\n\t\t\t\t\t\tconst phoneNumber = new PhoneNumber(\r\n              match.country || match.countryCallingCode,\r\n              match.phone,\r\n              this.metadata\r\n            )\r\n\t\t\t\t\t\tif (match.ext) {\r\n\t\t\t\t\t\t\tphoneNumber.ext = match.ext\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tstartsAt: match.startsAt,\r\n\t\t\t\t\t\t\tendsAt: match.endsAt,\r\n\t\t\t\t\t\t\tnumber: phoneNumber\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.maxTries--\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Attempts to extract a match from `substring`\r\n   * if the substring itself does not qualify as a match.\r\n   */\r\n  extractInnerMatch(substring, offset, text) {\r\n    for (const innerMatchPattern of INNER_MATCHES) {\r\n      let isFirstMatch = true\r\n      let candidateMatch\r\n      const innerMatchRegExp = new RegExp(innerMatchPattern, 'g')\r\n      while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {\r\n        if (isFirstMatch) {\r\n          // We should handle any group before this one too.\r\n          const candidate = trimAfterFirstMatch(\r\n            UNWANTED_END_CHAR_PATTERN,\r\n            substring.slice(0, candidateMatch.index)\r\n          )\r\n\r\n          const match = this.parseAndVerify(candidate, offset, text)\r\n\r\n          if (match) {\r\n            return match\r\n          }\r\n\r\n          this.maxTries--\r\n          isFirstMatch = false\r\n        }\r\n\r\n        const candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, candidateMatch[1])\r\n\r\n        // Java code does `groupMatcher.start(1)` here,\r\n        // but there's no way in javascript to get a `candidate` start index,\r\n        // therefore resort to using this kind of an approximation.\r\n        // (`groupMatcher` is called `candidateInSubstringMatch` in this javascript port)\r\n        // https://stackoverflow.com/questions/15934353/get-index-of-each-capture-in-a-javascript-regex\r\n        const candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index)\r\n\r\n        const match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text)\r\n        if (match) {\r\n          return match\r\n        }\r\n\r\n        this.maxTries--\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses a phone number from the `candidate` using `parseNumber` and\r\n   * verifies it matches the requested `leniency`. If parsing and verification succeed,\r\n   * a corresponding `PhoneNumberMatch` is returned, otherwise this method returns `null`.\r\n   *\r\n   * @param candidate  the candidate match\r\n   * @param offset  the offset of {@code candidate} within {@link #text}\r\n   * @return  the parsed and validated phone number match, or null\r\n   */\r\n  parseAndVerify(candidate, offset, text) {\r\n    if (!isValidCandidate(candidate, offset, text, this.options.leniency)) {\r\n      return\r\n  \t}\r\n\r\n    const number = parseNumber(\r\n      candidate, {\r\n        extended: true,\r\n        defaultCountry: this.options.defaultCountry,\r\n        defaultCallingCode: this.options.defaultCallingCode\r\n      },\r\n      this.metadata\r\n    )\r\n\r\n    if (!number.possible) {\r\n      return\r\n    }\r\n\r\n    if (this.leniency(number, candidate, this.metadata, this.regExpCache)) {\r\n      // // We used parseAndKeepRawInput to create this number,\r\n      // // but for now we don't return the extra values parsed.\r\n      // // TODO: stop clearing all values here and switch all users over\r\n      // // to using rawInput() rather than the rawString() of PhoneNumberMatch.\r\n      // number.clearCountryCodeSource()\r\n      // number.clearRawInput()\r\n      // number.clearPreferredDomesticCarrierCode()\r\n\r\n      const result = {\r\n        startsAt: offset,\r\n        endsAt: offset + candidate.length,\r\n        phone: number.phone\r\n      }\r\n\r\n      if (number.country && number.country !== '001') {\r\n        result.country = number.country\r\n      } else {\r\n        result.countryCallingCode = number.countryCallingCode\r\n      }\r\n\r\n      if (number.ext) {\r\n        result.ext = number.ext\r\n      }\r\n\r\n      return result\r\n    }\r\n  }\r\n\r\n  hasNext()\r\n  {\r\n    if (this.state === 'NOT_READY')\r\n    {\r\n      this.lastMatch = this.find() // (this.searchIndex)\r\n\r\n      if (this.lastMatch)\r\n      {\r\n        // this.searchIndex = this.lastMatch.endsAt\r\n        this.state = 'READY'\r\n      }\r\n      else\r\n      {\r\n        this.state = 'DONE'\r\n      }\r\n    }\r\n\r\n    return this.state === 'READY'\r\n  }\r\n\r\n  next()\r\n  {\r\n    // Check the state and find the next match as a side-effect if necessary.\r\n    if (!this.hasNext())\r\n    {\r\n      throw new Error('No next element')\r\n    }\r\n\r\n    // Don't retain that memory any longer than necessary.\r\n    const result = this.lastMatch\r\n    this.lastMatch = null\r\n    this.state = 'NOT_READY'\r\n    return result\r\n  }\r\n}", "import PhoneNumberMatcher from './PhoneNumberMatcher'\r\n\r\nexport default function findNumbers(text, options, metadata) {\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\tconst results = []\r\n\twhile (matcher.hasNext()) {\r\n\t\tresults.push(matcher.next())\r\n\t}\r\n\treturn results\r\n}", "import _findNumbers from './findNumbers_'\r\nimport { normalizeArguments } from './parsePhoneNumber'\r\n\r\nexport default function findNumbers() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findNumbers(text, options, metadata)\r\n}", "import { normalizeArguments } from './parsePhoneNumber'\r\nimport PhoneNumberMatcher from './PhoneNumberMatcher'\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport default function searchNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (matcher.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: matcher.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "import findNumbers from './findNumbers'\r\n\r\nexport default function findPhoneNumbersInText(text, defaultCountry, options, metadata) {\r\n\tconst args = getArguments(defaultCountry, options, metadata)\r\n\treturn findNumbers(text, args.options, args.metadata)\r\n}\r\n\r\nexport function getArguments(defaultCountry, options, metadata) {\r\n\tif (metadata) {\r\n\t\tif (defaultCountry) {\r\n\t\t\toptions = {\r\n\t\t\t\t...options,\r\n\t\t\t\tdefaultCountry\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tif (options) {\r\n\t\t\tmetadata = options\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (is_object(defaultCountry)) {\r\n\t\t\t\t\toptions = defaultCountry\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions = { defaultCountry }\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\toptions = undefined\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmetadata = defaultCountry\r\n\t\t\toptions = undefined\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\t...options,\r\n\t\t\tv2: true\r\n\t\t},\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'", "import searchNumbers from './searchNumbers'\r\nimport { getArguments } from './findPhoneNumbersInText'\r\n\r\nexport default function searchPhoneNumbersInText(text, defaultCountry, options, metadata) {\r\n\tconst args = getArguments(defaultCountry, options, metadata)\r\n\treturn searchNumbers(text, args.options, args.metadata)\r\n}", "export default class AsYouTypeState {\r\n\tconstructor({ onCountryChange, onCallingCodeChange }) {\r\n\t\tthis.onCountryChange = onCountryChange\r\n\t\tthis.onCallingCodeChange = onCallingCodeChange\r\n\t}\r\n\r\n\treset(defaultCountry, defaultCallingCode) {\r\n\t\tthis.international = false\r\n\t\tthis.IDDPrefix = undefined\r\n\t\tthis.missingPlus = undefined\r\n\t\tthis.callingCode = undefined\r\n\t\tthis.digits = ''\r\n\t\tthis.resetNationalSignificantNumber()\r\n\t\tthis.initCountryAndCallingCode(defaultCountry, defaultCallingCode)\r\n\t}\r\n\r\n\tresetNationalSignificantNumber() {\r\n\t\tthis.nationalSignificantNumber = this.getNationalDigits()\r\n\t\tthis.nationalSignificantNumberMatchesInput = true\r\n\t\tthis.nationalPrefix = undefined\r\n\t\tthis.carrierCode = undefined\r\n\t\tthis.complexPrefixBeforeNationalSignificantNumber = undefined\r\n\t}\r\n\r\n\tupdate = (properties) => {\r\n\t\tfor (const key of Object.keys(properties)) {\r\n\t\t\tthis[key] = properties[key]\r\n\t\t}\r\n\t}\r\n\r\n\tinitCountryAndCallingCode(country, callingCode) {\r\n\t\tthis.setCountry(country)\r\n\t\tthis.setCallingCode(callingCode)\r\n\t}\r\n\r\n\tsetCountry(country) {\r\n\t\tthis.country = country\r\n\t\tthis.onCountryChange(country)\r\n\t}\r\n\r\n\tsetCallingCode(callingCode) {\r\n\t\tthis.callingCode = callingCode\r\n\t\treturn this.onCallingCodeChange(this.country, callingCode)\r\n\t}\r\n\r\n\tstartInternationalNumber() {\r\n\t\t// Prepend the `+` to parsed input.\r\n\t\tthis.international = true\r\n\t\t// If a default country was set then reset it\r\n\t\t// because an explicitly international phone\r\n\t\t// number is being entered.\r\n\t\tthis.initCountryAndCallingCode()\r\n\t}\r\n\r\n\tappendDigits(nextDigits) {\r\n\t\tthis.digits += nextDigits\r\n\t}\r\n\r\n\tappendNationalSignificantNumberDigits(nextDigits) {\r\n\t\tthis.nationalSignificantNumber += nextDigits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the part of `this.digits` that corresponds to the national number.\r\n\t * Basically, all digits that have been input by the user, except for the\r\n\t * international prefix and the country calling code part\r\n\t * (if the number is an international one).\r\n\t * @return {string}\r\n\t */\r\n\tgetNationalDigits() {\r\n\t\tif (this.international) {\r\n\t\t\treturn this.digits.slice(\r\n\t\t\t\t(this.IDDPrefix ? this.IDDPrefix.length : 0) +\r\n\t\t\t\t(this.callingCode ? this.callingCode.length : 0)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n\r\n\tgetDigitsWithoutInternationalPrefix() {\r\n\t\tif (this.international) {\r\n\t\t\tif (this.IDDPrefix) {\r\n\t\t\t\treturn this.digits.slice(this.IDDPrefix.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n}", "// Should be the same as `DIGIT_PLACEHOLDER` in `libphonenumber-metadata-generator`.\r\nexport const DIGIT_PLACEHOLDER = 'x' // '\\u2008' (punctuation space)\r\nconst DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER)\r\n\r\n// Counts all occurences of a symbol in a string.\r\n// Unicode-unsafe (because using `.split()`).\r\nexport function countOccurences(symbol, string) {\r\n\tlet count = 0\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for counting brackets it is safe.\r\n\t// for (const character of string)\r\n\tfor (const character of string.split('')) {\r\n\t\tif (character === symbol) {\r\n\t\t\tcount++\r\n\t\t}\r\n\t}\r\n\treturn count\r\n}\r\n\r\n// Repeats a string (or a symbol) N times.\r\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\r\nexport function repeat(string, times) {\r\n\tif (times < 1) {\r\n\t\treturn ''\r\n\t}\r\n\tlet result = ''\r\n\twhile (times > 1) {\r\n\t\tif (times & 1) {\r\n\t\t\tresult += string\r\n\t\t}\r\n\t\ttimes >>= 1\r\n\t\tstring += string\r\n\t}\r\n\treturn result + string\r\n}\r\n\r\nexport function cutAndStripNonPairedParens(string, cutBeforeIndex) {\r\n\tif (string[cutBeforeIndex] === ')') {\r\n\t\tcutBeforeIndex++\r\n\t}\r\n\treturn stripNonPairedParens(string.slice(0, cutBeforeIndex))\r\n}\r\n\r\nexport function closeNonPairedParens(template, cut_before) {\r\n\tconst retained_template = template.slice(0, cut_before)\r\n\tconst opening_braces = countOccurences('(', retained_template)\r\n\tconst closing_braces = countOccurences(')', retained_template)\r\n\tlet dangling_braces = opening_braces - closing_braces\r\n\twhile (dangling_braces > 0 && cut_before < template.length) {\r\n\t\tif (template[cut_before] === ')') {\r\n\t\t\tdangling_braces--\r\n\t\t}\r\n\t\tcut_before++\r\n\t}\r\n\treturn template.slice(0, cut_before)\r\n}\r\n\r\nexport function stripNonPairedParens(string) {\r\n\tconst dangling_braces =[]\r\n\tlet i = 0\r\n\twhile (i < string.length) {\r\n\t\tif (string[i] === '(') {\r\n\t\t\tdangling_braces.push(i)\r\n\t\t}\r\n\t\telse if (string[i] === ')') {\r\n\t\t\tdangling_braces.pop()\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\tlet start = 0\r\n\tlet cleared_string = ''\r\n\tdangling_braces.push(string.length)\r\n\tfor (const index of dangling_braces) {\r\n\t\tcleared_string += string.slice(start, index)\r\n\t\tstart = index + 1\r\n\t}\r\n\treturn cleared_string\r\n}\r\n\r\nexport function populateTemplateWithDigits(template, position, digits) {\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for `digits` it is safe.\r\n\t// for (const digit of digits)\r\n\tfor (const digit of digits.split('')) {\r\n\t\t// If there is room for more digits in current `template`,\r\n\t\t// then set the next digit in the `template`,\r\n\t\t// and return the formatted digits so far.\r\n\t\t// If more digits are entered than the current format could handle.\r\n\t\tif (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tposition = template.search(DIGIT_PLACEHOLDER_MATCHER)\r\n\t\ttemplate = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit)\r\n\t}\r\n\treturn [template, position]\r\n}", "import checkNumberLength from './helpers/checkNumberLength'\r\nimport parseDigits from './helpers/parseDigits'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat'\r\n\r\nexport default function formatCompleteNumber(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tconst matcher = new RegExp(`^(?:${format.pattern()})$`)\r\n\tif (matcher.test(state.nationalSignificantNumber)) {\r\n\t\treturn formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(\r\n\t\t\tstate,\r\n\t\t\tformat,\r\n\t\t\t{\r\n\t\t\t\tmetadata,\r\n\t\t\t\tshouldTryNationalPrefixFormattingRule,\r\n\t\t\t\tgetSeparatorAfterNationalPrefix\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport function canFormatCompleteNumber(nationalSignificantNumber, metadata) {\r\n\treturn checkNumberLength(nationalSignificantNumber, metadata) === 'IS_POSSIBLE'\r\n}\r\n\r\nfunction formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\t// `format` has already been checked for `nationalPrefix` requirement.\r\n\r\n\tconst {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode\r\n\t} = state\r\n\r\n\t// Format the number with using `national_prefix_formatting_rule`.\r\n\t// If the resulting formatted number is a valid formatted number, then return it.\r\n\t//\r\n\t// Google's AsYouType formatter is different in a way that it doesn't try\r\n\t// to format using the \"national prefix formatting rule\", and instead it\r\n\t// simply prepends a national prefix followed by a \" \" character.\r\n\t// This code does that too, but as a fallback.\r\n\t// The reason is that \"national prefix formatting rule\" may use parentheses,\r\n\t// which wouldn't be included has it used the simpler Google's way.\r\n\t//\r\n\tif (shouldTryNationalPrefixFormattingRule(format)) {\r\n\t\tconst formattedNumber = formatNationalNumber(state, format, {\r\n\t\t\tuseNationalPrefixFormattingRule: true,\r\n\t\t\tgetSeparatorAfterNationalPrefix,\r\n\t\t\tmetadata\r\n\t\t})\r\n\t\tif (formattedNumber) {\r\n\t\t\treturn formattedNumber\r\n\t\t}\r\n\t}\r\n\r\n\t// Format the number without using `national_prefix_formatting_rule`.\r\n\treturn formatNationalNumber(state, format, {\r\n\t\tuseNationalPrefixFormattingRule: false,\r\n\t\tgetSeparatorAfterNationalPrefix,\r\n\t\tmetadata\r\n\t})\r\n}\r\n\r\nfunction formatNationalNumber(state, format, {\r\n\tmetadata,\r\n\tuseNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tlet formattedNationalNumber = formatNationalNumberUsingFormat(\r\n\t\tstate.nationalSignificantNumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tcarrierCode: state.carrierCode,\r\n\t\t\tuseInternationalFormat: state.international,\r\n\t\t\twithNationalPrefix: useNationalPrefixFormattingRule,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n\tif (!useNationalPrefixFormattingRule) {\r\n\t\tif (state.nationalPrefix) {\r\n\t\t\t// If a national prefix was extracted, then just prepend it,\r\n\t\t\t// followed by a \" \" character.\r\n\t\t\tformattedNationalNumber = state.nationalPrefix +\r\n\t\t\t\tgetSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t} else if (state.complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\tformattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber +\r\n\t\t\t\t' ' +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t}\r\n\t}\r\n\tif (isValidFormattedNationalNumber(formattedNationalNumber, state)) {\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n}\r\n\r\n// Check that the formatted phone number contains exactly\r\n// the same digits that have been input by the user.\r\n// For example, when \"0111523456789\" is input for `AR` country,\r\n// the extracted `this.nationalSignificantNumber` is \"91123456789\",\r\n// which means that the national part of `this.digits` isn't simply equal to\r\n// `this.nationalPrefix` + `this.nationalSignificantNumber`.\r\n//\r\n// Also, a `format` can add extra digits to the `this.nationalSignificantNumber`\r\n// being formatted via `metadata[country].national_prefix_transform_rule`.\r\n// For example, for `VI` country, it prepends `340` to the national number,\r\n// and if this check hasn't been implemented, then there would be a bug\r\n// when `340` \"area coude\" is \"duplicated\" during input for `VI` country:\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/318\r\n//\r\n// So, all these \"gotchas\" are filtered out.\r\n//\r\n// In the original Google's code, the comments say:\r\n// \"Check that we didn't remove nor add any extra digits when we matched\r\n// this formatting pattern. This usually happens after we entered the last\r\n// digit during AYTF. Eg: In case of MX, we swallow mobile token (1) when\r\n// formatted but AYTF should retain all the number entered and not change\r\n// in order to match a format (of same leading digits and length) display\r\n// in that way.\"\r\n// \"If it's the same (i.e entered number and format is same), then it's\r\n// safe to return this in formatted number as nothing is lost / added.\"\r\n// Otherwise, don't use this format.\r\n// https://github.com/google/libphonenumber/commit/3e7c1f04f5e7200f87fb131e6f85c6e99d60f510#diff-9149457fa9f5d608a11bb975c6ef4bc5\r\n// https://github.com/google/libphonenumber/commit/3ac88c7106e7dcb553bcc794b15f19185928a1c6#diff-2dcb77e833422ee304da348b905cde0b\r\n//\r\nfunction isValidFormattedNationalNumber(formattedNationalNumber, state) {\r\n\treturn parseDigits(formattedNationalNumber) === state.getNationalDigits()\r\n}", "export default class PatternMatcher {\r\n\tconstructor(pattern) {\r\n\t\tthis.matchTree = new PatternParser().parse(pattern)\r\n\t\t// console.log(JSON.stringify(this.matchTree, null, 2))\r\n\t}\r\n\r\n\tmatch(string, { allowOverflow } = {}) {\r\n\t\tif (!string) {\r\n\t\t\tthrow new Error('String is required')\r\n\t\t}\r\n\t\tconst result = match(string.split(''), this.matchTree, true)\r\n\t\tif (result && result.match) {\r\n\t\t\tdelete result.matchedChars\r\n\t\t}\r\n\t\tif (result && result.overflow) {\r\n\t\t\tif (!allowOverflow) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nfunction match(characters, tree, last) {\r\n\tif (typeof tree === 'string') {\r\n\t\tif (last) {\r\n\t\t\tif (characters.length > tree.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\toverflow: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst characterString = characters.join('')\r\n\t\tif (tree.indexOf(characterString) === 0) {\r\n\t\t\tif (characters.length === tree.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmatch: true,\r\n\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tpartialMatch: true,\r\n\t\t\t\t// matchedChars: characters\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (characterString.indexOf(tree) === 0) {\r\n\t\t\treturn {\r\n\t\t\t\tmatch: true,\r\n\t\t\t\tmatchedChars: characters.slice(0, tree.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tif (Array.isArray(tree)) {\r\n\t\tlet restCharacters = characters.slice()\r\n\t\tlet i = 0\r\n\t\twhile (i < tree.length) {\r\n\t\t\tconst subtree = tree[i]\r\n\t\t\tconst result = match(restCharacters, subtree, last && (i === tree.length - 1))\r\n\t\t\tif (!result || result.overflow) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\tif (result.match) {\r\n\t\t\t\t// Continue with the next subtree with the rest of the characters.\r\n\t\t\t\trestCharacters = restCharacters.slice(result.matchedChars.length)\r\n\t\t\t\tif (restCharacters.length === 0) {\r\n\t\t\t\t\tif (i === tree.length - 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result.partialMatch) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`Unsupported match result:\\n${JSON.stringify(result, null, 2)}`)\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\tif (last) {\r\n\t\t\treturn {\r\n\t\t\t\toverflow: true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmatch: true,\r\n\t\t\tmatchedChars: characters.slice(0, characters.length - restCharacters.length)\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (tree.op) {\r\n\t\tcase '|':\r\n\t\t\tlet partialMatch\r\n\t\t\tfor (const branch of tree.args) {\r\n\t\t\t\tconst result = match(characters, branch, last)\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tif (result.overflow) {\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t} else if (result.match) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: result.matchedChars\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (result.partialMatch) {\r\n\t\t\t\t\t\tpartialMatch = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (partialMatch) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t// matchedChars: ...\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Not even a partial match.\r\n\t\t\treturn\r\n\r\n\t\tcase '[]':\r\n\t\t\tfor (const char of tree.args) {\r\n\t\t\t\tif (characters[0] === char) {\r\n\t\t\t\t\tif (characters.length === 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (last) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toverflow: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\tmatchedChars: [char]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// No character matches.\r\n\t\t\treturn\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unsupported instruction tree: ${tree}`)\r\n\t}\r\n}\r\n\r\nconst OPERATOR = new RegExp(\r\n\t// any of:\r\n\t'(' +\r\n\t\t// or operator\r\n\t\t'\\\\|' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group start\r\n\t\t'\\\\(\\\\?\\\\:' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group end\r\n\t\t'\\\\)' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set start\r\n\t\t'\\\\[' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set end\r\n\t\t'\\\\]' +\r\n\t')'\r\n)\r\n\r\nclass PatternParser {\r\n\tparse(pattern) {\r\n\t\tthis.context = [{\r\n\t\t\tor: true,\r\n\t\t\tinstructions: []\r\n\t\t}]\r\n\r\n\t\tthis.parsePattern(pattern)\r\n\r\n\t\tif (this.context.length !== 1) {\r\n\t\t\tthrow new Error('Non-finalized contexts left when pattern parse ended')\r\n\t\t}\r\n\r\n\t\tconst { branches, instructions } = this.context[0]\r\n\r\n\t\tif (branches) {\r\n\t\t\treturn [{\r\n\t\t\t\top: '|',\r\n\t\t\t\targs: branches.concat([instructions])\r\n\t\t\t}]\r\n\t\t}\r\n\r\n\t\tif (instructions.length === 0) {\r\n\t\t\tthrow new Error('Pattern is required')\r\n\t\t}\r\n\r\n\t\treturn instructions\r\n\t}\r\n\r\n\tstartContext(context) {\r\n\t\tthis.context.push(context)\r\n\t}\r\n\r\n\tendContext() {\r\n\t\tthis.context.pop()\r\n\t}\r\n\r\n\tgetContext() {\r\n\t\treturn this.context[this.context.length - 1]\r\n\t}\r\n\r\n\tparsePattern(pattern) {\r\n\t\tif (!pattern) {\r\n\t\t\tthrow new Error('Empty pattern passed')\r\n\t\t}\r\n\r\n\t\tconst match = pattern.match(OPERATOR)\r\n\t\tif (!match) {\r\n\t\t\tthis.getContext().instructions = this.getContext().instructions.concat(\r\n\t\t\t\tpattern.split('')\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst operator = match[1]\r\n\t\tconst before = pattern.slice(0, match.index)\r\n\t\tconst rightPart = pattern.slice(match.index + operator.length)\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '(?:':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\tor: true,\r\n\t\t\t\t\tinstructions: [],\r\n\t\t\t\t\tbranches: []\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ')':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\")\" operator must be preceded by \"(?:\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.getContext().instructions.length === 0) {\r\n\t\t\t\t\tthrow new Error('No instructions found after \"|\" operator in an \"or\" group')\r\n\t\t\t\t}\r\n\t\t\t\tconst { branches } = this.getContext()\r\n\t\t\t\tbranches.push(\r\n\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t)\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '|',\r\n\t\t\t\t\targs: branches\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '|':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\"|\" operator can only be used inside \"or\" groups')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\t// The top-level is an implicit \"or\" group, if required.\r\n\t\t\t\tif (!this.getContext().branches) {\r\n\t\t\t\t\tif (this.context.length === 1) {\r\n\t\t\t\t\t\tthis.getContext().branches = []\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('\"branches\" not found in an \"or\" group context')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.getContext().branches.push(\r\n\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t)\r\n\t\t\t\tthis.getContext().instructions = []\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '[':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\toneOfSet: true\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ']':\r\n\t\t\t\tif (!this.getContext().oneOfSet) {\r\n\t\t\t\t\tthrow new Error('\"]\" operator must be preceded by \"[\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '[]',\r\n\t\t\t\t\targs: parseOneOfSet(before)\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown operator: ${operator}`)\r\n\t\t}\r\n\r\n\t\tif (rightPart) {\r\n\t\t\tthis.parsePattern(rightPart)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parseOneOfSet(pattern) {\r\n\tconst values = []\r\n\tlet i = 0\r\n\twhile (i < pattern.length) {\r\n\t\tif (pattern[i] === '-') {\r\n\t\t\tif (i === 0 || i === pattern.length - 1) {\r\n\t\t\t\tthrow new Error(`Couldn't parse a one-of set pattern: ${pattern}`)\r\n\t\t\t}\r\n\t\t\tconst prevValue = pattern[i - 1].charCodeAt(0) + 1\r\n\t\t\tconst nextValue = pattern[i + 1].charCodeAt(0) - 1\r\n\t\t\tlet value = prevValue\r\n\t\t\twhile (value <= nextValue) {\r\n\t\t\t\tvalues.push(String.fromCharCode(value))\r\n\t\t\t\tvalue++\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalues.push(pattern[i])\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn values\r\n}", "import {\r\n\tDIGIT_PLACEHOLDER,\r\n\tcountOccurences,\r\n\trepeat,\r\n\tcutAndStripNonPairedParens,\r\n\tcloseNonPairedParens,\r\n\tstripNonPairedParens,\r\n\tpopulateTemplateWithDigits\r\n} from './AsYouTypeFormatter.util'\r\n\r\nimport formatCompleteNumber, {\r\n\tcanFormatCompleteNumber\r\n} from './AsYouTypeFormatter.complete'\r\n\r\nimport PatternMatcher from './AsYouTypeFormatter.PatternMatcher'\r\n\r\nimport parseDigits from './helpers/parseDigits'\r\nexport { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.util'\r\nimport { FIRST_GROUP_PATTERN } from './helpers/formatNationalNumberUsingFormat'\r\nimport { VALID_PUNCTUATION } from './constants'\r\nimport applyInternationalSeparatorStyle from './helpers/applyInternationalSeparatorStyle'\r\n\r\n// Used in phone number format template creation.\r\n// Could be any digit, I guess.\r\nconst DUMMY_DIGIT = '9'\r\n// I don't know why is it exactly `15`\r\nconst LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15\r\n// Create a phone number consisting only of the digit 9 that matches the\r\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\r\nconst LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH)\r\n\r\n// A set of characters that, if found in a national prefix formatting rules, are an indicator to\r\n// us that we should separate the national prefix from the number when formatting.\r\nconst NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/\r\n\r\n// Deprecated: Google has removed some formatting pattern related code from their repo.\r\n// https://github.com/googlei18n/libphonenumber/commit/a395b4fef3caf57c4bc5f082e1152a4d2bd0ba4c\r\n// \"We no longer have numbers in formatting matching patterns, only \\d.\"\r\n// Because this library supports generating custom metadata\r\n// some users may still be using old metadata so the relevant\r\n// code seems to stay until some next major version update.\r\nconst SUPPORT_LEGACY_FORMATTING_PATTERNS = true\r\n\r\n// A pattern that is used to match character classes in regular expressions.\r\n// An example of a character class is \"[1-4]\".\r\nconst CREATE_CHARACTER_CLASS_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\[([^\\[\\]])*\\]/g)\r\n\r\n// Any digit in a regular expression that actually denotes a digit. For\r\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\r\n// (8 and 0) are standalone digits, but the rest are not.\r\n// Two look-aheads are needed because the number following \\\\d could be a\r\n// two-digit number, since the phone number can be as long as 15 digits.\r\nconst CREATE_STANDALONE_DIGIT_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\d(?=[^,}][^,}])/g)\r\n\r\n// A regular expression that is used to determine if a `format` is\r\n// suitable to be used in the \"as you type formatter\".\r\n// A `format` is suitable when the resulting formatted number has\r\n// the same digits as the user has entered.\r\n//\r\n// In the simplest case, that would mean that the format\r\n// doesn't add any additional digits when formatting a number.\r\n// Google says that it also shouldn't add \"star\" (`*`) characters,\r\n// like it does in some Israeli formats.\r\n// Such basic format would only contain \"valid punctuation\"\r\n// and \"captured group\" identifiers ($1, $2, etc).\r\n//\r\n// An example of a format that adds additional digits:\r\n//\r\n// Country: `AR` (Argentina).\r\n// Format:\r\n// {\r\n//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n//    \"leading_digits_patterns\": [\"91\"],\r\n//    \"national_prefix_formatting_rule\": \"0$1\",\r\n//    \"format\": \"$2 15-$3-$4\",\r\n//    \"international_format\": \"$1 $2 $3-$4\"\r\n// }\r\n//\r\n// In the format above, the `format` adds `15` to the digits when formatting a number.\r\n// A sidenote: this format actually is suitable because `national_prefix_for_parsing`\r\n// has previously removed `15` from a national number, so re-adding `15` in `format`\r\n// doesn't actually result in any extra digits added to user's input.\r\n// But verifying that would be a complex procedure, so the code chooses a simpler path:\r\n// it simply filters out all `format`s that contain anything but \"captured group\" ids.\r\n//\r\n// This regular expression is called `ELIGIBLE_FORMAT_PATTERN` in Google's\r\n// `libphonenumber` code.\r\n//\r\nconst NON_ALTERING_FORMAT_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t'(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' +\r\n\t'$'\r\n)\r\n\r\n// This is the minimum length of the leading digits of a phone number\r\n// to guarantee the first \"leading digits pattern\" for a phone number format\r\n// to be preemptive.\r\nconst MIN_LEADING_DIGITS_LENGTH = 3\r\n\r\nexport default class AsYouTypeFormatter {\r\n\tconstructor({\r\n\t\tstate,\r\n\t\tmetadata\r\n\t}) {\r\n\t\tthis.metadata = metadata\r\n\t\tthis.resetFormat()\r\n\t}\r\n\r\n\tresetFormat() {\r\n\t\tthis.chosenFormat = undefined\r\n\t\tthis.template = undefined\r\n\t\tthis.nationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t}\r\n\r\n\treset(numberingPlan, state) {\r\n\t\tthis.resetFormat()\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.isNANP = numberingPlan.callingCode() === '1'\r\n\t\t\tthis.matchingFormats = numberingPlan.formats()\r\n\t\t\tif (state.nationalSignificantNumber) {\r\n\t\t\t\tthis.narrowDownMatchingFormats(state)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.isNANP = undefined\r\n\t\t\tthis.matchingFormats = []\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats an updated phone number.\r\n\t * @param  {string} nextDigits \u2014 Additional phone number digits.\r\n\t * @param  {object} state \u2014\u00A0`AsYouType` state.\r\n\t * @return {[string]} Returns undefined if the updated phone number can't be formatted using any of the available formats.\r\n\t */\r\n\tformat(nextDigits, state) {\r\n\t\t// See if the phone number digits can be formatted as a complete phone number.\r\n\t\t// If not, use the results from `formatNationalNumberWithNextDigits()`,\r\n\t\t// which formats based on the chosen formatting pattern.\r\n\t\t//\r\n\t\t// Attempting to format complete phone number first is how it's done\r\n\t\t// in Google's `libphonenumber`, so this library just follows it.\r\n\t\t// Google's `libphonenumber` code doesn't explain in detail why does it\r\n\t\t// attempt to format digits as a complete phone number\r\n\t\t// instead of just going with a previoulsy (or newly) chosen `format`:\r\n\t\t//\r\n\t\t// \"Checks to see if there is an exact pattern match for these digits.\r\n\t\t//  If so, we should use this instead of any other formatting template\r\n\t\t//  whose leadingDigitsPattern also matches the input.\"\r\n\t\t//\r\n\t\tif (canFormatCompleteNumber(state.nationalSignificantNumber, this.metadata)) {\r\n\t\t\tfor (const format of this.matchingFormats) {\r\n\t\t\t\tconst formattedCompleteNumber = formatCompleteNumber(\r\n\t\t\t\t\tstate,\r\n\t\t\t\t\tformat,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmetadata: this.metadata,\r\n\t\t\t\t\t\tshouldTryNationalPrefixFormattingRule: format => this.shouldTryNationalPrefixFormattingRule(format, {\r\n\t\t\t\t\t\t\tinternational: state.international,\r\n\t\t\t\t\t\t\tnationalPrefix: state.nationalPrefix\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tgetSeparatorAfterNationalPrefix: this.getSeparatorAfterNationalPrefix\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tif (formattedCompleteNumber) {\r\n\t\t\t\t\tthis.resetFormat()\r\n\t\t\t\t\tthis.chosenFormat = format\r\n\t\t\t\t\tthis.setNationalNumberTemplate(formattedCompleteNumber.replace(/\\d/g, DIGIT_PLACEHOLDER), state)\r\n\t\t\t\t\tthis.populatedNationalNumberTemplate = formattedCompleteNumber\r\n\t\t\t\t\t// With a new formatting template, the matched position\r\n\t\t\t\t\t// using the old template needs to be reset.\r\n\t\t\t\t\tthis.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(DIGIT_PLACEHOLDER)\r\n\t\t\t\t\treturn formattedCompleteNumber\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Format the digits as a partial (incomplete) phone number\r\n\t\t// using the previously chosen formatting pattern (or a newly chosen one).\r\n\t\treturn this.formatNationalNumberWithNextDigits(nextDigits, state)\r\n\t}\r\n\r\n\t// Formats the next phone number digits.\r\n\tformatNationalNumberWithNextDigits(nextDigits, state) {\r\n\t\tconst previouslyChosenFormat = this.chosenFormat\r\n\t\t// Choose a format from the list of matching ones.\r\n\t\tconst newlyChosenFormat = this.chooseFormat(state)\r\n\t\tif (newlyChosenFormat) {\r\n\t\t\tif (newlyChosenFormat === previouslyChosenFormat) {\r\n\t\t\t\t// If it can format the next (current) digits\r\n\t\t\t\t// using the previously chosen phone number format\r\n\t\t\t\t// then return the updated formatted number.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(nextDigits)\r\n\t\t\t} else {\r\n\t\t\t\t// If a more appropriate phone number format\r\n\t\t\t\t// has been chosen for these \"leading digits\",\r\n\t\t\t\t// then re-format the national phone number part\r\n\t\t\t\t// using the newly selected format.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(state.getNationalDigits())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tnarrowDownMatchingFormats({\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalPrefix,\r\n\t\tinternational\r\n\t}) {\r\n\t\tconst leadingDigits = nationalSignificantNumber\r\n\r\n\t\t// \"leading digits\" pattern list starts with a\r\n\t\t// \"leading digits\" pattern fitting a maximum of 3 leading digits.\r\n\t\t// So, after a user inputs 3 digits of a national (significant) phone number\r\n\t\t// this national (significant) number can already be formatted.\r\n\t\t// The next \"leading digits\" pattern is for 4 leading digits max,\r\n\t\t// and the \"leading digits\" pattern after it is for 5 leading digits max, etc.\r\n\r\n\t\t// This implementation is different from Google's\r\n\t\t// in that it searches for a fitting format\r\n\t\t// even if the user has entered less than\r\n\t\t// `MIN_LEADING_DIGITS_LENGTH` digits of a national number.\r\n\t\t// Because some leading digit patterns already match for a single first digit.\r\n\t\tlet leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH\r\n\t\tif (leadingDigitsPatternIndex < 0) {\r\n\t\t\tleadingDigitsPatternIndex = 0\r\n\t\t}\r\n\r\n\t\tthis.matchingFormats = this.matchingFormats.filter(\r\n\t\t\tformat => this.formatSuits(format, international, nationalPrefix)\r\n\t\t\t\t&& this.formatMatches(format, leadingDigits, leadingDigitsPatternIndex)\r\n\t\t)\r\n\r\n\t\t// If there was a phone number format chosen\r\n\t\t// and it no longer holds given the new leading digits then reset it.\r\n\t\t// The test for this `if` condition is marked as:\r\n\t\t// \"Reset a chosen format when it no longer holds given the new leading digits\".\r\n\t\t// To construct a valid test case for this one can find a country\r\n\t\t// in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\r\n\t\t// and yielding another format for 4 `<leadingDigits>` (Australia in this case).\r\n\t\tif (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) {\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t}\r\n\r\n\tformatSuits(format, international, nationalPrefix) {\r\n\t\t// When a prefix before a national (significant) number is\r\n\t\t// simply a national prefix, then it's parsed as `this.nationalPrefix`.\r\n\t\t// In more complex cases, a prefix before national (significant) number\r\n\t\t// could include a national prefix as well as some \"capturing groups\",\r\n\t\t// and in that case there's no info whether a national prefix has been parsed.\r\n\t\t// If national prefix is not used when formatting a phone number\r\n\t\t// using this format, but a national prefix has been entered by the user,\r\n\t\t// and was extracted, then discard such phone number format.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L175-L184\r\n\t\tif (nationalPrefix &&\r\n\t\t\t!format.usesNationalPrefix() &&\r\n\t\t\t// !format.domesticCarrierCodeFormattingRule() &&\r\n\t\t\t!format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// If national prefix is mandatory for this phone number format\r\n\t\t// and there're no guarantees that a national prefix is present in user input\r\n\t\t// then discard this phone number format as not suitable.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L185-L193\r\n\t\tif (!international &&\r\n\t\t\t!nationalPrefix &&\r\n\t\t\tformat.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tformatMatches(format, leadingDigits, leadingDigitsPatternIndex) {\r\n\t\tconst leadingDigitsPatternsCount = format.leadingDigitsPatterns().length\r\n\r\n\t\t// If this format is not restricted to a certain\r\n\t\t// leading digits pattern then it fits.\r\n\t\tif (leadingDigitsPatternsCount === 0) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\t// Start narrowing down the list of possible formats based on the leading digits.\r\n\t\t// (only previously matched formats take part in the narrowing down process)\r\n\r\n\t\t// `leading_digits_patterns` start with 3 digits min\r\n\t\t// and then go up from there one digit at a time.\r\n\t\tleadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1)\r\n\t\tconst leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex]\r\n\r\n\t\t// Google imposes a requirement on the leading digits\r\n\t\t// to be minimum 3 digits long in order to be eligible\r\n\t\t// for checking those with a leading digits pattern.\r\n\t\t//\r\n\t\t// Since `leading_digits_patterns` start with 3 digits min,\r\n\t\t// Google's original `libphonenumber` library only starts\r\n\t\t// excluding any non-matching formats only when the\r\n\t\t// national number entered so far is at least 3 digits long,\r\n\t\t// otherwise format matching would give false negatives.\r\n\t\t//\r\n\t\t// For example, when the digits entered so far are `2`\r\n\t\t// and the leading digits pattern is `21` \u2013\r\n\t\t// it's quite obvious in this case that the format could be the one\r\n\t\t// but due to the absence of further digits it would give false negative.\r\n\t\t//\r\n\t\t// Also, `leading_digits_patterns` doesn't always correspond to a single\r\n\t\t// digits count. For example, `60|8` pattern would already match `8`\r\n\t\t// but the `60` part would require having at least two leading digits,\r\n\t\t// so the whole pattern would require inputting two digits first in order to\r\n\t\t// decide on whether it matches the input, even when the input is \"80\".\r\n\t\t//\r\n\t\t// This library \u2014 `libphonenumber-js` \u2014 allows filtering by `leading_digits_patterns`\r\n\t\t// even when there's only 1 or 2 digits of the national (significant) number.\r\n\t\t// To do that, it uses a non-strict pattern matcher written specifically for that.\r\n\t\t//\r\n\t\tif (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) {\r\n\t\t\t// Before leading digits < 3 matching was implemented:\r\n\t\t\t// return true\r\n\t\t\t//\r\n\t\t\t// After leading digits < 3 matching was implemented:\r\n\t\t\ttry {\r\n\t\t\t\treturn new PatternMatcher(leadingDigitsPattern).match(leadingDigits, { allowOverflow: true }) !== undefined\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// There's a slight possibility that there could be some undiscovered bug\r\n\t\t\t\t// in the pattern matcher code. Since the \"leading digits < 3 matching\"\r\n\t\t\t\t// feature is not \"essential\" for operation, it can fall back to the old way\r\n\t\t\t\t// in case of any issues rather than halting the application's execution.\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If at least `MIN_LEADING_DIGITS_LENGTH` digits of a national number are\r\n\t\t// available then use the usual regular expression matching.\r\n\t\t//\r\n\t\t// The whole pattern is wrapped in round brackets (`()`) because\r\n\t\t// the pattern can use \"or\" operator (`|`) at the top level of the pattern.\r\n\t\t//\r\n\t\treturn new RegExp(`^(${leadingDigitsPattern})`).test(leadingDigits)\r\n\t}\r\n\r\n\tgetFormatFormat(format, international) {\r\n\t\treturn international ? format.internationalFormat() : format.format()\r\n\t}\r\n\r\n\tchooseFormat(state) {\r\n\t\t// When there are multiple available formats, the formatter uses the first\r\n\t\t// format where a formatting template could be created.\r\n\t\tfor (const format of this.matchingFormats.slice()) {\r\n\t\t\t// If this format is currently being used\r\n\t\t\t// and is still suitable, then stick to it.\r\n\t\t\tif (this.chosenFormat === format) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t// Sometimes, a formatting rule inserts additional digits in a phone number,\r\n\t\t\t// and \"as you type\" formatter can't do that: it should only use the digits\r\n\t\t\t// that the user has input.\r\n\t\t\t//\r\n\t\t\t// For example, in Argentina, there's a format for mobile phone numbers:\r\n\t\t\t//\r\n\t\t\t// {\r\n\t\t\t//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n\t\t\t//    \"leading_digits_patterns\": [\"91\"],\r\n\t\t\t//    \"national_prefix_formatting_rule\": \"0$1\",\r\n\t\t\t//    \"format\": \"$2 15-$3-$4\",\r\n\t\t\t//    \"international_format\": \"$1 $2 $3-$4\"\r\n\t\t\t// }\r\n\t\t\t//\r\n\t\t\t// In that format, `international_format` is used instead of `format`\r\n\t\t\t// because `format` inserts `15` in the formatted number,\r\n\t\t\t// and `AsYouType` formatter should only use the digits\r\n\t\t\t// the user has actually input, without adding any extra digits.\r\n\t\t\t// In this case, it wouldn't make a difference, because the `15`\r\n\t\t\t// is first stripped when applying `national_prefix_for_parsing`\r\n\t\t\t// and then re-added when using `format`, so in reality it doesn't\r\n\t\t\t// add any new digits to the number, but to detect that, the code\r\n\t\t\t// would have to be more complex: it would have to try formatting\r\n\t\t\t// the digits using the format and then see if any digits have\r\n\t\t\t// actually been added or removed, and then, every time a new digit\r\n\t\t\t// is input, it should re-check whether the chosen format doesn't\r\n\t\t\t// alter the digits.\r\n\t\t\t//\r\n\t\t\t// Google's code doesn't go that far, and so does this library:\r\n\t\t\t// it simply requires that a `format` doesn't add any additonal\r\n\t\t\t// digits to user's input.\r\n\t\t\t//\r\n\t\t\t// Also, people in general should move from inputting phone numbers\r\n\t\t\t// in national format (possibly with national prefixes)\r\n\t\t\t// and use international phone number format instead:\r\n\t\t\t// it's a logical thing in the modern age of mobile phones,\r\n\t\t\t// globalization and the internet.\r\n\t\t\t//\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (!NON_ALTERING_FORMAT_REG_EXP.test(this.getFormatFormat(format, state.international))) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (!this.createTemplateForFormat(format, state)) {\r\n\t\t\t\t// Remove the format if it can't generate a template.\r\n\t\t\t\tthis.matchingFormats = this.matchingFormats.filter(_ => _ !== format)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.chosenFormat = format\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif (!this.chosenFormat) {\r\n\t\t\t// No format matches the national (significant) phone number.\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t\treturn this.chosenFormat\r\n\t}\r\n\r\n\tcreateTemplateForFormat(format, state) {\r\n\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\r\n\t\t// (20|3)\\d{4}. In those cases we quickly return.\r\n\t\t// (Though there's no such format in current metadata)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS && format.pattern().indexOf('|') >= 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Get formatting template for this phone number format\r\n\t\tconst template = this.getTemplateForFormat(format, state)\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (template) {\r\n\t\t\tthis.setNationalNumberTemplate(template, state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tgetSeparatorAfterNationalPrefix = (format) => {\r\n\t\t// `US` metadata doesn't have a `national_prefix_formatting_rule`,\r\n\t\t// so the `if` condition below doesn't apply to `US`,\r\n\t\t// but in reality there shoudl be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\t// So `US` national prefix separator is a \"special\" \"hardcoded\" case.\r\n\t\tif (this.isNANP) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// If a `format` has a `national_prefix_formatting_rule`\r\n\t\t// and that rule has a separator after a national prefix,\r\n\t\t// then it means that there should be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\tif (format &&\r\n\t\t\tformat.nationalPrefixFormattingRule() &&\r\n\t\t\tNATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// At this point, there seems to be no clear evidence that\r\n\t\t// there should be a separator between a national prefix\r\n\t\t// and a national (significant) number. So don't insert one.\r\n\t\treturn ''\r\n\t}\r\n\r\n\tgetInternationalPrefixBeforeCountryCallingCode({ IDDPrefix, missingPlus }, options) {\r\n\t\tif (IDDPrefix) {\r\n\t\t\treturn options && options.spacing === false ? IDDPrefix : IDDPrefix + ' '\r\n\t\t}\r\n\t\tif (missingPlus) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\r\n\tgetTemplate(state) {\r\n\t\tif (!this.template) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// `this.template` holds the template for a \"complete\" phone number.\r\n\t\t// The currently entered phone number is most likely not \"complete\",\r\n\t\t// so trim all non-populated digits.\r\n\t\tlet index = -1\r\n\t\tlet i = 0\r\n\t\tconst internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, { spacing: false }) : ''\r\n\t\twhile (i < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {\r\n\t\t\tindex = this.template.indexOf(DIGIT_PLACEHOLDER, index + 1)\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn cutAndStripNonPairedParens(this.template, index + 1)\r\n\t}\r\n\r\n\tsetNationalNumberTemplate(template, state) {\r\n\t\tthis.nationalNumberTemplate = template\r\n\t\tthis.populatedNationalNumberTemplate = template\r\n\t\t// With a new formatting template, the matched position\r\n\t\t// using the old template needs to be reset.\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t\t// For convenience, the public `.template` property\r\n\t\t// contains the whole international number\r\n\t\t// if the phone number being input is international:\r\n\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\r\n\t\t// a spacebar and then the template for the formatted national number.\r\n\t\tif (state.international) {\r\n\t\t\tthis.template =\r\n\t\t\t\tthis.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER) +\r\n\t\t\t\trepeat(DIGIT_PLACEHOLDER, state.callingCode.length) +\r\n\t\t\t\t' ' +\r\n\t\t\t\ttemplate\r\n\t\t} else {\r\n\t\t\tthis.template = template\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates formatting template for a national phone number,\r\n\t * optionally containing a national prefix, for a format.\r\n\t * @param  {Format} format\r\n\t * @param  {string} nationalPrefix\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplateForFormat(format, {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t}) {\r\n\t\tlet pattern = format.pattern()\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS) {\r\n\t\t\tpattern = pattern\r\n\t\t\t\t// Replace anything in the form of [..] with \\d\r\n\t\t\t\t.replace(CREATE_CHARACTER_CLASS_PATTERN(), '\\\\d')\r\n\t\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\r\n\t\t\t\t.replace(CREATE_STANDALONE_DIGIT_PATTERN(), '\\\\d')\r\n\t\t}\r\n\r\n\t\t// Generate a dummy national number (consisting of `9`s)\r\n\t\t// that fits this format's `pattern`.\r\n\t\t//\r\n\t\t// This match will always succeed,\r\n\t\t// because the \"longest dummy phone number\"\r\n\t\t// has enough length to accomodate any possible\r\n\t\t// national phone number format pattern.\r\n\t\t//\r\n\t\tlet digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0]\r\n\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (nationalSignificantNumber.length > digits.length) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Get a formatting template which can be used to efficiently format\r\n\t\t// a partial number where digits are added one by one.\r\n\r\n\t\t// Below `strictPattern` is used for the\r\n\t\t// regular expression (with `^` and `$`).\r\n\t\t// This wasn't originally in Google's `libphonenumber`\r\n\t\t// and I guess they don't really need it\r\n\t\t// because they're not using \"templates\" to format phone numbers\r\n\t\t// but I added `strictPattern` after encountering\r\n\t\t// South Korean phone number formatting bug.\r\n\t\t//\r\n\t\t// Non-strict regular expression bug demonstration:\r\n\t\t//\r\n\t\t// this.nationalSignificantNumber : `111111111` (9 digits)\r\n\t\t//\r\n\t\t// pattern : (\\d{2})(\\d{3,4})(\\d{4})\r\n\t\t// format : `$1 $2 $3`\r\n\t\t// digits : `9999999999` (10 digits)\r\n\t\t//\r\n\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\r\n\t\t//\r\n\t\t// template : xx xxxx xxxx\r\n\t\t//\r\n\t\t// But the correct template in this case is `xx xxx xxxx`.\r\n\t\t// The template was generated incorrectly because of the\r\n\t\t// `{3,4}` variability in the `pattern`.\r\n\t\t//\r\n\t\t// The fix is, if `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then `this.nationalSignificantNumber`\r\n\t\t// is used instead of `digits`.\r\n\r\n\t\tconst strictPattern = new RegExp('^' + pattern + '$')\r\n\t\tconst nationalNumberDummyDigits = nationalSignificantNumber.replace(/\\d/g, DUMMY_DIGIT)\r\n\r\n\t\t// If `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then use it\r\n\t\t// instead of `digits`.\r\n\t\tif (strictPattern.test(nationalNumberDummyDigits)) {\r\n\t\t\tdigits = nationalNumberDummyDigits\r\n\t\t}\r\n\r\n\t\tlet numberFormat = this.getFormatFormat(format, international)\r\n\t\tlet nationalPrefixIncludedInTemplate\r\n\r\n\t\t// If a user did input a national prefix (and that's guaranteed),\r\n\t\t// and if a `format` does have a national prefix formatting rule,\r\n\t\t// then see if that national prefix formatting rule\r\n\t\t// prepends exactly the same national prefix the user has input.\r\n\t\t// If that's the case, then use the `format` with the national prefix formatting rule.\r\n\t\t// Otherwise, use  the `format` without the national prefix formatting rule,\r\n\t\t// and prepend a national prefix manually to it.\r\n\t\tif (this.shouldTryNationalPrefixFormattingRule(format, { international, nationalPrefix })) {\r\n\t\t\tconst numberFormatWithNationalPrefix = numberFormat.replace(\r\n\t\t\t\tFIRST_GROUP_PATTERN,\r\n\t\t\t\tformat.nationalPrefixFormattingRule()\r\n\t\t\t)\r\n\t\t\t// If `national_prefix_formatting_rule` of a `format` simply prepends\r\n\t\t\t// national prefix at the start of a national (significant) number,\r\n\t\t\t// then such formatting can be used with `AsYouType` formatter.\r\n\t\t\t// There seems to be no `else` case: everywhere in metadata,\r\n\t\t\t// national prefix formatting rule is national prefix + $1,\r\n\t\t\t// or `($1)`, in which case such format isn't even considered\r\n\t\t\t// when the user has input a national prefix.\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (parseDigits(format.nationalPrefixFormattingRule()) === (nationalPrefix || '') + parseDigits('$1')) {\r\n\t\t\t\tnumberFormat = numberFormatWithNationalPrefix\r\n\t\t\t\tnationalPrefixIncludedInTemplate = true\r\n\t\t\t\t// Replace all digits of the national prefix in the formatting template\r\n\t\t\t\t// with `DIGIT_PLACEHOLDER`s.\r\n\t\t\t\tif (nationalPrefix) {\r\n\t\t\t\t\tlet i = nationalPrefix.length\r\n\t\t\t\t\twhile (i > 0) {\r\n\t\t\t\t\t\tnumberFormat = numberFormat.replace(/\\d/, DIGIT_PLACEHOLDER)\r\n\t\t\t\t\t\ti--\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate formatting template for this phone number format.\r\n\t\tlet template = digits\r\n\t\t\t// Format the dummy phone number according to the format.\r\n\t\t\t.replace(new RegExp(pattern), numberFormat)\r\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER.\r\n\t\t\t.replace(new RegExp(DUMMY_DIGIT, 'g'), DIGIT_PLACEHOLDER)\r\n\r\n\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t// as just a basic national prefix, then just prepend such prefix\r\n\t\t// before the national (significant) number, optionally spacing\r\n\t\t// the two with a whitespace.\r\n\t\tif (!nationalPrefixIncludedInTemplate) {\r\n\t\t\tif (complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\t\t// Prepend the prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) +\r\n\t\t\t\t\t' ' +\r\n\t\t\t\t\ttemplate\r\n\t\t\t} else if (nationalPrefix) {\r\n\t\t\t\t// Prepend national prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, nationalPrefix.length) +\r\n\t\t\t\t\tthis.getSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\t\ttemplate\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (international) {\r\n\t\t\ttemplate = applyInternationalSeparatorStyle(template)\r\n\t\t}\r\n\r\n\t\treturn template\r\n\t}\r\n\r\n\tformatNextNationalNumberDigits(digits) {\r\n\t\tconst result = populateTemplateWithDigits(\r\n\t\t\tthis.populatedNationalNumberTemplate,\r\n\t\t\tthis.populatedNationalNumberTemplatePosition,\r\n\t\t\tdigits\r\n\t\t)\r\n\r\n\t\tif (!result) {\r\n\t\t\t// Reset the format.\r\n\t\t\tthis.resetFormat()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.populatedNationalNumberTemplate = result[0]\r\n\t\tthis.populatedNationalNumberTemplatePosition = result[1]\r\n\r\n\t\t// Return the formatted phone number so far.\r\n\t\treturn cutAndStripNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\r\n\t\t// The old way which was good for `input-format` but is not so good\r\n\t\t// for `react-phone-number-input`'s default input (`InputBasic`).\r\n\t\t// return closeNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\t\t// \t.replace(new RegExp(DIGIT_PLACEHOLDER, 'g'), ' ')\r\n\t}\r\n\r\n\tshouldTryNationalPrefixFormattingRule = (format, { international, nationalPrefix }) => {\r\n\t\tif (format.nationalPrefixFormattingRule()) {\r\n\t\t\t// In some countries, `national_prefix_formatting_rule` is `($1)`,\r\n\t\t\t// so it applies even if the user hasn't input a national prefix.\r\n\t\t\t// `format.usesNationalPrefix()` detects such cases.\r\n\t\t\tconst usesNationalPrefix = format.usesNationalPrefix()\r\n\t\t\tif ((usesNationalPrefix && nationalPrefix) ||\r\n\t\t\t\t(!usesNationalPrefix && !international)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "import extractCountryCallingCode from './helpers/extractCountryCallingCode'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign'\r\nimport extractNationalNumberFromPossiblyIncompleteNumber from './helpers/extractNationalNumberFromPossiblyIncompleteNumber'\r\nimport stripIddPrefix from './helpers/stripIddPrefix'\r\nimport parseDigits from './helpers/parseDigits'\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from './constants'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART =\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp('^' + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + '$', 'i')\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_PART =\r\n\t'(?:' +\r\n\t\t'[' + PLUS_CHARS + ']' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']*' +\r\n\t\t'|' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']+' +\r\n\t')'\r\n\r\nconst AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = new RegExp(\r\n\t'[^' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+' +\r\n\t'.*' +\r\n\t'$'\r\n)\r\n\r\n// Tests whether `national_prefix_for_parsing` could match\r\n// different national prefixes.\r\n// Matches anything that's not a digit or a square bracket.\r\nconst COMPLEX_NATIONAL_PREFIX = /[^\\d\\[\\]]/\r\n\r\nexport default class AsYouTypeParser {\r\n\tconstructor({\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata,\r\n\t\tonNationalSignificantNumberChange\r\n\t}) {\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.metadata = metadata\r\n\t\tthis.onNationalSignificantNumberChange = onNationalSignificantNumberChange\r\n\t}\r\n\r\n\tinput(text, state) {\r\n\t\tconst [formattedDigits, hasPlus] = extractFormattedDigitsAndPlus(text)\r\n\t\tconst digits = parseDigits(formattedDigits)\r\n\t\t// Checks for a special case: just a leading `+` has been entered.\r\n\t\tlet justLeadingPlus\r\n\t\tif (hasPlus) {\r\n\t\t\tif (!state.digits) {\r\n\t\t\t\tstate.startInternationalNumber()\r\n\t\t\t\tif (!digits) {\r\n\t\t\t\t\tjustLeadingPlus = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (digits) {\r\n\t\t\tthis.inputDigits(digits, state)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number digits.\r\n\t * @param  {string} digits\r\n\t * @return {string} [formattedNumber] Formatted national phone number (if it can be formatted at this stage). Returning `undefined` means \"don't format the national phone number at this stage\".\r\n\t */\r\n\tinputDigits(nextDigits, state) {\r\n\t\tconst { digits } = state\r\n\t\tconst hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3\r\n\r\n\t\t// Append phone number digits.\r\n\t\tstate.appendDigits(nextDigits)\r\n\r\n\t\t// Attempt to extract IDD prefix:\r\n\t\t// Some users input their phone number in international format,\r\n\t\t// but in an \"out-of-country\" dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers as soon as there're at least 3 digits.\r\n\t\t// Google's library attempts to extract IDD prefix at 3 digits,\r\n\t\t// so this library just copies that behavior.\r\n\t\t// I guess that's because the most commot IDD prefixes are\r\n\t\t// `00` (Europe) and `011` (US).\r\n\t\t// There exist really long IDD prefixes too:\r\n\t\t// for example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t// An IDD prefix is extracted here, and then every time when\r\n\t\t// there's a new digit and the number couldn't be formatted.\r\n\t\tif (hasReceivedThreeLeadingDigits) {\r\n\t\t\tthis.extractIddPrefix(state)\r\n\t\t}\r\n\r\n\t\tif (this.isWaitingForCountryCallingCode(state)) {\r\n\t\t\tif (!this.extractCountryCallingCode(state)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate.appendNationalSignificantNumberDigits(nextDigits)\r\n\t\t}\r\n\r\n\t\t// If a phone number is being input in international format,\r\n\t\t// then it's not valid for it to have a national prefix.\r\n\t\t// Still, some people incorrectly input such numbers with a national prefix.\r\n\t\t// In such cases, only attempt to strip a national prefix if the number becomes too long.\r\n\t\t// (but that is done later, not here)\r\n\t\tif (!state.international) {\r\n\t\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\t\tthis.extractNationalSignificantNumber(state.getNationalDigits(), state.update)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisWaitingForCountryCallingCode({ international, callingCode }) {\r\n\t\treturn international && !callingCode\r\n\t}\r\n\r\n\t// Extracts a country calling code from a number\r\n\t// being entered in internatonal format.\r\n\textractCountryCallingCode(state) {\r\n\t\tconst { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\t\t'+' + state.getDigitsWithoutInternationalPrefix(),\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (countryCallingCode) {\r\n\t\t\tstate.setCallingCode(countryCallingCode)\r\n\t\t\tstate.update({\r\n\t\t\t\tnationalSignificantNumber: number\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\treset(numberingPlan) {\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.hasSelectedNumberingPlan = true\r\n\t\t\tconst nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing()\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing)\r\n\t\t} else {\r\n\t\t\tthis.hasSelectedNumberingPlan = undefined\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a national (significant) number from user input.\r\n\t * Google's library is different in that it only applies `national_prefix_for_parsing`\r\n\t * and doesn't apply `national_prefix_transform_rule` after that.\r\n\t * https://github.com/google/libphonenumber/blob/a3d70b0487875475e6ad659af404943211d26456/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L539\r\n\t * @return {boolean} [extracted]\r\n\t */\r\n\textractNationalSignificantNumber(nationalDigits, setState) {\r\n\t\tif (!this.hasSelectedNumberingPlan) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\tif (nationalNumber === nationalDigits) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t * In Google's code this function is called \"attempt to extract longer NDD\".\r\n\t * \"Some national prefixes are a substring of others\", they say.\r\n\t * @return {boolean} [result] \u2014 Returns `true` if extracting a national prefix produced different results from what they were.\r\n\t */\r\n\textractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {\r\n\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\treturn this.extractNationalSignificantNumber(nationalDigits, setState)\r\n\t\t}\r\n\t\tif (!this.couldPossiblyExtractAnotherNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\t// If a national prefix has been extracted previously,\r\n\t\t// then it's always extracted as additional digits are added.\r\n\t\t// That's assuming `extractNationalNumberFromPossiblyIncompleteNumber()`\r\n\t\t// doesn't do anything different from what it currently does.\r\n\t\t// So, just in case, here's this check, though it doesn't occur.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (nationalNumber === prevNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\tonExtractedNationalNumber(\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalDigits,\r\n\t\tsetState\r\n\t) {\r\n\t\tlet complexPrefixBeforeNationalSignificantNumber\r\n\t\tlet nationalSignificantNumberMatchesInput\r\n\t\t// This check also works with empty `this.nationalSignificantNumber`.\r\n\t\tconst nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber)\r\n\t\t// If the extracted national (significant) number is the\r\n\t\t// last substring of the `digits`, then it means that it hasn't been altered:\r\n\t\t// no digits have been removed from the national (significant) number\r\n\t\t// while applying `national_prefix_transform_rule`.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\tif (nationalSignificantNumberIndex >= 0 &&\r\n\t\t\tnationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {\r\n\t\t\tnationalSignificantNumberMatchesInput = true\r\n\t\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t\t// as just a basic national prefix, then such prefix is stored in\r\n\t\t\t// `this.complexPrefixBeforeNationalSignificantNumber` property and will be\r\n\t\t\t// prepended \"as is\" to the national (significant) number to produce\r\n\t\t\t// a formatted result.\r\n\t\t\tconst prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex)\r\n\t\t\t// `prefixBeforeNationalNumber` is always non-empty,\r\n\t\t\t// because `onExtractedNationalNumber()` isn't called\r\n\t\t\t// when a national (significant) number hasn't been actually \"extracted\":\r\n\t\t\t// when a national (significant) number is equal to the national part of `digits`,\r\n\t\t\t// then `onExtractedNationalNumber()` doesn't get called.\r\n\t\t\tif (prefixBeforeNationalNumber !== nationalPrefix) {\r\n\t\t\t\tcomplexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetState({\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tnationalSignificantNumberMatchesInput,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t\t})\r\n\t\t// `onExtractedNationalNumber()` is only called when\r\n\t\t// the national (significant) number actually did change.\r\n\t\tthis.hasExtractedNationalSignificantNumber = true\r\n\t\tthis.onNationalSignificantNumberChange()\r\n\t}\r\n\r\n\treExtractNationalSignificantNumber(state) {\r\n\t\t// Attempt to extract a national prefix.\r\n\t\t//\r\n\t\t// Some people incorrectly input national prefix\r\n\t\t// in an international phone number.\r\n\t\t// For example, some people write British phone numbers as `+44(0)...`.\r\n\t\t//\r\n\t\t// Also, in some rare cases, it is valid for a national prefix\r\n\t\t// to be a part of an international phone number.\r\n\t\t// For example, mobile phone numbers in Mexico are supposed to be\r\n\t\t// dialled internationally using a `1` national prefix,\r\n\t\t// so the national prefix will be part of an international number.\r\n\t\t//\r\n\t\t// Quote from:\r\n\t\t// https://www.mexperience.com/dialing-cell-phones-in-mexico/\r\n\t\t//\r\n\t\t// \"Dialing a Mexican cell phone from abroad\r\n\t\t// When you are calling a cell phone number in Mexico from outside Mexico,\r\n\t\t// it\u2019s necessary to dial an additional \u201C1\u201D after Mexico\u2019s country code\r\n\t\t// (which is \u201C52\u201D) and before the area code.\r\n\t\t// You also ignore the 045, and simply dial the area code and the\r\n\t\t// cell phone\u2019s number.\r\n\t\t//\r\n\t\t// If you don\u2019t add the \u201C1\u201D, you\u2019ll receive a recorded announcement\r\n\t\t// asking you to redial using it.\r\n\t\t//\r\n\t\t// For example, if you are calling from the USA to a cell phone\r\n\t\t// in Mexico City, you would dial +52 \u2013 1 \u2013 55 \u2013 1234 5678.\r\n\t\t// (Note that this is different to calling a land line in Mexico City\r\n\t\t// from abroad, where the number dialed would be +52 \u2013 55 \u2013 1234 5678)\".\r\n\t\t//\r\n\t\t// Google's demo output:\r\n\t\t// https://libphonenumber.appspot.com/phonenumberparser?number=%2b5215512345678&country=MX\r\n\t\t//\r\n\t\tif (this.extractAnotherNationalSignificantNumber(\r\n\t\t\tstate.getNationalDigits(),\r\n\t\t\tstate.nationalSignificantNumber,\r\n\t\t\tstate.update\r\n\t\t)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// If no format matches the phone number, then it could be\r\n\t\t// \"a really long IDD\" (quote from a comment in Google's library).\r\n\t\t// An IDD prefix is first extracted when the user has entered at least 3 digits,\r\n\t\t// and then here \u2014 every time when there's a new digit and the number\r\n\t\t// couldn't be formatted.\r\n\t\t// For example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t//\r\n\t\t// Could also check `!hasReceivedThreeLeadingDigits` here\r\n\t\t// to filter out the case when this check duplicates the one\r\n\t\t// already performed when there're 3 leading digits,\r\n\t\t// but it's not a big deal, and in most cases there\r\n\t\t// will be a suitable `format` when there're 3 leading digits.\r\n\t\t//\r\n\t\tif (this.extractIddPrefix(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// Google's AsYouType formatter supports sort of an \"autocorrection\" feature\r\n\t\t// when it \"autocorrects\" numbers that have been input for a country\r\n\t\t// with that country's calling code.\r\n\t\t// Such \"autocorrection\" feature looks weird, but different people have been requesting it:\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/375\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/316\r\n\t\tif (this.fixMissingPlus(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\textractIddPrefix(state) {\r\n\t\t// An IDD prefix can't be present in a number written with a `+`.\r\n\t\t// Also, don't re-extract an IDD prefix if has already been extracted.\r\n\t\tconst {\r\n\t\t\tinternational,\r\n\t\t\tIDDPrefix,\r\n\t\t\tdigits,\r\n\t\t\tnationalSignificantNumber\r\n\t\t} = state\r\n\t\tif (international || IDDPrefix) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Some users input their phone number in \"out-of-country\"\r\n\t\t// dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(\r\n\t\t\tdigits,\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (numberWithoutIDD !== undefined && numberWithoutIDD !== digits) {\r\n\t\t\t// If an IDD prefix was stripped then convert the IDD-prefixed number\r\n\t\t\t// to international number for subsequent parsing.\r\n\t\t\tstate.update({\r\n\t\t\t\tIDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length)\r\n\t\t\t})\r\n\t\t\tthis.startInternationalNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tfixMissingPlus(state) {\r\n\t\tif (!state.international) {\r\n\t\t\tconst {\r\n\t\t\t\tcountryCallingCode: newCallingCode,\r\n\t\t\t\tnumber\r\n\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\tstate.digits,\r\n\t\t\t\tthis.defaultCountry,\r\n\t\t\t\tthis.defaultCallingCode,\r\n\t\t\t\tthis.metadata.metadata\r\n\t\t\t)\r\n\t\t\tif (newCallingCode) {\r\n\t\t\t\tstate.update({\r\n\t\t\t\t\tmissingPlus: true\r\n\t\t\t\t})\r\n\t\t\t\tthis.startInternationalNumber(state)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstartInternationalNumber(state) {\r\n\t\tstate.startInternationalNumber()\r\n\t\t// If a national (significant) number has been extracted before, reset it.\r\n\t\tif (state.nationalSignificantNumber) {\r\n\t\t\tstate.resetNationalSignificantNumber()\r\n\t\t\tthis.onNationalSignificantNumberChange()\r\n\t\t\tthis.hasExtractedNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\textractCallingCodeAndNationalSignificantNumber(state) {\r\n\t\tif (this.extractCountryCallingCode(state)) {\r\n\t\t\t// `this.extractCallingCode()` is currently called when the number\r\n\t\t\t// couldn't be formatted during the standard procedure.\r\n\t\t\t// Normally, the national prefix would be re-extracted\r\n\t\t\t// for an international number if such number couldn't be formatted,\r\n\t\t\t// but since it's already not able to be formatted,\r\n\t\t\t// there won't be yet another retry, so also extract national prefix here.\r\n\t\t\tthis.extractNationalSignificantNumber(state.getNationalDigits(), state.update)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number from text (if there's any).\r\n * @param  {string} text\r\n * @return {string} [formattedPhoneNumber]\r\n */\r\nfunction extractFormattedPhoneNumber(text) {\r\n\t// Attempt to extract a possible number from the string passed in.\r\n\tconst startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\t// Trim everything to the left of the phone number.\r\n\ttext = text.slice(startsAt)\r\n\t// Trim the `+`.\r\n\tlet hasPlus\r\n\tif (text[0] === '+') {\r\n\t\thasPlus = true\r\n\t\ttext = text.slice('+'.length)\r\n\t}\r\n\t// Trim everything to the right of the phone number.\r\n\ttext = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, '')\r\n\t// Re-add the previously trimmed `+`.\r\n\tif (hasPlus) {\r\n\t\ttext = '+' + text\r\n\t}\r\n\treturn text\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nfunction _extractFormattedDigitsAndPlus(text) {\r\n\t// Extract a formatted phone number part from text.\r\n\tconst extractedNumber = extractFormattedPhoneNumber(text) || ''\r\n\t// Trim a `+`.\r\n\tif (extractedNumber[0] === '+') {\r\n\t\treturn [extractedNumber.slice('+'.length), true]\r\n\t}\r\n\treturn [extractedNumber]\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nexport function extractFormattedDigitsAndPlus(text) {\r\n\tlet [formattedDigits, hasPlus] = _extractFormattedDigitsAndPlus(text)\r\n\t// If the extracted phone number part\r\n\t// can possibly be a part of some valid phone number\r\n\t// then parse phone number characters from a formatted phone number.\r\n\tif (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) {\r\n\t\tformattedDigits = ''\r\n\t}\r\n\treturn [formattedDigits, hasPlus]\r\n}", "import Metadata from './metadata'\r\nimport PhoneNumber from './PhoneNumber'\r\nimport AsYouTypeState from './AsYouTypeState'\r\nimport AsYouTypeFormatter, { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter'\r\nimport AsYouTypeParser, { extractFormattedDigitsAndPlus } from './AsYouTypeParser'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class AsYouType {\r\n\t/**\r\n\t * @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.\r\n\t * @param {Object} metadata\r\n\t */\r\n\tconstructor(optionsOrDefaultCountry, metadata) {\r\n\t\tthis.metadata = new Metadata(metadata)\r\n\t\tconst [defaultCountry, defaultCallingCode] = this.getCountryAndCallingCode(optionsOrDefaultCountry)\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.reset()\r\n\t}\r\n\r\n\tgetCountryAndCallingCode(optionsOrDefaultCountry) {\r\n\t\t// Set `defaultCountry` and `defaultCallingCode` options.\r\n\t\tlet defaultCountry\r\n\t\tlet defaultCallingCode\r\n\t\t// Turns out `null` also has type \"object\". Weird.\r\n\t\tif (optionsOrDefaultCountry) {\r\n\t\t\tif (typeof optionsOrDefaultCountry === 'object') {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry.defaultCountry\r\n\t\t\t\tdefaultCallingCode = optionsOrDefaultCountry.defaultCallingCode\r\n\t\t\t} else {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (defaultCountry && !this.metadata.hasCountry(defaultCountry)) {\r\n\t\t\tdefaultCountry = undefined\r\n\t\t}\r\n\t\tif (defaultCallingCode) {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (this.metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tdefaultCountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [defaultCountry, defaultCallingCode]\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number characters.\r\n\t * @param  {string} text\r\n\t * @return {string} Formatted phone number characters that have been input so far.\r\n\t */\r\n\tinput(text) {\r\n\t\tconst {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t} = this.parser.input(text, this.state)\r\n\t\tif (justLeadingPlus) {\r\n\t\t\tthis.formattedOutput = '+'\r\n\t\t} else if (digits) {\r\n\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t// Match the available formats by the currently available leading digits.\r\n\t\t\tif (this.state.nationalSignificantNumber) {\r\n\t\t\t\tthis.formatter.narrowDownMatchingFormats(this.state)\r\n\t\t\t}\r\n\t\t\tlet formattedNationalNumber\r\n\t\t\tif (this.metadata.hasSelectedNumberingPlan()) {\r\n\t\t\t\tformattedNationalNumber = this.formatter.format(digits, this.state)\r\n\t\t\t}\r\n\t\t\tif (formattedNationalNumber === undefined) {\r\n\t\t\t\t// See if another national (significant) number could be re-extracted.\r\n\t\t\t\tif (this.parser.reExtractNationalSignificantNumber(this.state)) {\r\n\t\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\t\t// If it could, then re-try formatting the new national (significant) number.\r\n\t\t\t\t\tconst nationalDigits = this.state.getNationalDigits()\r\n\t\t\t\t\tif (nationalDigits) {\r\n\t\t\t\t\t\tformattedNationalNumber = this.formatter.format(nationalDigits, this.state)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.formattedOutput = formattedNationalNumber\r\n\t\t\t\t? this.getFullNumber(formattedNationalNumber)\r\n\t\t\t\t: this.getNonFormattedNumber()\r\n\t\t}\r\n\t\treturn this.formattedOutput\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.state = new AsYouTypeState({\r\n\t\t\tonCountryChange: (country) => {\r\n\t\t\t\t// Before version `1.6.0`, the official `AsYouType` formatter API\r\n\t\t\t\t// included the `.country` property of an `AsYouType` instance.\r\n\t\t\t\t// Since that property (along with the others) have been moved to\r\n\t\t\t\t// `this.state`, `this.country` property is emulated for compatibility\r\n\t\t\t\t// with the old versions.\r\n\t\t\t\tthis.country = country\r\n\t\t\t},\r\n\t\t\tonCallingCodeChange: (country, callingCode) => {\r\n\t\t\t\tthis.metadata.selectNumberingPlan(country, callingCode)\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t\tthis.parser.reset(this.metadata.numberingPlan)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.formatter = new AsYouTypeFormatter({\r\n\t\t\tstate: this.state,\r\n\t\t\tmetadata: this.metadata\r\n\t\t})\r\n\t\tthis.parser = new AsYouTypeParser({\r\n\t\t\tdefaultCountry: this.defaultCountry,\r\n\t\t\tdefaultCallingCode: this.defaultCallingCode,\r\n\t\t\tmetadata: this.metadata,\r\n\t\t\tstate: this.state,\r\n\t\t\tonNationalSignificantNumberChange: () => {\r\n\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.state.reset(this.defaultCountry, this.defaultCallingCode)\r\n\t\tthis.formattedOutput = ''\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is being input in international format.\r\n\t * In other words, returns `true` if and only if the parsed phone number starts with a `\"+\"`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisInternational() {\r\n\t\treturn this.state.international\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"country calling code\" part of the phone number.\r\n\t * Returns `undefined` if the number is not being input in international format.\r\n\t * Returns \"country calling code\" for \"non-geographic\" phone numbering plans too.\r\n\t * @return {string} [callingCode]\r\n\t */\r\n\tgetCallingCode() {\r\n\t\treturn this.state.callingCode\r\n\t}\r\n\r\n\t// A legacy alias.\r\n\tgetCountryCallingCode() {\r\n\t\treturn this.getCallingCode()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a two-letter country code of the phone number.\r\n\t * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n\t * Returns `undefined` if no phone number has been input yet.\r\n\t * @return {string} [country]\r\n\t */\r\n\tgetCountry() {\r\n\t\tconst { digits, country } = this.state\r\n\t\t// If no digits have been input yet,\r\n\t\t// then `this.country` is the `defaultCountry`.\r\n\t\t// Won't return the `defaultCountry` in such case.\r\n\t\tif (!digits) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet countryCode = country\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t// `AsYouType.getCountry()` returns `undefined`\r\n\t\t\t// for \"non-geographic\" phone numbering plans.\r\n\t\t\tif (countryCode === '001') {\r\n\t\t\t\tcountryCode = undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn countryCode\r\n\t}\r\n\r\n\tdetermineTheCountryIfNeeded() {\r\n\t\t// Suppose a user enters a phone number in international format,\r\n\t\t// and there're several countries corresponding to that country calling code,\r\n\t\t// and a country has been derived from the number, and then\r\n\t\t// a user enters one more digit and the number is no longer\r\n\t\t// valid for the derived country, so the country should be re-derived\r\n\t\t// on every new digit in those cases.\r\n\t\t//\r\n\t\t// If the phone number is being input in national format,\r\n\t\t// then it could be a case when `defaultCountry` wasn't specified\r\n\t\t// when creating `AsYouType` instance, and just `defaultCallingCode` was specified,\r\n\t\t// and that \"calling code\" could correspond to a \"non-geographic entity\",\r\n\t\t// or there could be several countries corresponding to that country calling code.\r\n\t\t// In those cases, `this.country` is `undefined` and should be derived\r\n\t\t// from the number. Again, if country calling code is ambiguous, then\r\n\t\t// `this.country` should be re-derived with each new digit.\r\n\t\t//\r\n\t\tif (!this.state.country || this.isCountryCallingCodeAmbiguous()) {\r\n\t\t\tthis.determineTheCountry()\r\n\t\t}\r\n\t}\r\n\r\n\t// Prepends `+CountryCode ` in case of an international phone number\r\n\tgetFullNumber(formattedNationalNumber) {\r\n\t\tif (this.isInternational()) {\r\n\t\t\tconst prefix = (text) => this.formatter.getInternationalPrefixBeforeCountryCallingCode(this.state, {\r\n\t\t\t\tspacing: text ? true : false\r\n\t\t\t}) + text\r\n\t\t\tconst { callingCode } = this.state\r\n\t\t\tif (!callingCode) {\r\n\t\t\t\treturn prefix(`${this.state.getDigitsWithoutInternationalPrefix()}`)\r\n\t\t\t}\r\n\t\t\tif (!formattedNationalNumber) {\r\n\t\t\t\treturn prefix(callingCode)\r\n\t\t\t}\r\n\t\t\treturn prefix(`${callingCode} ${formattedNationalNumber}`)\r\n\t\t}\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n\r\n\tgetNonFormattedNationalNumberWithPrefix() {\r\n\t\tconst {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber,\r\n\t\t\tnationalPrefix\r\n\t\t} = this.state\r\n\t\tlet number = nationalSignificantNumber\r\n\t\tconst prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix\r\n\t\tif (prefix) {\r\n\t\t\tnumber = prefix + number\r\n\t\t}\r\n\t\treturn number\r\n\t}\r\n\r\n\tgetNonFormattedNumber() {\r\n\t\tconst { nationalSignificantNumberMatchesInput } = this.state\r\n\t\treturn this.getFullNumber(\r\n\t\t\tnationalSignificantNumberMatchesInput\r\n\t\t\t\t? this.getNonFormattedNationalNumberWithPrefix()\r\n\t\t\t\t: this.state.getNationalDigits()\r\n\t\t)\r\n\t}\r\n\r\n\tgetNonFormattedTemplate() {\r\n\t\tconst number = this.getNonFormattedNumber()\r\n\t\tif (number) {\r\n\t\t\treturn number.replace(/[\\+\\d]/g, DIGIT_PLACEHOLDER)\r\n\t\t}\r\n\t}\r\n\r\n\tisCountryCallingCodeAmbiguous() {\r\n\t\tconst { callingCode } = this.state\r\n\t\tconst countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode)\r\n\t\treturn countryCodes && countryCodes.length > 1\r\n\t}\r\n\r\n\t// Determines the country of the phone number\r\n\t// entered so far based on the country phone code\r\n\t// and the national phone number.\r\n\tdetermineTheCountry() {\r\n\t\tthis.state.setCountry(getCountryByCallingCode(\r\n\t\t\tthis.isInternational() ? this.state.callingCode : this.defaultCallingCode,\r\n\t\t\tthis.state.nationalSignificantNumber,\r\n\t\t\tthis.metadata\r\n\t\t))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an instance of `PhoneNumber` class.\r\n\t * Will return `undefined` if no national (significant) number\r\n\t * digits have been entered so far, or if no `defaultCountry` has been\r\n\t * set and the user enters a phone number not in international format.\r\n\t */\r\n\tgetNumber() {\r\n\t\tlet {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = this.state\r\n\t\tif (this.isInternational()) {\r\n\t\t\tif (!this.state.callingCode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.state.country && !this.defaultCallingCode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!nationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst countryCode = this.getCountry()\r\n\t\tconst callingCode = this.getCountryCallingCode() || this.defaultCallingCode\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCode || callingCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\t// Phone number extensions are not supported by \"As You Type\" formatter.\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"possible\".\r\n\t * Is just a shortcut for `PhoneNumber.isPossible()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisPossible() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isPossible()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"valid\".\r\n\t * Is just a shortcut for `PhoneNumber.isValid()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisValid() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isValid()\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t * This method is used in `react-phone-number-input/source/input-control.js`\r\n\t * in versions before `3.0.16`.\r\n\t */\r\n\tgetNationalNumber() {\r\n\t\treturn this.state.nationalSignificantNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the phone number characters entered by the user.\r\n\t * @return {string}\r\n\t */\r\n\tgetChars() {\r\n\t\treturn (this.state.international ? '+' : '') + this.state.digits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the template for the formatted phone number.\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplate() {\r\n\t\treturn this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || ''\r\n\t}\r\n}", "import Metadata from './metadata'\r\n\r\nexport default function getCountries(metadata) {\r\n\treturn new Metadata(metadata).getCountries()\r\n}", "import PhoneNumber from './PhoneNumber'\r\n\r\nexport default function getExampleNumber(country, examples, metadata) {\r\n\tif (examples[country]) {\r\n\t\treturn new PhoneNumber(country, examples[country], metadata)\r\n\t}\r\n}", "import AsYouType from './AsYouType'\r\n\r\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {string} Formatted (possibly incomplete) phone number.\r\n */\r\nexport default function formatIncompletePhoneNumber(value, country, metadata) {\r\n\tif (!metadata) {\r\n\t\tmetadata = country\r\n\t\tcountry = undefined\r\n\t}\r\n\treturn new AsYouType(country, metadata).input(value)\r\n}", "'use strict'\r\n\r\nvar parsePhoneNumberFromString = require('../build/parsePhoneNumberFromString').default\r\n\r\n// ES5 `require()` \"default\" \"interoperability\" hack.\r\n// https://github.com/babel/babel/issues/2212#issuecomment-131827986\r\n// An alternative approach:\r\n// https://www.npmjs.com/package/babel-plugin-add-module-exports\r\nexports = module.exports = parsePhoneNumberFromString\r\nexports['default'] = parsePhoneNumberFromString\r\n\r\nexports.ParseError = require('../build/ParseError').default\r\nvar parsePhoneNumberWithError = require('../build/parsePhoneNumber').default\r\n// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexports.parsePhoneNumberWithError = parsePhoneNumberWithError\r\nexports.parsePhoneNumber = parsePhoneNumberWithError\r\n\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexports.parsePhoneNumberFromString = parsePhoneNumberFromString\r\n\r\nexports.isValidPhoneNumber = require('../build/isValidPhoneNumber').default\r\nexports.isPossiblePhoneNumber = require('../build/isPossiblePhoneNumber').default\r\nexports.validatePhoneNumberLength = require('../build/validatePhoneNumberLength').default\r\n\r\nexports.findNumbers = require('../build/findNumbers').default\r\nexports.searchNumbers = require('../build/searchNumbers').default\r\nexports.findPhoneNumbersInText = require('../build/findPhoneNumbersInText').default\r\nexports.searchPhoneNumbersInText = require('../build/searchPhoneNumbersInText').default\r\nexports.PhoneNumberMatcher = require('../build/PhoneNumberMatcher').default\r\n\r\nexports.AsYouType = require('../build/AsYouType').default\r\n\r\nexports.Metadata = require('../build/metadata').default\r\nexports.isSupportedCountry = require('../build/metadata').isSupportedCountry\r\nexports.getCountries = require('../build/getCountries').default\r\nexports.getCountryCallingCode = require('../build/metadata').getCountryCallingCode\r\nexports.getExtPrefix = require('../build/metadata').getExtPrefix\r\n\r\nexports.getExampleNumber = require('../build/getExampleNumber').default\r\n\r\nexports.formatIncompletePhoneNumber = require('../build/formatIncompletePhoneNumber').default\r\n\r\nexports.parseIncompletePhoneNumber = require('../build/parseIncompletePhoneNumber').default\r\nexports.parsePhoneNumberCharacter = require('../build/parseIncompletePhoneNumber').parsePhoneNumberCharacter\r\nexports.parseDigits = require('../build/helpers/parseDigits').default\r\nexports.DIGIT_PLACEHOLDER = require('../build/AsYouTypeFormatter').DIGIT_PLACEHOLDER\r\n\r\nexports.parseRFC3966 = require('../build/helpers/RFC3966').parseRFC3966\r\nexports.formatRFC3966 = require('../build/helpers/RFC3966').formatRFC3966", "'use strict'\r\n\r\nvar metadata = require('../metadata.min.json')\r\nvar core = require('../core/index.commonjs')\r\n\r\nfunction call(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}\r\n\r\nfunction parsePhoneNumberFromString() {\r\n\treturn call(core.parsePhoneNumberFromString, arguments)\r\n}\r\n\r\n// ES5 `require()` \"default\" \"interoperability\" hack.\r\n// https://github.com/babel/babel/issues/2212#issuecomment-131827986\r\n// An alternative approach:\r\n// https://www.npmjs.com/package/babel-plugin-add-module-exports\r\nexports = module.exports = parsePhoneNumberFromString\r\nexports['default'] = parsePhoneNumberFromString\r\n\r\nexports.ParseError = core.ParseError\r\n\r\nfunction parsePhoneNumberWithError() {\r\n\treturn call(core.parsePhoneNumberWithError, arguments)\r\n}\r\n\r\n// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexports.parsePhoneNumber = parsePhoneNumberWithError\r\nexports.parsePhoneNumberWithError = parsePhoneNumberWithError\r\n\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexports.parsePhoneNumberFromString = parsePhoneNumberFromString\r\n\r\nexports.isValidPhoneNumber = function isValidPhoneNumber() {\r\n\treturn call(core.isValidPhoneNumber, arguments)\r\n}\r\n\r\nexports.isPossiblePhoneNumber = function isPossiblePhoneNumber() {\r\n\treturn call(core.isPossiblePhoneNumber, arguments)\r\n}\r\n\r\nexports.validatePhoneNumberLength = function validatePhoneNumberLength() {\r\n\treturn call(core.validatePhoneNumberLength, arguments)\r\n}\r\n\r\nexports.findNumbers = function findNumbers() {\r\n\treturn call(core.findNumbers, arguments)\r\n}\r\n\r\nexports.searchNumbers = function searchNumbers() {\r\n\treturn call(core.searchNumbers, arguments)\r\n}\r\n\r\nexports.findPhoneNumbersInText = function findPhoneNumbersInText() {\r\n\treturn call(core.findPhoneNumbersInText, arguments)\r\n}\r\n\r\nexports.searchPhoneNumbersInText = function searchPhoneNumbersInText() {\r\n\treturn call(core.searchPhoneNumbersInText, arguments)\r\n}\r\n\r\nexports.PhoneNumberMatcher = function PhoneNumberMatcher(text, options) {\r\n\treturn core.PhoneNumberMatcher.call(this, text, options, metadata)\r\n}\r\nexports.PhoneNumberMatcher.prototype = Object.create(core.PhoneNumberMatcher.prototype, {})\r\nexports.PhoneNumberMatcher.prototype.constructor = exports.PhoneNumberMatcher\r\n\r\nexports.AsYouType = function AsYouType(country) {\r\n\treturn core.AsYouType.call(this, country, metadata)\r\n}\r\nexports.AsYouType.prototype = Object.create(core.AsYouType.prototype, {})\r\nexports.AsYouType.prototype.constructor = exports.AsYouType\r\n\r\nexports.isSupportedCountry = function isSupportedCountry(country) {\r\n\treturn call(core.isSupportedCountry, arguments)\r\n}\r\n\r\nexports.getCountries = function getCountries() {\r\n\treturn call(core.getCountries, arguments)\r\n}\r\n\r\nexports.getCountryCallingCode = function getCountryCallingCode() {\r\n\treturn call(core.getCountryCallingCode, arguments)\r\n}\r\n\r\nexports.getExtPrefix = function getExtPrefix(country) {\r\n\treturn call(core.getExtPrefix, arguments)\r\n}\r\n\r\nexports.getExampleNumber = function getExampleNumber() {\r\n\treturn call(core.getExampleNumber, arguments)\r\n}\r\n\r\nexports.Metadata = function Metadata() {\r\n\treturn core.Metadata.call(this, metadata)\r\n}\r\nexports.Metadata.prototype = Object.create(core.Metadata.prototype, {})\r\nexports.Metadata.prototype.constructor = exports.Metadata\r\n\r\nexports.formatIncompletePhoneNumber = function formatIncompletePhoneNumber() {\r\n\treturn call(core.formatIncompletePhoneNumber, arguments)\r\n}\r\n\r\nexports.parseIncompletePhoneNumber = core.parseIncompletePhoneNumber\r\nexports.parsePhoneNumberCharacter = core.parsePhoneNumberCharacter\r\nexports.parseDigits = core.parseDigits\r\nexports.DIGIT_PLACEHOLDER = core.DIGIT_PLACEHOLDER\r\n\r\nexports.parseRFC3966 = core.parseRFC3966\r\nexports.formatRFC3966 = core.formatRFC3966", "import _parseNumber from './parse_'\r\nimport { normalizeArguments } from './parsePhoneNumber'\r\n\r\n// `options`:\r\n//  {\r\n//    country:\r\n//    {\r\n//      restrict - (a two-letter country code)\r\n//                 the phone number must be in this country\r\n//\r\n//      default - (a two-letter country code)\r\n//                default country to use for phone number parsing and validation\r\n//                (if no country code could be derived from the phone number)\r\n//    }\r\n//  }\r\n//\r\n// Returns `{ country, number }`\r\n//\r\n// Example use cases:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\nexport default function parseNumber()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _parseNumber(text, options, metadata)\r\n}", "import _formatNumber from './format_'\r\nimport parse from './parse_'\r\n\r\nexport default function formatNumber()\r\n{\r\n\tconst\r\n\t{\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n\t= normalizeArguments(arguments)\r\n\r\n\treturn _formatNumber(input, format, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nfunction normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4, arg_5] = Array.prototype.slice.call(args)\r\n\r\n\tlet input\r\n\tlet format\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// Sort out arguments.\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `format('8005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If country code is supplied.\r\n\t\t// `format('8005553535', 'RU', 'NATIONAL', [options], metadata)`.\r\n\t\tif (typeof arg_3 === 'string')\r\n\t\t{\r\n\t\t\tformat = arg_3\r\n\r\n\t\t\tif (arg_5)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_4\r\n\t\t\t\tmetadata = arg_5\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { defaultCountry: arg_2, extended: true }, metadata)\r\n\t\t}\r\n\t\t// Just an international phone number is supplied\r\n\t\t// `format('+78005553535', 'NATIONAL', [options], metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof arg_2 !== 'string')\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('`format` argument not passed to `formatNumber(number, format)`')\r\n\t\t\t}\r\n\r\n\t\t\tformat = arg_2\r\n\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { extended: true }, metadata)\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed number object.\r\n\t// `format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', [options], metadata)`.\r\n\telse if (is_object(arg_1))\r\n\t{\r\n\t\tinput  = arg_1\r\n\t\tformat = arg_2\r\n\r\n\t\tif (arg_4)\r\n\t\t{\r\n\t\t\toptions  = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t// Legacy lowercase formats.\r\n\tif (format === 'International') {\r\n\t\tformat = 'INTERNATIONAL'\r\n\t} else if (format === 'National') {\r\n\t\tformat = 'NATIONAL'\r\n\t}\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'", "import isViablePhoneNumber from './helpers/isViablePhoneNumber'\r\nimport _getNumberType from './helpers/getNumberType'\r\nimport parse from './parse_'\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType()\r\n{\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\treturn _getNumberType(input, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nexport function normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet input\r\n\tlet options = {}\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `getNumberType('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If \"default country\" argument is being passed\r\n\t\t// then convert it to an `options` object.\r\n\t\t// `getNumberType('88005553535', 'RU', metadata)`.\r\n\t\tif (typeof arg_2 !== 'object')\r\n\t\t{\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\t// `parse` extracts phone numbers from raw text,\r\n\t\t\t// therefore it will cut off all \"garbage\" characters,\r\n\t\t\t// while this `validate` function needs to verify\r\n\t\t\t// that the phone number contains no \"garbage\"\r\n\t\t\t// therefore the explicit `isViablePhoneNumber` check.\r\n\t\t\tif (isViablePhoneNumber(arg_1))\r\n\t\t\t{\r\n\t\t\t\tinput = parse(arg_1, { defaultCountry: arg_2 }, metadata)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput = {}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// No \"resrict country\" argument is being passed.\r\n\t\t// International phone number is passed.\r\n\t\t// `getNumberType('+78005553535', metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (arg_3)\r\n\t\t\t{\r\n\t\t\t\toptions = arg_2\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_2\r\n\t\t\t}\r\n\r\n\t\t\t// `parse` extracts phone numbers from raw text,\r\n\t\t\t// therefore it will cut off all \"garbage\" characters,\r\n\t\t\t// while this `validate` function needs to verify\r\n\t\t\t// that the phone number contains no \"garbage\"\r\n\t\t\t// therefore the explicit `isViablePhoneNumber` check.\r\n\t\t\tif (isViablePhoneNumber(arg_1))\r\n\t\t\t{\r\n\t\t\t\tinput = parse(arg_1, undefined, metadata)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput = {}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed phone number.\r\n\t// `getNumberType({ phone: '88005553535', country: 'RU' }, ...)`.\r\n\telse if (is_object(arg_1))\r\n\t{\r\n\t\tinput = arg_1\r\n\r\n\t\tif (arg_3)\r\n\t\t{\r\n\t\t\toptions = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'", "import { normalizeArguments } from './getNumberType'\r\nimport _isPossibleNumber from './isPossibleNumber_'\r\n\r\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isPossibleNumber()\r\n{\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\treturn _isPossibleNumber(input, options, metadata)\r\n}", "import _isValidNumber from './validate_'\r\nimport { normalizeArguments } from './getNumberType'\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function isValidNumber()\r\n{\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\treturn _isValidNumber(input, options, metadata)\r\n}", "import isViablePhoneNumber from './helpers/isViablePhoneNumber'\r\nimport parseNumber from './parse_'\r\nimport _isValidNumberForRegion from './isValidNumberForRegion_'\r\n\r\nexport default function isValidNumberForRegion(number, country, metadata) {\r\n\tif (typeof number !== 'string') {\r\n\t\tthrow new TypeError('number must be a string')\r\n\t}\r\n\tif (typeof country !== 'string') {\r\n\t\tthrow new TypeError('country must be a string')\r\n\t}\r\n\t// `parse` extracts phone numbers from raw text,\r\n\t// therefore it will cut off all \"garbage\" characters,\r\n\t// while this `validate` function needs to verify\r\n\t// that the phone number contains no \"garbage\"\r\n\t// therefore the explicit `isViablePhoneNumber` check.\r\n\tlet input\r\n\tif (isViablePhoneNumber(number)) {\r\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\r\n\t} else {\r\n\t\tinput = {}\r\n\t}\r\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\r\n}", "// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport {\r\n\tPLUS_CHARS,\r\n\tVALID_PUNCTUATION,\r\n\tVALID_DIGITS,\r\n\tWHITESPACE\r\n} from './constants'\r\n\r\nimport parse from './parse_'\r\nimport { VALID_PHONE_NUMBER_WITH_EXTENSION } from './helpers/isViablePhoneNumber'\r\nimport createExtensionPattern from './helpers/extension/createExtensionPattern'\r\n\r\nimport parsePreCandidate from './findNumbers/parsePreCandidate'\r\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate'\r\nimport isValidCandidate from './findNumbers/isValidCandidate'\r\n\r\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\r\nexport const EXTN_PATTERNS_FOR_PARSING = createExtensionPattern('parsing')\r\n\r\nconst WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + WHITESPACE + ']+')\r\nconst PUNCTUATION_IN_THE_END_PATTERN = new RegExp('[' + VALID_PUNCTUATION + ']+$')\r\n\r\n// // Regular expression for getting opening brackets for a valid number\r\n// // found using `PHONE_NUMBER_START_PATTERN` for prepending those brackets to the number.\r\n// const BEFORE_NUMBER_DIGITS_PUNCTUATION = new RegExp('[' + OPENING_BRACKETS + ']+' + '[' + WHITESPACE + ']*' + '$')\r\n\r\nconst VALID_PRECEDING_CHARACTER_PATTERN = /[^a-zA-Z0-9]/\r\n\r\nexport default function findPhoneNumbers(text, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\tconst search = new PhoneNumberSearch(text, options, metadata)\r\n\tconst phones = []\r\n\twhile (search.hasNext()) {\r\n\t\tphones.push(search.next())\r\n\t}\r\n\treturn phones\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers(text, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\tconst search = new PhoneNumberSearch(text, options, metadata)\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (search.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: search.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a parseable phone number including any opening brackets, etc.\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?startsAt, ?endsAt }`.\r\n */\r\nexport class PhoneNumberSearch {\r\n\t// Iteration tristate.\r\n\tstate = 'NOT_READY'\r\n\r\n\tconstructor(text, options, metadata) {\r\n\t\tthis.text = text\r\n\t\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t\t// code coverage would decrease for some weird reason.\r\n\t\tthis.options = options || {}\r\n\t\tthis.metadata = metadata\r\n\r\n\t\tthis.regexp = new RegExp(VALID_PHONE_NUMBER_WITH_EXTENSION, 'ig')\r\n\t}\r\n\r\n\tfind() {\r\n\t\tconst matches = this.regexp.exec(this.text)\r\n\t\tif (!matches) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet number = matches[0]\r\n\t\tlet startsAt = matches.index\r\n\r\n\t\tnumber = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '')\r\n\t\tstartsAt += matches[0].length - number.length\r\n\t\t// Fixes not parsing numbers with whitespace in the end.\r\n\t\t// Also fixes not parsing numbers with opening parentheses in the end.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/252\r\n\t\tnumber = number.replace(PUNCTUATION_IN_THE_END_PATTERN, '')\r\n\r\n\t\tnumber = parsePreCandidate(number)\r\n\r\n\t\tconst result = this.parseCandidate(number, startsAt)\r\n\t\tif (result) {\r\n\t\t\treturn result\r\n\t\t}\r\n\r\n\t\t// Tail recursion.\r\n\t\t// Try the next one if this one is not a valid phone number.\r\n\t\treturn this.find()\r\n\t}\r\n\r\n\tparseCandidate(number, startsAt) {\r\n\t\tif (!isValidPreCandidate(number, startsAt, this.text)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Don't parse phone numbers which are non-phone numbers\r\n\t\t// due to being part of something else (e.g. a UUID).\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/213\r\n\t\t// Copy-pasted from Google's `PhoneNumberMatcher.js` (`.parseAndValidate()`).\r\n\t\tif (!isValidCandidate(number, startsAt, this.text, this.options.extended ? 'POSSIBLE' : 'VALID')) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// // Prepend any opening brackets left behind by the\r\n\t\t// // `PHONE_NUMBER_START_PATTERN` regexp.\r\n\t\t// const text_before_number = text.slice(this.searching_from, startsAt)\r\n\t\t// const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)\r\n\t\t// if (full_number_starts_at >= 0)\r\n\t\t// {\r\n\t\t// \tnumber   = text_before_number.slice(full_number_starts_at) + number\r\n\t\t// \tstartsAt = full_number_starts_at\r\n\t\t// }\r\n\t\t//\r\n\t\t// this.searching_from = matches.lastIndex\r\n\r\n\t\tconst result = parse(number, this.options, this.metadata)\r\n\t\tif (!result.phone) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tresult.startsAt = startsAt\r\n\t\tresult.endsAt = startsAt + number.length\r\n\t\treturn result\r\n\t}\r\n\r\n\thasNext() {\r\n\t\tif (this.state === 'NOT_READY') {\r\n\t\t\tthis.last_match = this.find()\r\n\t\t\tif (this.last_match) {\r\n\t\t\t\tthis.state = 'READY'\r\n\t\t\t} else {\r\n\t\t\t\tthis.state = 'DONE'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.state === 'READY'\r\n\t}\r\n\r\n\tnext() {\r\n\t\t// Check the state and find the next match as a side-effect if necessary.\r\n\t\tif (!this.hasNext()) {\r\n\t\t\tthrow new Error('No next element')\r\n\t\t}\r\n\t\t// Don't retain that memory any longer than necessary.\r\n\t\tconst result = this.last_match\r\n\t\tthis.last_match = null\r\n\t\tthis.state = 'NOT_READY'\r\n\t\treturn result\r\n\t}\r\n}", "// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_'\r\nimport { normalizeArguments } from './parsePhoneNumber'\r\n\r\nexport default function findPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findPhoneNumbers(text, options, metadata)\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _searchPhoneNumbers(text, options, metadata)\r\n}", "'use strict'\r\n\r\nvar min = require('./min/index.commonjs')\r\nvar metadata = require('./metadata.min.json')\r\n\r\nfunction withMetadata(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}\r\n\r\n// ES5 `require()` \"default\" \"interoperability\" hack.\r\n// https://github.com/babel/babel/issues/2212#issuecomment-131827986\r\n// An alternative approach:\r\n// https://www.npmjs.com/package/babel-plugin-add-module-exports\r\nexports = module.exports = min.parsePhoneNumberFromString\r\nexports['default'] = min.parsePhoneNumberFromString\r\n\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexports.parsePhoneNumberFromString = min.parsePhoneNumberFromString\r\n\r\nexports.ParseError = min.ParseError\r\n\r\n// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexports.parsePhoneNumber = min.parsePhoneNumberWithError\r\nexports.parsePhoneNumberWithError = min.parsePhoneNumberWithError\r\n\r\nexports.isValidPhoneNumber = min.isValidPhoneNumber\r\nexports.isPossiblePhoneNumber = min.isPossiblePhoneNumber\r\nexports.validatePhoneNumberLength = min.validatePhoneNumberLength\r\n\r\n// `parse()` and `parseNumber()` functions are deprecated.\r\nvar parse_ = require('./build/parse').default\r\nexports.parse = function parse() {\r\n\treturn withMetadata(parse_, arguments)\r\n}\r\nexports.parseNumber = exports.parse\r\n\r\n// `format()` and `formatNumber()` functions are deprecated.\r\nvar format_ = require('./build/format').default\r\nexports.format = function format() {\r\n\treturn withMetadata(format_, arguments)\r\n}\r\nexports.formatNumber = exports.format\r\n\r\n// Deprecated.\r\nvar getNumberType_ = require('./build/getNumberType').default\r\nexports.getNumberType = function getNumberType() {\r\n\treturn withMetadata(getNumberType_, arguments)\r\n}\r\n\r\n// Deprecated.\r\nvar isPossibleNumber_ = require('./build/isPossibleNumber').default\r\nexports.isPossibleNumber = function isPossibleNumber() {\r\n\treturn withMetadata(isPossibleNumber_, arguments)\r\n}\r\n\r\n// Deprecated.\r\nvar isValidNumber_ = require('./build/validate').default\r\nexports.isValidNumber = function isValidNumber() {\r\n\treturn withMetadata(isValidNumber_, arguments)\r\n}\r\n\r\n// Deprecated.\r\nvar isValidNumberForRegion_ = require('./build/isValidNumberForRegion').default\r\nexports.isValidNumberForRegion = function isValidNumberForRegion() {\r\n\treturn withMetadata(isValidNumberForRegion_, arguments)\r\n}\r\n\r\nexports.getExampleNumber = min.getExampleNumber\r\nexports.Metadata = min.Metadata\r\n\r\n// Deprecated.\r\nvar findPhoneNumbers_ = require('./build/findPhoneNumbers').default\r\nexports.findPhoneNumbers = function findPhoneNumbers() {\r\n\treturn withMetadata(findPhoneNumbers_, arguments)\r\n}\r\n\r\n// Deprecated.\r\nvar searchPhoneNumbers_ = require('./build/findPhoneNumbers').searchPhoneNumbers\r\nexports.searchPhoneNumbers = function searchPhoneNumbers() {\r\n\treturn withMetadata(searchPhoneNumbers_, arguments)\r\n}\r\n\r\n// Deprecated.\r\nvar PhoneNumberSearch_ = require('./build/findPhoneNumbers_').PhoneNumberSearch\r\nexports.PhoneNumberSearch = function PhoneNumberSearch(text, options) {\r\n\treturn PhoneNumberSearch_.call(this, text, options, metadata)\r\n}\r\nexports.PhoneNumberSearch.prototype = Object.create(PhoneNumberSearch_.prototype, {})\r\nexports.PhoneNumberSearch.prototype.constructor = exports.PhoneNumberSearch\r\n\r\n// Deprecated.\r\nexports.findNumbers = min.findNumbers\r\n// Deprecated.\r\nexports.searchNumbers = min.searchNumbers\r\n\r\nexports.findPhoneNumbersInText = min.findPhoneNumbersInText\r\nexports.searchPhoneNumbersInText = min.searchPhoneNumbersInText\r\nexports.PhoneNumberMatcher = min.PhoneNumberMatcher\r\n\r\nexports.AsYouType = min.AsYouType\r\n\r\nexports.getCountries = min.getCountries\r\nexports.getCountryCallingCode = min.getCountryCallingCode\r\nexports.isSupportedCountry = min.isSupportedCountry\r\nexports.getExtPrefix = min.getExtPrefix\r\n\r\nexports.parseRFC3966 = min.parseRFC3966\r\nexports.formatRFC3966 = min.formatRFC3966\r\n\r\n// Deprecated: `DIGITS` were used by `react-phone-number-input`.\r\n// Replaced by `parseDigits()`.\r\nexports.DIGITS = require('./build/helpers/parseDigits').DIGITS\r\nexports.DIGIT_PLACEHOLDER = min.DIGIT_PLACEHOLDER\r\n\r\n// `getPhoneCode` name is deprecated\r\nexports.getPhoneCode = min.getCountryCallingCode\r\n\r\nexports.formatIncompletePhoneNumber = min.formatIncompletePhoneNumber\r\nexports.parseIncompletePhoneNumber = min.parseIncompletePhoneNumber\r\nexports.parsePhoneNumberCharacter = min.parsePhoneNumberCharacter\r\nexports.parseDigits = min.parseDigits", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { parsePhoneNumberFromString, CountryCode } from 'libphonenumber-js';\n\nexport const IS_PHONE_NUMBER = 'isPhoneNumber';\n\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param value the potential phone number string to test\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function isPhoneNumber(value: string, region?: CountryCode): boolean {\n  try {\n    const phoneNum = parsePhoneNumberFromString(value, region);\n    const result = phoneNum?.isValid();\n    return !!result;\n  } catch (error) {\n    // logging?\n    return false;\n  }\n}\n\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function IsPhoneNumber(region?: CountryCode, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PHONE_NUMBER,\n      constraints: [region],\n      validator: {\n        validate: (value, args): boolean => isPhoneNumber(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid phone number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\n\nexport const IS_MILITARY_TIME = 'isMilitaryTime';\n\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function isMilitaryTime(value: unknown): boolean {\n  const militaryTimeRegex = /^([01]\\d|2[0-3]):?([0-5]\\d)$/;\n  return typeof value === 'string' && matchesValidator(value, militaryTimeRegex);\n}\n\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function IsMilitaryTime(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MILITARY_TIME,\n      validator: {\n        validate: (value, args): boolean => isMilitaryTime(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid representation of military time in the format HH:MM',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHash;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\n\nfunction isHash(str, algorithm) {\n  (0, _assertString.default)(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHashValidator from 'validator/lib/isHash';\nimport ValidatorJS from 'validator';\n\nexport const IS_HASH = 'isHash';\n\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function isHash(value: unknown, algorithm: ValidatorJS.HashAlgorithm): boolean {\n  return typeof value === 'string' && isHashValidator(value, algorithm);\n}\n\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function IsHash(algorithm: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HASH,\n      constraints: [algorithm],\n      validator: {\n        validate: (value, args): boolean => isHash(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hash of type $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n\n  if (!testIssn.test(str)) {\n    return false;\n  }\n\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n\n  return checksum % 11 === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISSNValidator from 'validator/lib/isISSN';\nimport ValidatorJS from 'validator';\n\nexport const IS_ISSN = 'isISSN';\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function isISSN(value: unknown, options?: ValidatorJS.IsISSNOptions): boolean {\n  return typeof value === 'string' && isISSNValidator(value, options);\n}\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function IsISSN(options?: ValidatorJS.IsISSNOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISSN,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isISSN(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a ISSN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport ValidatorJS from 'validator';\nimport { isISO8601 } from './IsISO8601';\n\nexport const IS_DATE_STRING = 'isDateString';\n\n/**\n * Alias for IsISO8601 validator\n */\nexport function isDateString(value: unknown, options?: ValidatorJS.IsISO8601Options): boolean {\n  return isISO8601(value, options);\n}\n\n/**\n * Alias for IsISO8601 validator\n */\nexport function IsDateString(\n  options?: ValidatorJS.IsISO8601Options,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATE_STRING,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isDateString(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBoolean;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  loose: false\n};\nvar strictBooleans = ['true', 'false', '1', '0'];\nvar looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\n\nfunction isBoolean(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  (0, _assertString.default)(str);\n\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n\n  return strictBooleans.includes(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBooleanValidator from 'validator/lib/isBoolean';\n\nexport const IS_BOOLEAN_STRING = 'isBooleanString';\n\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function isBooleanString(value: unknown): boolean {\n  return typeof value === 'string' && isBooleanValidator(value);\n}\n\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function IsBooleanString(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BOOLEAN_STRING,\n      validator: {\n        validate: (value, args): boolean => isBooleanString(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a boolean string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumeric;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numericNoSymbols = /^[0-9]+$/;\n\nfunction isNumeric(str, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? _alpha.decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isNumericValidator from 'validator/lib/isNumeric';\nimport ValidatorJS from 'validator';\n\nexport const IS_NUMBER_STRING = 'isNumberString';\n\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function isNumberString(value: unknown, options?: ValidatorJS.IsNumericOptions): boolean {\n  return typeof value === 'string' && isNumericValidator(value, options);\n}\n\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function IsNumberString(\n  options?: ValidatorJS.IsNumericOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NUMBER_STRING,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNumberString(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a number string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base32 = /^[A-Z2-7]+=*$/;\n\nfunction isBase32(str) {\n  (0, _assertString.default)(str);\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase32Validator from 'validator/lib/isBase32';\n\nexport const IS_BASE32 = 'isBase32';\n\n/**\n * Checks if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase32(value: unknown): boolean {\n  return typeof value === 'string' && isBase32Validator(value);\n}\n\n/**\n * Check if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase32(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BASE32,\n      validator: {\n        validate: (value, args): boolean => isBase32(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base32 encoded', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBIC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isISO31661Alpha = require(\"./isISO31661Alpha2\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// https://en.wikipedia.org/wiki/ISO_9362\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\n\nfunction isBIC(str) {\n  (0, _assertString.default)(str); // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n\n  if (!_isISO31661Alpha.CountryCodes.has(str.slice(4, 6).toUpperCase())) {\n    return false;\n  }\n\n  return isBICReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBICValidator from 'validator/lib/isBIC';\n\nexport const IS_BIC = 'isBIC';\n\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function isBIC(value: unknown): boolean {\n  return typeof value === 'string' && isBICValidator(value);\n}\n\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function IsBIC(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BIC,\n      validator: {\n        validate: (value, args): boolean => isBIC(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a BIC or SWIFT code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBtcAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// supports Bech32 addresses\nvar bech32 = /^(bc1)[a-z0-9]{25,39}$/;\nvar base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\n\nfunction isBtcAddress(str) {\n  (0, _assertString.default)(str); // check for bech32\n\n  if (str.startsWith('bc1')) {\n    return bech32.test(str);\n  }\n\n  return base58.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBtcAddressValidator from 'validator/lib/isBtcAddress';\n\nexport const IS_BTC_ADDRESS = 'isBtcAddress';\n\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function isBtcAddress(value: unknown): boolean {\n  return typeof value === 'string' && isBtcAddressValidator(value);\n}\n\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsBtcAddress(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BTC_ADDRESS,\n      validator: {\n        validate: (value, args): boolean => isBtcAddress(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a BTC address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDataURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\n\nfunction isDataURI(str) {\n  (0, _assertString.default)(str);\n  var data = str.split(',');\n\n  if (data.length < 2) {\n    return false;\n  }\n\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n\n  if (schemeAndMediaType.substr(0, 5) !== 'data:') {\n    return false;\n  }\n\n  var mediaType = schemeAndMediaType.substr(5);\n\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\n\nexport const IS_DATA_URI = 'isDataURI';\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value: unknown): boolean {\n  return typeof value === 'string' && isDataURIValidator(value);\n}\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATA_URI,\n      validator: {\n        validate: (value, args): boolean => isDataURI(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a data uri format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The most commonly used EAN standard is\n * the thirteen-digit EAN-13, while the\n * less commonly used 8-digit EAN-8 barcode was\n * introduced for use on small packages.\n * Also EAN/UCC-14 is used for Grouping of individual\n * trade items above unit level(Intermediate, Carton or Pallet).\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n * EAN consists of:\n * GS1 prefix, manufacturer code, product code and check digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n * Reference: https://www.gtin.info/\n */\n\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n/**\n * Get position weight given:\n * EAN length and digit index/position\n *\n * @param {number} length\n * @param {number} index\n * @return {number}\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\n * Calculate EAN Check Digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n *\n * @param {string} ean\n * @return {number}\n */\n\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\n * Check if string is valid EAN:\n * Matches EAN-8/EAN-13/EAN-14 regex\n * Has valid check digit.\n *\n * @param {string} str\n * @return {boolean}\n */\n\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEANValidator from 'validator/lib/isEAN';\n\nexport const IS_EAN = 'isEAN';\n\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function isEAN(value: unknown): boolean {\n  return typeof value === 'string' && isEANValidator(value);\n}\n\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsEAN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EAN,\n      validator: {\n        validate: (value, args): boolean => isEAN(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an EAN (European Article Number)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar eth = /^(0x)[0-9a-f]{40}$/i;\n\nfunction isEthereumAddress(str) {\n  (0, _assertString.default)(str);\n  return eth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEthereumAddressValidator from 'validator/lib/isEthereumAddress';\n\nexport const IS_ETHEREUM_ADDRESS = 'isEthereumAddress';\n\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function isEthereumAddress(value: unknown): boolean {\n  return typeof value === 'string' && isEthereumAddressValidator(value);\n}\n\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function IsEthereumAddress(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ETHEREUM_ADDRESS,\n      validator: {\n        validate: (value, args): boolean => isEthereumAddress(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an Ethereum address',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHSL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\nvar hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\n\nfunction isHSL(str) {\n  (0, _assertString.default)(str); // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n\n  var strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n\n  if (strippedStr.indexOf(',') !== -1) {\n    return hslComma.test(strippedStr);\n  }\n\n  return hslSpace.test(strippedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHSLValidator from 'validator/lib/isHSL';\n\nexport const IS_HSL = 'isHSL';\n\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function isHSL(value: unknown): boolean {\n  return typeof value === 'string' && isHSLValidator(value);\n}\n\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function IsHSL(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HSL,\n      validator: {\n        validate: (value, args): boolean => isHSL(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a HSL color', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIBAN;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nvar ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/\n};\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @return {boolean}\n */\n\nfunction hasValidIbanFormat(str) {\n  // Strip white spaces and hyphens\n  var strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n  return isoCountryCode in ibanRegexThroughCountryCode && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n\n\nfunction hasValidIbanChecksum(str) {\n  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n\n  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {\n    return char.charCodeAt(0) - 55;\n  });\n  var remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\n    return Number(acc + value) % 97;\n  }, '');\n  return remainder === 1;\n}\n\nfunction isIBAN(str) {\n  (0, _assertString.default)(str);\n  return hasValidIbanFormat(str) && hasValidIbanChecksum(str);\n}\n\nvar locales = Object.keys(ibanRegexThroughCountryCode);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIBANValidator from 'validator/lib/isIBAN';\n\nexport const IS_IBAN = 'isIBAN';\n\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function isIBAN(value: unknown): boolean {\n  return typeof value === 'string' && isIBANValidator(value);\n}\n\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsIBAN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IBAN,\n      validator: {\n        validate: (value, args): boolean => isIBAN(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an IBAN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n    var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    } // validate the control digit\n\n\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).substr(str.length - 6);\n    if (parseInt(str.substr(3, 6), 10) === 0) return false;\n    var lastNumber = parseInt(str.substr(9, 1), 10);\n    var sum = 0;\n\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.substr(i, 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n    return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n    var sum = 0;\n\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var id = sanitized;\n    var sum = 0,\n        incNum;\n\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11', // \u5317\u4EAC\n    '12', // \u5929\u6D25\n    '13', // \u6CB3\u5317\n    '14', // \u5C71\u897F\n    '15', // \u5185\u8499\u53E4\n    '21', // \u8FBD\u5B81\n    '22', // \u5409\u6797\n    '23', // \u9ED1\u9F99\u6C5F\n    '31', // \u4E0A\u6D77\n    '32', // \u6C5F\u82CF\n    '33', // \u6D59\u6C5F\n    '34', // \u5B89\u5FBD\n    '35', // \u798F\u5EFA\n    '36', // \u6C5F\u897F\n    '37', // \u5C71\u4E1C\n    '41', // \u6CB3\u5357\n    '42', // \u6E56\u5317\n    '43', // \u6E56\u5357\n    '44', // \u5E7F\u4E1C\n    '45', // \u5E7F\u897F\n    '46', // \u6D77\u5357\n    '50', // \u91CD\u5E86\n    '51', // \u56DB\u5DDD\n    '52', // \u8D35\u5DDE\n    '53', // \u4E91\u5357\n    '54', // \u897F\u85CF\n    '61', // \u9655\u897F\n    '62', // \u7518\u8083\n    '63', // \u9752\u6D77\n    '64', // \u5B81\u590F\n    '65', // \u65B0\u7586\n    '71', // \u53F0\u6E7E\n    '81', // \u9999\u6E2F\n    '82', // \u6FB3\u95E8\n    '91' // \u56FD\u5916\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n\n      if (xdata > new Date()) {\n        return false; // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n\n      return check18IdCardNo(idCardNo);\n    };\n\n    return checkIdCardNo(str);\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\n\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIdentityCardValidator from 'validator/lib/isIdentityCard';\nimport ValidatorJS from 'validator';\n\nexport const IS_IDENTITY_CARD = 'isIdentityCard';\n\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function isIdentityCard(value: unknown, locale: ValidatorJS.IdentityCardLocale): boolean {\n  return typeof value === 'string' && isIdentityCardValidator(value, locale);\n}\n\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function IsIdentityCard(\n  locale?: ValidatorJS.IdentityCardLocale,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IDENTITY_CARD,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isIdentityCard(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a identity card number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISRC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// see http://isrc.ifpi.org/en/isrc-standard/code-syntax\nvar isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\n\nfunction isISRC(str) {\n  (0, _assertString.default)(str);\n  return isrc.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISRCValidator from 'validator/lib/isISRC';\n\nexport const IS_ISRC = 'isISRC';\n\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function isISRC(value: unknown): boolean {\n  return typeof value === 'string' && isISRCValidator(value);\n}\n\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function IsISRC(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISRC,\n      validator: {\n        validate: (value, args): boolean => isISRC(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ISRC', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLocale;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar localeReg = /^[A-Za-z]{2,4}([_-]([A-Za-z]{4}|[\\d]{3}))?([_-]([A-Za-z]{2}|[\\d]{3}))?$/;\n\nfunction isLocale(str) {\n  (0, _assertString.default)(str);\n\n  if (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {\n    return true;\n  }\n\n  return localeReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLocaleValidator from 'validator/lib/isLocale';\n\nexport const IS_LOCALE = 'isLocale';\n\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function isLocale(value: unknown): boolean {\n  return typeof value === 'string' && isLocaleValidator(value);\n}\n\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function IsLocale(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LOCALE,\n      validator: {\n        validate: (value, args): boolean => isLocale(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be locale', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMagnetURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar magnetURI = /^magnet:\\?xt(?:\\.1)?=urn:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?($|&)/i;\n\nfunction isMagnetURI(url) {\n  (0, _assertString.default)(url);\n  return magnetURI.test(url.trim());\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMagnetURIValidator from 'validator/lib/isMagnetURI';\n\nexport const IS_MAGNET_URI = 'isMagnetURI';\n\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isMagnetURI(value: unknown): boolean {\n  return typeof value === 'string' && isMagnetURIValidator(value);\n}\n\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsMagnetURI(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MAGNET_URI,\n      validator: {\n        validate: (value, args): boolean => isMagnetURI(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be magnet uri format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\n// Handle \"charset\" in \"text/*\"\n\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n// Handle \"boundary\" in \"multipart/*\"\n\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMimeTypeValidator from 'validator/lib/isMimeType';\n\nexport const IS_MIME_TYPE = 'isMimeType';\n\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function isMimeType(value: unknown): boolean {\n  return typeof value === 'string' && isMimeTypeValidator(value);\n}\n\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function IsMimeType(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MIME_TYPE,\n      validator: {\n        validate: (value, args): boolean => isMimeType(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be MIME type format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isOctal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar octal = /^(0o)?[0-7]+$/i;\n\nfunction isOctal(str) {\n  (0, _assertString.default)(str);\n  return octal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isOctalValidator from 'validator/lib/isOctal';\n\nexport const IS_OCTAL = 'isOctal';\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function isOctal(value: unknown): boolean {\n  return typeof value === 'string' && isOctalValidator(value);\n}\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsOctal(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OCTAL,\n      validator: {\n        validate: (value, args): boolean => isOctal(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be valid octal number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPassportNumber;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Reference:\n * https://en.wikipedia.org/ -- Wikipedia\n * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n * https://countrycode.org/ -- Country Codes\n */\nvar passportRegexByCountryCode = {\n  AM: /^[A-Z]{2}\\d{7}$/,\n  // ARMENIA\n  AR: /^[A-Z]{3}\\d{6}$/,\n  // ARGENTINA\n  AT: /^[A-Z]\\d{7}$/,\n  // AUSTRIA\n  AU: /^[A-Z]\\d{7}$/,\n  // AUSTRALIA\n  BE: /^[A-Z]{2}\\d{6}$/,\n  // BELGIUM\n  BG: /^\\d{9}$/,\n  // BULGARIA\n  BR: /^[A-Z]{2}\\d{6}$/,\n  // BRAZIL\n  BY: /^[A-Z]{2}\\d{7}$/,\n  // BELARUS\n  CA: /^[A-Z]{2}\\d{6}$/,\n  // CANADA\n  CH: /^[A-Z]\\d{7}$/,\n  // SWITZERLAND\n  CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/,\n  // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n  CY: /^[A-Z](\\d{6}|\\d{8})$/,\n  // CYPRUS\n  CZ: /^\\d{8}$/,\n  // CZECH REPUBLIC\n  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\n  // GERMANY\n  DK: /^\\d{9}$/,\n  // DENMARK\n  DZ: /^\\d{9}$/,\n  // ALGERIA\n  EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\n  // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\n  // SPAIN\n  FI: /^[A-Z]{2}\\d{7}$/,\n  // FINLAND\n  FR: /^\\d{2}[A-Z]{2}\\d{5}$/,\n  // FRANCE\n  GB: /^\\d{9}$/,\n  // UNITED KINGDOM\n  GR: /^[A-Z]{2}\\d{7}$/,\n  // GREECE\n  HR: /^\\d{9}$/,\n  // CROATIA\n  HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\n  // HUNGARY\n  IE: /^[A-Z0-9]{2}\\d{7}$/,\n  // IRELAND\n  IN: /^[A-Z]{1}-?\\d{7}$/,\n  // INDIA\n  ID: /^[A-C]\\d{7}$/,\n  // INDONESIA\n  IR: /^[A-Z]\\d{8}$/,\n  // IRAN\n  IS: /^(A)\\d{7}$/,\n  // ICELAND\n  IT: /^[A-Z0-9]{2}\\d{7}$/,\n  // ITALY\n  JP: /^[A-Z]{2}\\d{7}$/,\n  // JAPAN\n  KR: /^[MS]\\d{8}$/,\n  // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n  LT: /^[A-Z0-9]{8}$/,\n  // LITHUANIA\n  LU: /^[A-Z0-9]{8}$/,\n  // LUXEMBURG\n  LV: /^[A-Z0-9]{2}\\d{7}$/,\n  // LATVIA\n  LY: /^[A-Z0-9]{8}$/,\n  // LIBYA\n  MT: /^\\d{7}$/,\n  // MALTA\n  MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/,\n  // MOZAMBIQUE\n  MY: /^[AHK]\\d{8}$/,\n  // MALAYSIA\n  NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\n  // NETHERLANDS\n  PL: /^[A-Z]{2}\\d{7}$/,\n  // POLAND\n  PT: /^[A-Z]\\d{6}$/,\n  // PORTUGAL\n  RO: /^\\d{8,9}$/,\n  // ROMANIA\n  RU: /^\\d{9}$/,\n  // RUSSIAN FEDERATION\n  SE: /^\\d{8}$/,\n  // SWEDEN\n  SL: /^(P)[A-Z]\\d{7}$/,\n  // SLOVANIA\n  SK: /^[0-9A-Z]\\d{7}$/,\n  // SLOVAKIA\n  TR: /^[A-Z]\\d{8}$/,\n  // TURKEY\n  UA: /^[A-Z]{2}\\d{6}$/,\n  // UKRAINE\n  US: /^\\d{9}$/ // UNITED STATES\n\n};\n/**\n * Check if str is a valid passport number\n * relative to provided ISO Country Code.\n *\n * @param {string} str\n * @param {string} countryCode\n * @return {boolean}\n */\n\nfunction isPassportNumber(str, countryCode) {\n  (0, _assertString.default)(str);\n  /** Remove All Whitespaces, Convert to UPPERCASE */\n\n  var normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n  return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPassportNumberValidator from 'validator/lib/isPassportNumber';\n\nexport const IS_PASSPORT_NUMBER = 'isPassportNumber';\n\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function isPassportNumber(value: unknown, countryCode: string): boolean {\n  return typeof value === 'string' && isPassportNumberValidator(value, countryCode);\n}\n\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function IsPassportNumber(countryCode: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PASSPORT_NUMBER,\n      constraints: [countryCode],\n      validator: {\n        validate: (value, args): boolean => isPassportNumber(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be valid passport number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPostalCode;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /2[1-4]{1}\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /\\b(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}\\b/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = Object.keys(patterns);\nexports.locales = locales;\n\nfunction isPostalCode(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPostalCodeValidator from 'validator/lib/isPostalCode';\nimport ValidatorJS from 'validator';\n\nexport const IS_POSTAL_CODE = 'isPostalCode';\n\n/**\n * Check if the string is a postal code,\n * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).\n * If given value is not a string, then it returns false.\n */\nexport function isPostalCode(value: unknown, locale: 'any' | ValidatorJS.PostalCodeLocale): boolean {\n  return typeof value === 'string' && isPostalCodeValidator(value, locale);\n}\n\n/**\n * Check if the string is a postal code,\n * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).\n * If given value is not a string, then it returns false.\n */\nexport function IsPostalCode(\n  locale?: 'any' | ValidatorJS.PostalCodeLocale,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_POSTAL_CODE,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isPostalCode(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a postal code', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRFC3339;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"^\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source, \"$\"));\n\nfunction isRFC3339(str) {\n  (0, _assertString.default)(str);\n  return rfc3339.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRFC3339Validator from 'validator/lib/isRFC3339';\n\nexport const IS_RFC_3339 = 'isRFC3339';\n\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function isRFC3339(value: unknown): boolean {\n  return typeof value === 'string' && isRFC3339Validator(value);\n}\n\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function IsRFC3339(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_RFC_3339,\n      validator: {\n        validate: (value, args): boolean => isRFC3339(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be RFC 3339 date', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRgbColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\nvar rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nvar rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)/;\nvar rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)/;\n\nfunction isRgbColor(str) {\n  var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  (0, _assertString.default)(str);\n\n  if (!includePercentValues) {\n    return rgbColor.test(str) || rgbaColor.test(str);\n  }\n\n  return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRgbColorValidator from 'validator/lib/isRgbColor';\n\nexport const IS_RGB_COLOR = 'isRgbColor';\n\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function isRgbColor(value: unknown, includePercentValues?: boolean): boolean {\n  return typeof value === 'string' && isRgbColorValidator(value, includePercentValues);\n}\n\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function IsRgbColor(includePercentValues?: boolean, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_RGB_COLOR,\n      constraints: [includePercentValues],\n      validator: {\n        validate: (value, args): boolean => isRgbColor(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be RGB color', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multilineRegexp;\n\n/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nfunction multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSemVer;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\n\nfunction isSemVer(str) {\n  (0, _assertString.default)(str);\n  return semanticVersioningRegex.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSemVerValidator from 'validator/lib/isSemVer';\n\nexport const IS_SEM_VER = 'isSemVer';\n\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function isSemVer(value: unknown): boolean {\n  return typeof value === 'string' && isSemVerValidator(value);\n}\n\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function IsSemVer(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_SEM_VER,\n      validator: {\n        validate: (value, args): boolean => isSemVer(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Semantic Versioning Specification',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_BOOLEAN = 'isBoolean';\n\n/**\n * Checks if a given value is a boolean.\n */\nexport function isBoolean(value: unknown): boolean {\n  return value instanceof Boolean || typeof value === 'boolean';\n}\n\n/**\n * Checks if a value is a boolean.\n */\nexport function IsBoolean(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BOOLEAN,\n      validator: {\n        validate: (value, args): boolean => isBoolean(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a boolean value', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_DATE = 'isDate';\n\n/**\n * Checks if a given value is a date.\n */\nexport function isDate(value: unknown): boolean {\n  return value instanceof Date && !isNaN(value.getTime());\n}\n\n/**\n * Checks if a value is a date.\n */\nexport function IsDate(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATE,\n      validator: {\n        validate: (value, args): boolean => isDate(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a Date instance', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NUMBER = 'isNumber';\n\n/**\n * Options to be passed to IsNumber decorator.\n */\nexport interface IsNumberOptions {\n  allowNaN?: boolean;\n  allowInfinity?: boolean;\n  maxDecimalPlaces?: number;\n}\n\n/**\n * Checks if a given value is a number.\n */\nexport function isNumber(value: unknown, options: IsNumberOptions = {}): boolean {\n  if (typeof value !== 'number') {\n    return false;\n  }\n\n  if (value === Infinity || value === -Infinity) {\n    return options.allowInfinity;\n  }\n\n  if (Number.isNaN(value)) {\n    return options.allowNaN;\n  }\n\n  if (options.maxDecimalPlaces !== undefined) {\n    let decimalPlaces = 0;\n    if (value % 1 !== 0) {\n      decimalPlaces = value.toString().split('.')[1].length;\n    }\n    if (decimalPlaces > options.maxDecimalPlaces) {\n      return false;\n    }\n  }\n\n  return Number.isFinite(value);\n}\n\n/**\n * Checks if a value is a number.\n */\nexport function IsNumber(options: IsNumberOptions = {}, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NUMBER,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNumber(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a number conforming to the specified constraints',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_ENUM = 'isEnum';\n\n/**\n * Checks if a given value is an enum\n */\nexport function isEnum(value: unknown, entity: any): boolean {\n  const enumValues = Object.keys(entity).map(k => entity[k]);\n  return enumValues.indexOf(value) >= 0;\n}\n\n/**\n * Checks if a given value is an enum\n */\nexport function IsEnum(entity: object, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ENUM,\n      constraints: [entity],\n      validator: {\n        validate: (value, args): boolean => isEnum(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid enum value',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_INT = 'isInt';\n\n/**\n * Checks if value is an integer.\n */\nexport function isInt(val: unknown): boolean {\n  return typeof val === 'number' && Number.isInteger(val);\n}\n\n/**\n * Checks if value is an integer.\n */\nexport function IsInt(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_INT,\n      validator: {\n        validate: (value, args): boolean => isInt(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an integer number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_STRING = 'isString';\n\n/**\n * Checks if a given value is a real string.\n */\nexport function isString(value: unknown): value is string {\n  return value instanceof String || typeof value === 'string';\n}\n\n/**\n * Checks if a given value is a real string.\n */\nexport function IsString(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_STRING,\n      validator: {\n        validate: (value, args): boolean => isString(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_ARRAY = 'isArray';\n\n/**\n * Checks if a given value is an array\n */\nexport function isArray(value: unknown): boolean {\n  return value instanceof Array;\n}\n\n/**\n * Checks if a given value is an array\n */\nexport function IsArray(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ARRAY,\n      validator: {\n        validate: (value, args): boolean => isArray(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an array', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_OBJECT = 'isObject';\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function isObject(value: unknown): value is object {\n  return value != null && (typeof value === 'object' || typeof value === 'function') && !Array.isArray(value);\n}\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function IsObject(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OBJECT,\n      validator: {\n        validate: (value, args): boolean => isObject(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an object', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_CONTAINS = 'arrayContains';\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayContains(array: unknown, values: any[]): boolean {\n  if (!(array instanceof Array)) return false;\n\n  return values.every(value => array.indexOf(value) !== -1);\n}\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_CONTAINS,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => arrayContains(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain $constraint1 values',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_NOT_CONTAINS = 'arrayNotContains';\n\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotContains(array: unknown, values: any[]): boolean {\n  if (!(array instanceof Array)) return false;\n\n  return values.every(value => array.indexOf(value) === -1);\n}\n\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_NOT_CONTAINS,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => arrayNotContains(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not contain $constraint1 values',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_NOT_EMPTY = 'arrayNotEmpty';\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array: unknown): boolean {\n  return array instanceof Array && array.length > 0;\n}\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => arrayNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_MIN_SIZE = 'arrayMinSize';\n\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMinSize(array: unknown, min: number): boolean {\n  return array instanceof Array && array.length >= min;\n}\n\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMinSize(min: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_MIN_SIZE,\n      constraints: [min],\n      validator: {\n        validate: (value, args): boolean => arrayMinSize(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain at least $constraint1 elements',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_MAX_SIZE = 'arrayMaxSize';\n\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMaxSize(array: unknown, max: number): boolean {\n  return array instanceof Array && array.length <= max;\n}\n\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMaxSize(max: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_MAX_SIZE,\n      constraints: [max],\n      validator: {\n        validate: (value, args): boolean => arrayMaxSize(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain not more than $constraint1 elements',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_UNIQUE = 'arrayUnique';\nexport type ArrayUniqueIdentifier<T = any> = (o: T) => any;\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array: unknown[], identifier?: ArrayUniqueIdentifier): boolean {\n  if (!(array instanceof Array)) return false;\n\n  if (identifier) {\n    array = array.map(o => (o != null ? identifier(o) : o));\n  }\n\n  const uniqueItems = array.filter((a, b, c) => c.indexOf(a) === b);\n  return array.length === uniqueItems.length;\n}\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique<T = any>(\n  identifierOrOptions?: ArrayUniqueIdentifier<T> | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  const identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n  const options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n\n  return ValidateBy(\n    {\n      name: ARRAY_UNIQUE,\n      validator: {\n        validate: (value, args): boolean => arrayUnique(value, identifier),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + \"All $property's elements must be unique\", options),\n      },\n    },\n    options\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isObject } from '../typechecker/IsObject';\n\nexport const IS_NOT_EMPTY_OBJECT = 'isNotEmptyObject';\n\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function isNotEmptyObject(value: unknown, options?: { nullable?: boolean }): boolean {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  if (options?.nullable === true) {\n    return !Object.values(value).every(propertyValue => propertyValue === null || propertyValue === undefined);\n  }\n\n  for (const key in value) {\n    if (value.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function IsNotEmptyObject(\n  options?: { nullable?: boolean },\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_EMPTY_OBJECT,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNotEmptyObject(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a non-empty object',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_INSTANCE = 'isInstance';\n\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function isInstance(object: unknown, targetTypeConstructor: new (...args: any[]) => any): boolean {\n  return (\n    targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor\n  );\n}\n\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(\n  targetType: new (...args: any[]) => any,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_INSTANCE,\n      constraints: [targetType],\n      validator: {\n        validate: (value, args): boolean => isInstance(value, args.constraints[0]),\n        defaultMessage: buildMessage((eachPrefix, args) => {\n          if (args.constraints[0]) {\n            return eachPrefix + `$property must be an instance of ${args.constraints[0].name as string}`;\n          } else {\n            return eachPrefix + `${IS_INSTANCE} decorator expects and object as value, but got falsy value.`;\n          }\n        }, validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "// -------------------------------------------------------------------------\n// System\n// -------------------------------------------------------------------------\n\n// -------------------------------------------------------------------------\n// Common checkers\n// -------------------------------------------------------------------------\n\nexport * from './common/Allow';\nexport * from './common/IsDefined';\nexport * from './common/IsOptional';\nexport * from './common/Validate';\nexport * from './common/ValidateBy';\nexport * from './common/ValidateIf';\nexport * from './common/ValidateNested';\nexport * from './common/ValidatePromise';\nexport * from './common/IsLatLong';\nexport * from './common/IsLatitude';\nexport * from './common/IsLongitude';\nexport * from './common/Equals';\nexport * from './common/NotEquals';\nexport * from './common/IsEmpty';\nexport * from './common/IsNotEmpty';\nexport * from './common/IsIn';\nexport * from './common/IsNotIn';\n\n// -------------------------------------------------------------------------\n// Number checkers\n// -------------------------------------------------------------------------\n\nexport * from './number/IsDivisibleBy';\nexport * from './number/IsPositive';\nexport * from './number/IsNegative';\nexport * from './number/Max';\nexport * from './number/Min';\n\n// -------------------------------------------------------------------------\n// Date checkers\n// -------------------------------------------------------------------------\n\nexport * from './date/MinDate';\nexport * from './date/MaxDate';\n\n// -------------------------------------------------------------------------\n// String checkers\n// -------------------------------------------------------------------------\n\nexport * from './string/Contains';\nexport * from './string/NotContains';\nexport * from './string/IsAlpha';\nexport * from './string/IsAlphanumeric';\nexport * from './string/IsDecimal';\nexport * from './string/IsAscii';\nexport * from './string/IsBase64';\nexport * from './string/IsByteLength';\nexport * from './string/IsCreditCard';\nexport * from './string/IsCurrency';\nexport * from './string/IsEmail';\nexport * from './string/IsFQDN';\nexport * from './string/IsFullWidth';\nexport * from './string/IsHalfWidth';\nexport * from './string/IsVariableWidth';\nexport * from './string/IsHexColor';\nexport * from './string/IsHexadecimal';\nexport * from './string/IsMacAddress';\nexport * from './string/IsIP';\nexport * from './string/IsPort';\nexport * from './string/IsISBN';\nexport * from './string/IsISIN';\nexport * from './string/IsISO8601';\nexport * from './string/IsJSON';\nexport * from './string/IsJWT';\nexport * from './string/IsLowercase';\nexport * from './string/IsMobilePhone';\nexport * from './string/IsISO31661Alpha2';\nexport * from './string/IsISO31661Alpha3';\nexport * from './string/IsMongoId';\nexport * from './string/IsMultibyte';\nexport * from './string/IsSurrogatePair';\nexport * from './string/IsUrl';\nexport * from './string/IsUUID';\nexport * from './string/IsFirebasePushId';\nexport * from './string/IsUppercase';\nexport * from './string/Length';\nexport * from './string/MaxLength';\nexport * from './string/MinLength';\nexport * from './string/Matches';\nexport * from './string/IsPhoneNumber';\nexport * from './string/IsMilitaryTime';\nexport * from './string/IsHash';\nexport * from './string/IsISSN';\nexport * from './string/IsDateString';\nexport * from './string/IsBooleanString';\nexport * from './string/IsNumberString';\nexport * from './string/IsBase32';\nexport * from './string/IsBIC';\nexport * from './string/IsBtcAddress';\nexport * from './string/IsDataURI';\nexport * from './string/IsEAN';\nexport * from './string/IsEthereumAddress';\nexport * from './string/IsHSL';\nexport * from './string/IsIBAN';\nexport * from './string/IsIdentityCard';\nexport * from './string/IsISRC';\nexport * from './string/IsLocale';\nexport * from './string/IsMagnetURI';\nexport * from './string/IsMimeType';\nexport * from './string/IsOctal';\nexport * from './string/IsPassportNumber';\nexport * from './string/IsPostalCode';\nexport * from './string/IsRFC3339';\nexport * from './string/IsRgbColor';\nexport * from './string/IsSemVer';\n\n// -------------------------------------------------------------------------\n// Type checkers\n// -------------------------------------------------------------------------\n\nexport * from './typechecker/IsBoolean';\nexport * from './typechecker/IsDate';\nexport * from './typechecker/IsNumber';\nexport * from './typechecker/IsEnum';\nexport * from './typechecker/IsInt';\nexport * from './typechecker/IsString';\nexport * from './typechecker/IsArray';\nexport * from './typechecker/IsObject';\n\n// -------------------------------------------------------------------------\n// Array checkers\n// -------------------------------------------------------------------------\n\nexport * from './array/ArrayContains';\nexport * from './array/ArrayNotContains';\nexport * from './array/ArrayNotEmpty';\nexport * from './array/ArrayMinSize';\nexport * from './array/ArrayMaxSize';\nexport * from './array/ArrayUnique';\n\n// -------------------------------------------------------------------------\n// Object checkers\n// -------------------------------------------------------------------------\n\nexport * from './object/IsNotEmptyObject';\nexport * from './object/IsInstance';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ValidatorConstraintInterface.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ValidatorOptions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ValidationArguments.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ValidationSchema.js.map", "import { ValidationError } from './validation/ValidationError';\nimport { ValidatorOptions } from './validation/ValidatorOptions';\nimport { ValidationSchema } from './validation-schema/ValidationSchema';\nimport { getMetadataStorage } from './metadata/MetadataStorage';\nimport { Validator } from './validation/Validator';\nimport { getFromContainer } from './container';\n\n// -------------------------------------------------------------------------\n// Export everything api users needs\n// -------------------------------------------------------------------------\n\nexport * from './container';\nexport * from './decorator/decorators';\nexport * from './decorator/ValidationOptions';\nexport * from './validation/ValidatorConstraintInterface';\nexport * from './validation/ValidationError';\nexport * from './validation/ValidatorOptions';\nexport * from './validation/ValidationArguments';\nexport * from './validation/ValidationTypes';\nexport * from './validation/Validator';\nexport * from './validation-schema/ValidationSchema';\nexport * from './register-decorator';\nexport * from './metadata/MetadataStorage';\n\n// -------------------------------------------------------------------------\n// Shortcut methods for api users\n// -------------------------------------------------------------------------\n\n/**\n * Validates given object.\n */\nexport function validate(object: object, validatorOptions?: ValidatorOptions): Promise<ValidationError[]>;\n\n/**\n * Validates given object by a given validation schema.\n */\nexport function validate(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): Promise<ValidationError[]>;\n\n/**\n * Validates given object by object's decorators or given validation schema.\n */\nexport function validate(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): Promise<ValidationError[]> {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validate(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions as ValidatorOptions);\n  }\n}\n\n/**\n * Validates given object and reject on error.\n */\nexport function validateOrReject(object: object, validatorOptions?: ValidatorOptions): Promise<void>;\n\n/**\n * Validates given object by a given validation schema and reject on error.\n */\nexport function validateOrReject(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): Promise<void>;\n\n/**\n * Validates given object by object's decorators or given validation schema and reject on error.\n */\nexport function validateOrReject(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): Promise<void> {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validateOrReject(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validateOrReject(\n      schemaNameOrObject,\n      objectOrValidationOptions as ValidatorOptions\n    );\n  }\n}\n\n/**\n * Performs sync validation of the given object.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(object: object, validatorOptions?: ValidatorOptions): ValidationError[];\n\n/**\n * Validates given object by a given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): ValidationError[];\n\n/**\n * Validates given object by object's decorators or given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): ValidationError[] {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validateSync(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions as ValidatorOptions);\n  }\n}\n\n/**\n * Registers a new validation schema.\n */\nexport function registerSchema(schema: ValidationSchema): void {\n  getMetadataStorage().addValidationSchema(schema);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateArg = void 0;\nconst ArgumentValidationError_1 = require(\"../errors/ArgumentValidationError\");\nasync function validateArg(argValue, argType, globalValidate, argValidate) {\n    const validate = argValidate !== undefined ? argValidate : globalValidate;\n    if (validate === false || argValue == null || typeof argValue !== \"object\") {\n        return argValue;\n    }\n    if (typeof validate === \"function\") {\n        await validate(argValue, argType);\n        return argValue;\n    }\n    const validatorOptions = Object.assign({}, typeof globalValidate === \"object\" ? globalValidate : {}, typeof argValidate === \"object\" ? argValidate : {});\n    if (validatorOptions.skipMissingProperties !== false) {\n        validatorOptions.skipMissingProperties = true;\n    }\n    const { validateOrReject } = await Promise.resolve().then(() => require(\"class-validator\"));\n    try {\n        if (Array.isArray(argValue)) {\n            await Promise.all(argValue.map(argItem => validateOrReject(argItem, validatorOptions)));\n        }\n        else {\n            await validateOrReject(argValue, validatorOptions);\n        }\n        return argValue;\n    }\n    catch (err) {\n        throw new ArgumentValidationError_1.ArgumentValidationError(err);\n    }\n}\nexports.validateArg = validateArg;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthMiddleware = void 0;\nconst errors_1 = require(\"../errors\");\nfunction AuthMiddleware(authChecker, authMode, roles) {\n    return async (action, next) => {\n        const accessGranted = await authChecker(action, roles);\n        if (!accessGranted) {\n            if (authMode === \"null\") {\n                return null;\n            }\n            else if (authMode === \"error\") {\n                throw roles.length === 0 ? new errors_1.UnauthorizedError() : new errors_1.ForbiddenError();\n            }\n        }\n        return next();\n    };\n}\nexports.AuthMiddleware = AuthMiddleware;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertArgToInstance = exports.convertArgsToInstance = void 0;\nconst types_1 = require(\"../helpers/types\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst generatedTrees = new Map();\nfunction getInputType(target) {\n    return getMetadataStorage_1.getMetadataStorage().inputTypes.find(t => t.target === target);\n}\nfunction getArgsType(target) {\n    return getMetadataStorage_1.getMetadataStorage().argumentTypes.find(t => t.target === target);\n}\nfunction generateInstanceTransformationTree(target) {\n    if (generatedTrees.has(target)) {\n        return generatedTrees.get(target);\n    }\n    const inputType = getInputType(target);\n    if (!inputType) {\n        generatedTrees.set(target, null);\n        return null;\n    }\n    function generateTransformationTree(metadata) {\n        let inputFields = metadata.fields;\n        let superClass = Object.getPrototypeOf(metadata.target);\n        while (superClass.prototype !== undefined) {\n            const superInputType = getInputType(superClass);\n            if (superInputType) {\n                inputFields = [...inputFields, ...superInputType.fields];\n            }\n            superClass = Object.getPrototypeOf(superClass);\n        }\n        const transformationTree = {\n            target: metadata.target,\n            getFields: () => inputFields.map(field => {\n                const fieldTarget = field.getType();\n                const fieldInputType = getInputType(fieldTarget);\n                return {\n                    name: field.name,\n                    target: fieldTarget,\n                    fields: fieldTarget === metadata.target\n                        ? transformationTree\n                        : fieldInputType && generateTransformationTree(fieldInputType),\n                };\n            }),\n        };\n        return transformationTree;\n    }\n    const generatedTransformationTree = generateTransformationTree(inputType);\n    generatedTrees.set(target, generatedTransformationTree);\n    return generatedTransformationTree;\n}\nfunction convertToInput(tree, data) {\n    if (data == null) {\n        // skip converting undefined and null\n        return data;\n    }\n    const inputFields = tree.getFields().reduce((fields, field) => {\n        const siblings = field.fields;\n        const value = data[field.name];\n        // don't create property for nullable field\n        if (value !== undefined) {\n            if (value === null || !siblings) {\n                fields[field.name] = types_1.convertToType(field.target, value);\n            }\n            else if (Array.isArray(value)) {\n                fields[field.name] = value.map(itemValue => convertToInput(siblings, itemValue));\n            }\n            else {\n                fields[field.name] = convertToInput(siblings, value);\n            }\n        }\n        return fields;\n    }, {});\n    return types_1.convertToType(tree.target, inputFields);\n}\nfunction convertValueToInstance(target, value) {\n    const transformationTree = generateInstanceTransformationTree(target);\n    return transformationTree\n        ? convertToInput(transformationTree, value)\n        : types_1.convertToType(target, value);\n}\nfunction convertValuesToInstances(target, value) {\n    // skip converting undefined and null\n    if (value == null) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        // call function recursively to handle nested arrays case\n        return value.map(itemValue => convertValuesToInstances(target, itemValue));\n    }\n    return convertValueToInstance(target, value);\n}\nfunction convertArgsToInstance(argsMetadata, args) {\n    const ArgsClass = argsMetadata.getType();\n    const argsType = getArgsType(ArgsClass);\n    let argsFields = argsType.fields;\n    let superClass = Object.getPrototypeOf(argsType.target);\n    while (superClass.prototype !== undefined) {\n        const superArgumentType = getArgsType(superClass);\n        if (superArgumentType) {\n            argsFields = [...argsFields, ...superArgumentType.fields];\n        }\n        superClass = Object.getPrototypeOf(superClass);\n    }\n    const transformedFields = argsFields.reduce((fields, field) => {\n        const fieldValue = args[field.name];\n        // don't create property for nullable field\n        if (fieldValue !== undefined) {\n            const fieldTarget = field.getType();\n            fields[field.name] = convertValuesToInstances(fieldTarget, fieldValue);\n        }\n        return fields;\n    }, {});\n    return types_1.convertToType(ArgsClass, transformedFields);\n}\nexports.convertArgsToInstance = convertArgsToInstance;\nfunction convertArgToInstance(argMetadata, args) {\n    const argValue = args[argMetadata.name];\n    const argTarget = argMetadata.getType();\n    return convertValuesToInstances(argTarget, argValue);\n}\nexports.convertArgToInstance = convertArgToInstance;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPromiseLike(value) {\n    return value != null && typeof value.then === \"function\";\n}\nexports.default = isPromiseLike;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyMiddlewares = exports.applyAuthChecker = exports.getParams = void 0;\nconst types_1 = require(\"../helpers/types\");\nconst validate_arg_1 = require(\"./validate-arg\");\nconst auth_middleware_1 = require(\"../helpers/auth-middleware\");\nconst convert_args_1 = require(\"./convert-args\");\nconst isPromiseLike_1 = require(\"../utils/isPromiseLike\");\nfunction getParams(params, resolverData, globalValidate, pubSub) {\n    const paramValues = params\n        .sort((a, b) => a.index - b.index)\n        .map(paramInfo => {\n        switch (paramInfo.kind) {\n            case \"args\":\n                return validate_arg_1.validateArg(convert_args_1.convertArgsToInstance(paramInfo, resolverData.args), paramInfo.getType(), globalValidate, paramInfo.validate);\n            case \"arg\":\n                return validate_arg_1.validateArg(convert_args_1.convertArgToInstance(paramInfo, resolverData.args), paramInfo.getType(), globalValidate, paramInfo.validate);\n            case \"context\":\n                if (paramInfo.propertyName) {\n                    return resolverData.context[paramInfo.propertyName];\n                }\n                return resolverData.context;\n            case \"root\":\n                const rootValue = paramInfo.propertyName\n                    ? resolverData.root[paramInfo.propertyName]\n                    : resolverData.root;\n                if (!paramInfo.getType) {\n                    return rootValue;\n                }\n                return types_1.convertToType(paramInfo.getType(), rootValue);\n            case \"info\":\n                return resolverData.info;\n            case \"pubSub\":\n                if (paramInfo.triggerKey) {\n                    return (payload) => pubSub.publish(paramInfo.triggerKey, payload);\n                }\n                return pubSub;\n            case \"custom\":\n                return paramInfo.resolver(resolverData);\n        }\n    });\n    if (paramValues.some(isPromiseLike_1.default)) {\n        return Promise.all(paramValues);\n    }\n    else {\n        return paramValues;\n    }\n}\nexports.getParams = getParams;\nfunction applyAuthChecker(middlewares, authMode, authChecker, roles) {\n    if (authChecker && roles) {\n        middlewares.unshift(auth_middleware_1.AuthMiddleware(authChecker, authMode, roles));\n    }\n}\nexports.applyAuthChecker = applyAuthChecker;\nfunction applyMiddlewares(container, resolverData, middlewares, resolverHandlerFunction) {\n    if (middlewares.length === 0) {\n        return resolverHandlerFunction();\n    }\n    let middlewaresIndex = -1;\n    async function dispatchHandler(currentIndex) {\n        if (currentIndex <= middlewaresIndex) {\n            throw new Error(\"next() called multiple times\");\n        }\n        middlewaresIndex = currentIndex;\n        let handlerFn;\n        if (currentIndex === middlewares.length) {\n            handlerFn = resolverHandlerFunction;\n        }\n        else {\n            const currentMiddleware = middlewares[currentIndex];\n            // arrow function or class\n            if (currentMiddleware.prototype !== undefined) {\n                const middlewareClassInstance = await container.getInstance(currentMiddleware, resolverData);\n                handlerFn = middlewareClassInstance.use.bind(middlewareClassInstance);\n            }\n            else {\n                handlerFn = currentMiddleware;\n            }\n        }\n        let nextResult;\n        const result = await handlerFn(resolverData, async () => {\n            nextResult = await dispatchHandler(currentIndex + 1);\n            return nextResult;\n        });\n        return result !== undefined ? result : nextResult;\n    }\n    return dispatchHandler(0);\n}\nexports.applyMiddlewares = applyMiddlewares;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapResolverWithAuthChecker = exports.createBasicFieldResolver = exports.createAdvancedFieldResolver = exports.createHandlerResolver = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst types_1 = require(\"../helpers/types\");\nconst build_context_1 = require(\"../schema/build-context\");\nconst isPromiseLike_1 = require(\"../utils/isPromiseLike\");\nconst auth_middleware_1 = require(\"../helpers/auth-middleware\");\nfunction createHandlerResolver(resolverMetadata) {\n    const { validate: globalValidate, authChecker, authMode, pubSub, globalMiddlewares, container, } = build_context_1.BuildContext;\n    const middlewares = globalMiddlewares.concat(resolverMetadata.middlewares);\n    helpers_1.applyAuthChecker(middlewares, authMode, authChecker, resolverMetadata.roles);\n    return (root, args, context, info) => {\n        const resolverData = { root, args, context, info };\n        const targetInstanceOrPromise = container.getInstance(resolverMetadata.target, resolverData);\n        if (isPromiseLike_1.default(targetInstanceOrPromise)) {\n            return targetInstanceOrPromise.then(targetInstance => helpers_1.applyMiddlewares(container, resolverData, middlewares, () => {\n                const params = helpers_1.getParams(resolverMetadata.params, resolverData, globalValidate, pubSub);\n                if (isPromiseLike_1.default(params)) {\n                    return params.then(resolvedParams => targetInstance[resolverMetadata.methodName].apply(targetInstance, resolvedParams));\n                }\n                else {\n                    return targetInstance[resolverMetadata.methodName].apply(targetInstance, params);\n                }\n            }));\n        }\n        return helpers_1.applyMiddlewares(container, resolverData, middlewares, () => {\n            const params = helpers_1.getParams(resolverMetadata.params, resolverData, globalValidate, pubSub);\n            const targetInstance = targetInstanceOrPromise;\n            if (isPromiseLike_1.default(params)) {\n                return params.then(resolvedParams => targetInstance[resolverMetadata.methodName].apply(targetInstance, resolvedParams));\n            }\n            else {\n                return targetInstance[resolverMetadata.methodName].apply(targetInstance, params);\n            }\n        });\n    };\n}\nexports.createHandlerResolver = createHandlerResolver;\nfunction createAdvancedFieldResolver(fieldResolverMetadata) {\n    if (fieldResolverMetadata.kind === \"external\") {\n        return createHandlerResolver(fieldResolverMetadata);\n    }\n    const targetType = fieldResolverMetadata.getObjectType();\n    const { validate: globalValidate, authChecker, authMode, pubSub, globalMiddlewares, container, } = build_context_1.BuildContext;\n    const middlewares = globalMiddlewares.concat(fieldResolverMetadata.middlewares);\n    helpers_1.applyAuthChecker(middlewares, authMode, authChecker, fieldResolverMetadata.roles);\n    return (root, args, context, info) => {\n        const resolverData = { root, args, context, info };\n        const targetInstance = types_1.convertToType(targetType, root);\n        return helpers_1.applyMiddlewares(container, resolverData, middlewares, () => {\n            const handlerOrGetterValue = targetInstance[fieldResolverMetadata.methodName];\n            if (typeof handlerOrGetterValue !== \"function\") {\n                // getter\n                return handlerOrGetterValue;\n            }\n            // method\n            const params = helpers_1.getParams(fieldResolverMetadata.params, resolverData, globalValidate, pubSub);\n            if (isPromiseLike_1.default(params)) {\n                return params.then(resolvedParams => handlerOrGetterValue.apply(targetInstance, resolvedParams));\n            }\n            else {\n                return handlerOrGetterValue.apply(targetInstance, params);\n            }\n        });\n    };\n}\nexports.createAdvancedFieldResolver = createAdvancedFieldResolver;\nfunction createBasicFieldResolver(fieldMetadata) {\n    const { authChecker, authMode, globalMiddlewares, container } = build_context_1.BuildContext;\n    const middlewares = globalMiddlewares.concat(fieldMetadata.middlewares);\n    helpers_1.applyAuthChecker(middlewares, authMode, authChecker, fieldMetadata.roles);\n    return (root, args, context, info) => {\n        const resolverData = { root, args, context, info };\n        return helpers_1.applyMiddlewares(container, resolverData, middlewares, () => root[fieldMetadata.name]);\n    };\n}\nexports.createBasicFieldResolver = createBasicFieldResolver;\nfunction wrapResolverWithAuthChecker(resolver, roles) {\n    const { authChecker, authMode } = build_context_1.BuildContext;\n    if (!authChecker || !roles) {\n        return resolver;\n    }\n    return (root, args, context, info) => {\n        const resolverData = { root, args, context, info };\n        return auth_middleware_1.AuthMiddleware(authChecker, authMode, roles)(resolverData, async () => resolver(root, args, context, info));\n    };\n}\nexports.wrapResolverWithAuthChecker = wrapResolverWithAuthChecker;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFieldMetadataFromObjectType = exports.getFieldMetadataFromInputType = void 0;\nfunction getFieldMetadataFromInputType(type) {\n    const fieldInfo = type.getFields();\n    const typeFields = Object.keys(fieldInfo).reduce((fieldsMap, fieldName) => {\n        const superField = fieldInfo[fieldName];\n        fieldsMap[fieldName] = {\n            type: superField.type,\n            astNode: superField.astNode,\n            description: superField.description,\n            defaultValue: superField.defaultValue,\n        };\n        return fieldsMap;\n    }, {});\n    return typeFields;\n}\nexports.getFieldMetadataFromInputType = getFieldMetadataFromInputType;\nfunction getFieldMetadataFromObjectType(type) {\n    const fieldInfo = type.getFields();\n    const typeFields = Object.keys(fieldInfo).reduce((fieldsMap, fieldName) => {\n        const superField = fieldInfo[fieldName];\n        fieldsMap[fieldName] = {\n            type: superField.type,\n            args: superField.args.reduce((argMap, { name, ...arg }) => {\n                argMap[name] = arg;\n                return argMap;\n            }, {}),\n            astNode: superField.astNode,\n            resolve: superField.resolve,\n            description: superField.description,\n            deprecationReason: superField.deprecationReason,\n            extensions: superField.extensions,\n        };\n        return fieldsMap;\n    }, {});\n    return typeFields;\n}\nexports.getFieldMetadataFromObjectType = getFieldMetadataFromObjectType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDirectiveNode = exports.getInputValueDefinitionNode = exports.getFieldDefinitionNode = exports.getInputObjectTypeDefinitionNode = exports.getObjectTypeDefinitionNode = void 0;\nconst graphql_1 = require(\"graphql\");\nconst errors_1 = require(\"../errors\");\nfunction getObjectTypeDefinitionNode(name, directiveMetadata) {\n    if (!directiveMetadata || !directiveMetadata.length) {\n        return;\n    }\n    return {\n        kind: \"ObjectTypeDefinition\",\n        name: {\n            kind: \"Name\",\n            // FIXME: use proper AST representation\n            value: name,\n        },\n        directives: directiveMetadata.map(getDirectiveNode),\n    };\n}\nexports.getObjectTypeDefinitionNode = getObjectTypeDefinitionNode;\nfunction getInputObjectTypeDefinitionNode(name, directiveMetadata) {\n    if (!directiveMetadata || !directiveMetadata.length) {\n        return;\n    }\n    return {\n        kind: \"InputObjectTypeDefinition\",\n        name: {\n            kind: \"Name\",\n            // FIXME: use proper AST representation\n            value: name,\n        },\n        directives: directiveMetadata.map(getDirectiveNode),\n    };\n}\nexports.getInputObjectTypeDefinitionNode = getInputObjectTypeDefinitionNode;\nfunction getFieldDefinitionNode(name, type, directiveMetadata) {\n    if (!directiveMetadata || !directiveMetadata.length) {\n        return;\n    }\n    return {\n        kind: \"FieldDefinition\",\n        type: {\n            kind: \"NamedType\",\n            name: {\n                kind: \"Name\",\n                value: type.toString(),\n            },\n        },\n        name: {\n            kind: \"Name\",\n            value: name,\n        },\n        directives: directiveMetadata.map(getDirectiveNode),\n    };\n}\nexports.getFieldDefinitionNode = getFieldDefinitionNode;\nfunction getInputValueDefinitionNode(name, type, directiveMetadata) {\n    if (!directiveMetadata || !directiveMetadata.length) {\n        return;\n    }\n    return {\n        kind: \"InputValueDefinition\",\n        type: {\n            kind: \"NamedType\",\n            name: {\n                kind: \"Name\",\n                value: type.toString(),\n            },\n        },\n        name: {\n            kind: \"Name\",\n            value: name,\n        },\n        directives: directiveMetadata.map(getDirectiveNode),\n    };\n}\nexports.getInputValueDefinitionNode = getInputValueDefinitionNode;\nfunction getDirectiveNode(directive) {\n    const { nameOrDefinition, args } = directive;\n    if (nameOrDefinition === \"\") {\n        throw new errors_1.InvalidDirectiveError(\"Please pass at-least one directive name or definition to the @Directive decorator\");\n    }\n    if (!nameOrDefinition.startsWith(\"@\")) {\n        return {\n            kind: \"Directive\",\n            name: {\n                kind: \"Name\",\n                value: nameOrDefinition,\n            },\n            arguments: Object.keys(args).map(argKey => ({\n                kind: \"Argument\",\n                name: {\n                    kind: \"Name\",\n                    value: argKey,\n                },\n                value: graphql_1.parseValue(args[argKey]),\n            })),\n        };\n    }\n    let parsed;\n    try {\n        parsed = graphql_1.parse(`type String ${nameOrDefinition}`);\n    }\n    catch (err) {\n        throw new errors_1.InvalidDirectiveError(`Error parsing directive definition \"${directive.nameOrDefinition}\"`);\n    }\n    const definitions = parsed.definitions;\n    const directives = definitions\n        .filter(it => it.directives && it.directives.length > 0)\n        .map(it => it.directives)\n        .reduce((acc, item) => [...acc, ...item]); // flatten the array\n    if (directives.length !== 1) {\n        throw new errors_1.InvalidDirectiveError(`Please pass only one directive name or definition at a time to the @Directive decorator \"${directive.nameOrDefinition}\"`);\n    }\n    return directives[0];\n}\nexports.getDirectiveNode = getDirectiveNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchemaGenerator = void 0;\nconst graphql_1 = require(\"graphql\");\nconst graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nconst types_1 = require(\"../helpers/types\");\nconst create_1 = require(\"../resolvers/create\");\nconst build_context_1 = require(\"./build-context\");\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"./utils\");\nconst graphql_version_1 = require(\"../utils/graphql-version\");\nconst definition_node_1 = require(\"./definition-node\");\nclass SchemaGenerator {\n    static async generateFromMetadata(options) {\n        const schema = this.generateFromMetadataSync(options);\n        if (!options.skipCheck) {\n            const { errors } = await graphql_1.graphql(schema, graphql_1.getIntrospectionQuery());\n            if (errors) {\n                throw new errors_1.GeneratingSchemaError(errors);\n            }\n        }\n        return schema;\n    }\n    static generateFromMetadataSync(options) {\n        this.checkForErrors(options);\n        build_context_1.BuildContext.create(options);\n        getMetadataStorage_1.getMetadataStorage().build(options);\n        this.buildTypesInfo(options.resolvers);\n        const orphanedTypes = options.orphanedTypes || (options.resolvers ? [] : undefined);\n        const prebuiltSchema = new graphql_1.GraphQLSchema({\n            query: this.buildRootQueryType(options.resolvers),\n            mutation: this.buildRootMutationType(options.resolvers),\n            subscription: this.buildRootSubscriptionType(options.resolvers),\n            directives: options.directives,\n        });\n        const finalSchema = new graphql_1.GraphQLSchema({\n            ...prebuiltSchema.toConfig(),\n            // run after first build to make `usedInterfaceTypes` working\n            types: this.buildOtherTypes(orphanedTypes),\n        });\n        build_context_1.BuildContext.reset();\n        this.usedInterfaceTypes = new Set();\n        return finalSchema;\n    }\n    static checkForErrors(options) {\n        graphql_version_1.ensureInstalledCorrectGraphQLPackage();\n        if (getMetadataStorage_1.getMetadataStorage().authorizedFields.length !== 0 && options.authChecker === undefined) {\n            throw new Error(\"You need to provide `authChecker` function for `@Authorized` decorator usage!\");\n        }\n    }\n    static getDefaultValue(typeInstance, typeOptions, fieldName, typeName) {\n        const defaultValueFromInitializer = typeInstance[fieldName];\n        if (typeOptions.defaultValue !== undefined &&\n            defaultValueFromInitializer !== undefined &&\n            typeOptions.defaultValue !== defaultValueFromInitializer) {\n            throw new errors_1.ConflictingDefaultValuesError(typeName, fieldName, typeOptions.defaultValue, defaultValueFromInitializer);\n        }\n        return typeOptions.defaultValue !== undefined\n            ? typeOptions.defaultValue\n            : defaultValueFromInitializer;\n    }\n    static buildTypesInfo(resolvers) {\n        this.unionTypesInfo = getMetadataStorage_1.getMetadataStorage().unions.map(unionMetadata => {\n            // use closure to capture values from this selected schema build\n            const unionObjectTypesInfo = [];\n            // called once after building all `objectTypesInfo`\n            const typesThunk = () => {\n                unionObjectTypesInfo.push(...unionMetadata\n                    .getClassTypes()\n                    .map(objectTypeCls => this.objectTypesInfo.find(type => type.target === objectTypeCls)));\n                return unionObjectTypesInfo.map(it => it.type);\n            };\n            return {\n                unionSymbol: unionMetadata.symbol,\n                type: new graphql_1.GraphQLUnionType({\n                    name: unionMetadata.name,\n                    description: unionMetadata.description,\n                    types: typesThunk,\n                    resolveType: unionMetadata.resolveType\n                        ? this.getResolveTypeFunction(unionMetadata.resolveType, \n                        // use closure captured `unionObjectTypesInfo`\n                        unionObjectTypesInfo)\n                        : instance => {\n                            const instanceTarget = unionMetadata\n                                .getClassTypes()\n                                .find(ObjectClassType => instance instanceof ObjectClassType);\n                            if (!instanceTarget) {\n                                throw new errors_1.UnionResolveTypeError(unionMetadata);\n                            }\n                            // use closure captured `unionObjectTypesInfo`\n                            const objectTypeInfo = unionObjectTypesInfo.find(type => type.target === instanceTarget);\n                            return objectTypeInfo.type;\n                        },\n                }),\n            };\n        });\n        this.enumTypesInfo = getMetadataStorage_1.getMetadataStorage().enums.map(enumMetadata => {\n            const enumMap = types_1.getEnumValuesMap(enumMetadata.enumObj);\n            return {\n                enumObj: enumMetadata.enumObj,\n                type: new graphql_1.GraphQLEnumType({\n                    name: enumMetadata.name,\n                    description: enumMetadata.description,\n                    values: Object.keys(enumMap).reduce((enumConfig, enumKey) => {\n                        const valueConfig = enumMetadata.valuesConfig[enumKey] || {};\n                        enumConfig[enumKey] = {\n                            value: enumMap[enumKey],\n                            description: valueConfig.description,\n                            deprecationReason: valueConfig.deprecationReason,\n                        };\n                        return enumConfig;\n                    }, {}),\n                }),\n            };\n        });\n        this.objectTypesInfo = getMetadataStorage_1.getMetadataStorage().objectTypes.map(objectType => {\n            const objectSuperClass = Object.getPrototypeOf(objectType.target);\n            const hasExtended = objectSuperClass.prototype !== undefined;\n            const getSuperClassType = () => {\n                const superClassTypeInfo = this.objectTypesInfo.find(type => type.target === objectSuperClass);\n                return superClassTypeInfo ? superClassTypeInfo.type : undefined;\n            };\n            const interfaceClasses = objectType.interfaceClasses || [];\n            return {\n                metadata: objectType,\n                target: objectType.target,\n                isAbstract: objectType.isAbstract || false,\n                type: new graphql_1.GraphQLObjectType({\n                    name: objectType.name,\n                    description: objectType.description,\n                    astNode: definition_node_1.getObjectTypeDefinitionNode(objectType.name, objectType.directives),\n                    extensions: objectType.extensions,\n                    interfaces: () => {\n                        let interfaces = interfaceClasses.map(interfaceClass => {\n                            const interfaceTypeInfo = this.interfaceTypesInfo.find(info => info.target === interfaceClass);\n                            if (!interfaceTypeInfo) {\n                                throw new Error(`Cannot find interface type metadata for class '${interfaceClass.name}' ` +\n                                    `provided in 'implements' option for '${objectType.target.name}' object type class. ` +\n                                    `Please make sure that class is annotated with an '@InterfaceType()' decorator.`);\n                            }\n                            return interfaceTypeInfo.type;\n                        });\n                        // copy interfaces from super class\n                        if (hasExtended) {\n                            const superClass = getSuperClassType();\n                            if (superClass) {\n                                const superInterfaces = superClass.getInterfaces();\n                                interfaces = Array.from(new Set(interfaces.concat(superInterfaces)));\n                            }\n                        }\n                        return interfaces;\n                    },\n                    fields: () => {\n                        const fieldsMetadata = [];\n                        // support for implicitly implementing interfaces\n                        // get fields from interfaces definitions\n                        if (objectType.interfaceClasses) {\n                            const implementedInterfaces = getMetadataStorage_1.getMetadataStorage().interfaceTypes.filter(it => objectType.interfaceClasses.includes(it.target));\n                            implementedInterfaces.forEach(it => {\n                                fieldsMetadata.push(...(it.fields || []));\n                            });\n                        }\n                        // push own fields at the end to overwrite the one inherited from interface\n                        fieldsMetadata.push(...objectType.fields);\n                        let fields = fieldsMetadata.reduce((fieldsMap, field) => {\n                            const fieldResolvers = getMetadataStorage_1.getMetadataStorage().fieldResolvers;\n                            const filteredFieldResolversMetadata = !resolvers\n                                ? fieldResolvers\n                                : fieldResolvers.filter(it => it.kind === \"internal\" || resolvers.includes(it.target));\n                            const fieldResolverMetadata = filteredFieldResolversMetadata.find(it => it.getObjectType() === field.target &&\n                                it.methodName === field.name &&\n                                (it.resolverClassMetadata === undefined ||\n                                    it.resolverClassMetadata.isAbstract === false));\n                            const type = this.getGraphQLOutputType(field.target, field.name, field.getType(), field.typeOptions);\n                            const isSimpleResolver = field.simple !== undefined\n                                ? field.simple === true\n                                : objectType.simpleResolvers !== undefined\n                                    ? objectType.simpleResolvers === true\n                                    : false;\n                            fieldsMap[field.schemaName] = {\n                                type,\n                                args: this.generateHandlerArgs(field.target, field.name, field.params),\n                                resolve: fieldResolverMetadata\n                                    ? create_1.createAdvancedFieldResolver(fieldResolverMetadata)\n                                    : isSimpleResolver\n                                        ? undefined\n                                        : create_1.createBasicFieldResolver(field),\n                                description: field.description,\n                                deprecationReason: field.deprecationReason,\n                                astNode: definition_node_1.getFieldDefinitionNode(field.name, type, field.directives),\n                                extensions: {\n                                    complexity: field.complexity,\n                                    ...field.extensions,\n                                },\n                            };\n                            return fieldsMap;\n                        }, {});\n                        // support for extending classes - get field info from prototype\n                        if (hasExtended) {\n                            const superClass = getSuperClassType();\n                            if (superClass) {\n                                const superClassFields = utils_1.getFieldMetadataFromObjectType(superClass);\n                                fields = Object.assign({}, superClassFields, fields);\n                            }\n                        }\n                        return fields;\n                    },\n                }),\n            };\n        });\n        this.interfaceTypesInfo = getMetadataStorage_1.getMetadataStorage().interfaceTypes.map(interfaceType => {\n            const interfaceSuperClass = Object.getPrototypeOf(interfaceType.target);\n            const hasExtended = interfaceSuperClass.prototype !== undefined;\n            const getSuperClassType = () => {\n                const superClassTypeInfo = this.interfaceTypesInfo.find(type => type.target === interfaceSuperClass);\n                return superClassTypeInfo ? superClassTypeInfo.type : undefined;\n            };\n            // fetch ahead the subset of object types that implements this interface\n            const implementingObjectTypesTargets = getMetadataStorage_1.getMetadataStorage()\n                .objectTypes.filter(objectType => objectType.interfaceClasses &&\n                objectType.interfaceClasses.includes(interfaceType.target))\n                .map(objectType => objectType.target);\n            const implementingObjectTypesInfo = this.objectTypesInfo.filter(objectTypesInfo => implementingObjectTypesTargets.includes(objectTypesInfo.target));\n            return {\n                metadata: interfaceType,\n                target: interfaceType.target,\n                isAbstract: interfaceType.isAbstract || false,\n                type: new graphql_1.GraphQLInterfaceType({\n                    name: interfaceType.name,\n                    description: interfaceType.description,\n                    interfaces: () => {\n                        let interfaces = (interfaceType.interfaceClasses || []).map(interfaceClass => this.interfaceTypesInfo.find(info => info.target === interfaceClass).type);\n                        // copy interfaces from super class\n                        if (hasExtended) {\n                            const superClass = getSuperClassType();\n                            if (superClass) {\n                                const superInterfaces = superClass.getInterfaces();\n                                interfaces = Array.from(new Set(interfaces.concat(superInterfaces)));\n                            }\n                        }\n                        return interfaces;\n                    },\n                    fields: () => {\n                        const fieldsMetadata = [];\n                        // support for implicitly implementing interfaces\n                        // get fields from interfaces definitions\n                        if (interfaceType.interfaceClasses) {\n                            const implementedInterfacesMetadata = getMetadataStorage_1.getMetadataStorage().interfaceTypes.filter(it => interfaceType.interfaceClasses.includes(it.target));\n                            implementedInterfacesMetadata.forEach(it => {\n                                fieldsMetadata.push(...(it.fields || []));\n                            });\n                        }\n                        // push own fields at the end to overwrite the one inherited from interface\n                        fieldsMetadata.push(...interfaceType.fields);\n                        let fields = fieldsMetadata.reduce((fieldsMap, field) => {\n                            const fieldResolverMetadata = getMetadataStorage_1.getMetadataStorage().fieldResolvers.find(resolver => resolver.getObjectType() === field.target &&\n                                resolver.methodName === field.name &&\n                                (resolver.resolverClassMetadata === undefined ||\n                                    resolver.resolverClassMetadata.isAbstract === false));\n                            fieldsMap[field.schemaName] = {\n                                type: this.getGraphQLOutputType(field.target, field.name, field.getType(), field.typeOptions),\n                                args: this.generateHandlerArgs(field.target, field.name, field.params),\n                                resolve: fieldResolverMetadata\n                                    ? create_1.createAdvancedFieldResolver(fieldResolverMetadata)\n                                    : create_1.createBasicFieldResolver(field),\n                                description: field.description,\n                                deprecationReason: field.deprecationReason,\n                                extensions: {\n                                    complexity: field.complexity,\n                                    ...field.extensions,\n                                },\n                            };\n                            return fieldsMap;\n                        }, {});\n                        // support for extending interface classes - get field info from prototype\n                        if (hasExtended) {\n                            const superClass = getSuperClassType();\n                            if (superClass) {\n                                const superClassFields = utils_1.getFieldMetadataFromObjectType(superClass);\n                                fields = Object.assign({}, superClassFields, fields);\n                            }\n                        }\n                        return fields;\n                    },\n                    resolveType: interfaceType.resolveType\n                        ? this.getResolveTypeFunction(interfaceType.resolveType, implementingObjectTypesInfo)\n                        : instance => {\n                            const typeTarget = implementingObjectTypesTargets.find(typeCls => instance instanceof typeCls);\n                            if (!typeTarget) {\n                                throw new errors_1.InterfaceResolveTypeError(interfaceType);\n                            }\n                            const objectTypeInfo = implementingObjectTypesInfo.find(type => type.target === typeTarget);\n                            return objectTypeInfo.type;\n                        },\n                }),\n            };\n        });\n        this.inputTypesInfo = getMetadataStorage_1.getMetadataStorage().inputTypes.map(inputType => {\n            const objectSuperClass = Object.getPrototypeOf(inputType.target);\n            const getSuperClassType = () => {\n                const superClassTypeInfo = this.inputTypesInfo.find(type => type.target === objectSuperClass);\n                return superClassTypeInfo ? superClassTypeInfo.type : undefined;\n            };\n            const inputInstance = new inputType.target();\n            return {\n                target: inputType.target,\n                isAbstract: inputType.isAbstract || false,\n                type: new graphql_1.GraphQLInputObjectType({\n                    name: inputType.name,\n                    description: inputType.description,\n                    extensions: inputType.extensions,\n                    fields: () => {\n                        let fields = inputType.fields.reduce((fieldsMap, field) => {\n                            field.typeOptions.defaultValue = this.getDefaultValue(inputInstance, field.typeOptions, field.name, inputType.name);\n                            const type = this.getGraphQLInputType(field.target, field.name, field.getType(), field.typeOptions);\n                            fieldsMap[field.schemaName] = {\n                                description: field.description,\n                                type,\n                                defaultValue: field.typeOptions.defaultValue,\n                                astNode: definition_node_1.getInputValueDefinitionNode(field.name, type, field.directives),\n                                extensions: field.extensions,\n                            };\n                            return fieldsMap;\n                        }, {});\n                        // support for extending classes - get field info from prototype\n                        if (objectSuperClass.prototype !== undefined) {\n                            const superClass = getSuperClassType();\n                            if (superClass) {\n                                const superClassFields = utils_1.getFieldMetadataFromInputType(superClass);\n                                fields = Object.assign({}, superClassFields, fields);\n                            }\n                        }\n                        return fields;\n                    },\n                    astNode: definition_node_1.getInputObjectTypeDefinitionNode(inputType.name, inputType.directives),\n                }),\n            };\n        });\n    }\n    static buildRootQueryType(resolvers) {\n        const queriesHandlers = this.filterHandlersByResolvers(getMetadataStorage_1.getMetadataStorage().queries, resolvers);\n        return new graphql_1.GraphQLObjectType({\n            name: \"Query\",\n            fields: this.generateHandlerFields(queriesHandlers),\n        });\n    }\n    static buildRootMutationType(resolvers) {\n        const mutationsHandlers = this.filterHandlersByResolvers(getMetadataStorage_1.getMetadataStorage().mutations, resolvers);\n        if (mutationsHandlers.length === 0) {\n            return;\n        }\n        return new graphql_1.GraphQLObjectType({\n            name: \"Mutation\",\n            fields: this.generateHandlerFields(mutationsHandlers),\n        });\n    }\n    static buildRootSubscriptionType(resolvers) {\n        const subscriptionsHandlers = this.filterHandlersByResolvers(getMetadataStorage_1.getMetadataStorage().subscriptions, resolvers);\n        if (subscriptionsHandlers.length === 0) {\n            return;\n        }\n        return new graphql_1.GraphQLObjectType({\n            name: \"Subscription\",\n            fields: this.generateSubscriptionsFields(subscriptionsHandlers),\n        });\n    }\n    static buildOtherTypes(orphanedTypes) {\n        const autoRegisteredObjectTypesInfo = this.objectTypesInfo.filter(typeInfo => { var _a; return (_a = typeInfo.metadata.interfaceClasses) === null || _a === void 0 ? void 0 : _a.some(interfaceClass => {\n            const implementedInterfaceInfo = this.interfaceTypesInfo.find(it => it.target === interfaceClass);\n            if (!implementedInterfaceInfo) {\n                return false;\n            }\n            if (implementedInterfaceInfo.metadata.autoRegisteringDisabled) {\n                return false;\n            }\n            if (!this.usedInterfaceTypes.has(interfaceClass)) {\n                return false;\n            }\n            return true;\n        }); });\n        return [\n            ...this.filterTypesInfoByIsAbstractAndOrphanedTypesAndExtractType(this.objectTypesInfo, orphanedTypes),\n            ...this.filterTypesInfoByIsAbstractAndOrphanedTypesAndExtractType(this.interfaceTypesInfo, orphanedTypes),\n            ...this.filterTypesInfoByIsAbstractAndOrphanedTypesAndExtractType(this.inputTypesInfo, orphanedTypes),\n            ...autoRegisteredObjectTypesInfo.map(typeInfo => typeInfo.type),\n        ];\n    }\n    static generateHandlerFields(handlers) {\n        return handlers.reduce((fields, handler) => {\n            // omit emitting abstract resolver fields\n            if (handler.resolverClassMetadata && handler.resolverClassMetadata.isAbstract) {\n                return fields;\n            }\n            const type = this.getGraphQLOutputType(handler.target, handler.methodName, handler.getReturnType(), handler.returnTypeOptions);\n            fields[handler.schemaName] = {\n                type,\n                args: this.generateHandlerArgs(handler.target, handler.methodName, handler.params),\n                resolve: create_1.createHandlerResolver(handler),\n                description: handler.description,\n                deprecationReason: handler.deprecationReason,\n                astNode: definition_node_1.getFieldDefinitionNode(handler.schemaName, type, handler.directives),\n                extensions: {\n                    complexity: handler.complexity,\n                    ...handler.extensions,\n                },\n            };\n            return fields;\n        }, {});\n    }\n    static generateSubscriptionsFields(subscriptionsHandlers) {\n        const { pubSub } = build_context_1.BuildContext;\n        const basicFields = this.generateHandlerFields(subscriptionsHandlers);\n        return subscriptionsHandlers.reduce((fields, handler) => {\n            // omit emitting abstract resolver fields\n            if (handler.resolverClassMetadata && handler.resolverClassMetadata.isAbstract) {\n                return fields;\n            }\n            let subscribeFn;\n            if (handler.subscribe) {\n                subscribeFn = handler.subscribe;\n            }\n            else {\n                let pubSubIterator;\n                if (typeof handler.topics === \"function\") {\n                    const getTopics = handler.topics;\n                    pubSubIterator = (payload, args, context, info) => {\n                        const resolverTopicData = { payload, args, context, info };\n                        const topics = getTopics(resolverTopicData);\n                        if (Array.isArray(topics) && topics.length === 0) {\n                            throw new errors_1.MissingSubscriptionTopicsError(handler.target, handler.methodName);\n                        }\n                        return pubSub.asyncIterator(topics);\n                    };\n                }\n                else {\n                    const topics = handler.topics;\n                    pubSubIterator = () => pubSub.asyncIterator(topics);\n                }\n                subscribeFn = handler.filter\n                    ? graphql_subscriptions_1.withFilter(pubSubIterator, (payload, args, context, info) => {\n                        const resolverFilterData = { payload, args, context, info };\n                        return handler.filter(resolverFilterData);\n                    })\n                    : pubSubIterator;\n            }\n            fields[handler.schemaName].subscribe = create_1.wrapResolverWithAuthChecker(subscribeFn, handler.roles);\n            return fields;\n        }, basicFields);\n    }\n    static generateHandlerArgs(target, propertyName, params) {\n        return params.reduce((args, param) => {\n            if (param.kind === \"arg\") {\n                args[param.name] = {\n                    description: param.description,\n                    type: this.getGraphQLInputType(target, propertyName, param.getType(), param.typeOptions, param.index, param.name),\n                    defaultValue: param.typeOptions.defaultValue,\n                };\n            }\n            else if (param.kind === \"args\") {\n                const argumentType = getMetadataStorage_1.getMetadataStorage().argumentTypes.find(it => it.target === param.getType());\n                if (!argumentType) {\n                    throw new Error(`The value used as a type of '@Args' for '${propertyName}' of '${target.name}' ` +\n                        `is not a class decorated with '@ArgsType' decorator!`);\n                }\n                let superClass = Object.getPrototypeOf(argumentType.target);\n                while (superClass.prototype !== undefined) {\n                    const superArgumentType = getMetadataStorage_1.getMetadataStorage().argumentTypes.find(it => it.target === superClass);\n                    if (superArgumentType) {\n                        this.mapArgFields(superArgumentType, args);\n                    }\n                    superClass = Object.getPrototypeOf(superClass);\n                }\n                this.mapArgFields(argumentType, args);\n            }\n            return args;\n        }, {});\n    }\n    static mapArgFields(argumentType, args = {}) {\n        const argumentInstance = new argumentType.target();\n        argumentType.fields.forEach(field => {\n            field.typeOptions.defaultValue = this.getDefaultValue(argumentInstance, field.typeOptions, field.name, argumentType.name);\n            args[field.schemaName] = {\n                description: field.description,\n                type: this.getGraphQLInputType(field.target, field.name, field.getType(), field.typeOptions),\n                defaultValue: field.typeOptions.defaultValue,\n            };\n        });\n    }\n    static getGraphQLOutputType(target, propertyName, type, typeOptions = {}) {\n        let gqlType;\n        gqlType = types_1.convertTypeIfScalar(type);\n        if (!gqlType) {\n            const objectType = this.objectTypesInfo.find(it => it.target === type);\n            if (objectType) {\n                gqlType = objectType.type;\n            }\n        }\n        if (!gqlType) {\n            const interfaceType = this.interfaceTypesInfo.find(it => it.target === type);\n            if (interfaceType) {\n                this.usedInterfaceTypes.add(interfaceType.target);\n                gqlType = interfaceType.type;\n            }\n        }\n        if (!gqlType) {\n            const enumType = this.enumTypesInfo.find(it => it.enumObj === type);\n            if (enumType) {\n                gqlType = enumType.type;\n            }\n        }\n        if (!gqlType) {\n            const unionType = this.unionTypesInfo.find(it => it.unionSymbol === type);\n            if (unionType) {\n                gqlType = unionType.type;\n            }\n        }\n        if (!gqlType) {\n            throw new errors_1.CannotDetermineGraphQLTypeError(\"output\", target.name, propertyName);\n        }\n        const { nullableByDefault } = build_context_1.BuildContext;\n        return types_1.wrapWithTypeOptions(target, propertyName, gqlType, typeOptions, nullableByDefault);\n    }\n    static getGraphQLInputType(target, propertyName, type, typeOptions = {}, parameterIndex, argName) {\n        let gqlType;\n        gqlType = types_1.convertTypeIfScalar(type);\n        if (!gqlType) {\n            const inputType = this.inputTypesInfo.find(it => it.target === type);\n            if (inputType) {\n                gqlType = inputType.type;\n            }\n        }\n        if (!gqlType) {\n            const enumType = this.enumTypesInfo.find(it => it.enumObj === type);\n            if (enumType) {\n                gqlType = enumType.type;\n            }\n        }\n        if (!gqlType) {\n            throw new errors_1.CannotDetermineGraphQLTypeError(\"input\", target.name, propertyName, parameterIndex, argName);\n        }\n        const { nullableByDefault } = build_context_1.BuildContext;\n        return types_1.wrapWithTypeOptions(target, propertyName, gqlType, typeOptions, nullableByDefault);\n    }\n    static getResolveTypeFunction(resolveType, possibleObjectTypesInfo) {\n        return async (...args) => {\n            var _a;\n            const resolvedType = await resolveType(...args);\n            if (!resolvedType || typeof resolvedType === \"string\") {\n                return resolvedType;\n            }\n            return (_a = possibleObjectTypesInfo.find(objectType => objectType.target === resolvedType)) === null || _a === void 0 ? void 0 : _a.type;\n        };\n    }\n    static filterHandlersByResolvers(handlers, resolvers) {\n        return resolvers ? handlers.filter(query => resolvers.includes(query.target)) : handlers;\n    }\n    static filterTypesInfoByIsAbstractAndOrphanedTypesAndExtractType(typesInfo, orphanedTypes) {\n        return typesInfo\n            .filter(it => !it.isAbstract && (!orphanedTypes || orphanedTypes.includes(it.target)))\n            .map(it => it.type);\n    }\n}\nexports.SchemaGenerator = SchemaGenerator;\nSchemaGenerator.objectTypesInfo = [];\nSchemaGenerator.inputTypesInfo = [];\nSchemaGenerator.interfaceTypesInfo = [];\nSchemaGenerator.enumTypesInfo = [];\nSchemaGenerator.unionTypesInfo = [];\nSchemaGenerator.usedInterfaceTypes = new Set();\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n", "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n", "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n", "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n", "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n", "exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n", "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n", "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadResolversFromGlob = exports.findFileNamesFromGlob = void 0;\nconst glob = require(\"glob\");\nfunction findFileNamesFromGlob(globString) {\n    return glob.sync(globString);\n}\nexports.findFileNamesFromGlob = findFileNamesFromGlob;\nfunction loadResolversFromGlob(globString) {\n    const filePaths = findFileNamesFromGlob(globString);\n    const modules = filePaths.map(fileName => require(fileName));\n}\nexports.loadResolversFromGlob = loadResolversFromGlob;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.outputFileSync = exports.outputFile = exports.mkdirRecursiveSync = exports.mkdirRecursive = exports.parsePath = exports.fsWriteFile = exports.fsMkdir = void 0;\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst util_1 = require(\"util\");\nexports.fsMkdir = util_1.promisify(fs.mkdir);\nexports.fsWriteFile = util_1.promisify(fs.writeFile);\nfunction parsePath(targetPath) {\n    const directories = [];\n    const parsedPath = path.parse(path.resolve(targetPath));\n    const splitPath = parsedPath.dir.split(path.sep);\n    if (parsedPath.root === \"/\") {\n        splitPath[0] = `/${splitPath[0]}`;\n    }\n    splitPath.reduce((previous, next) => {\n        const directory = path.join(previous, next);\n        directories.push(directory);\n        return path.join(directory);\n    });\n    return directories;\n}\nexports.parsePath = parsePath;\nasync function mkdirRecursive(filePath) {\n    const directories = parsePath(filePath);\n    for (const directory of directories) {\n        try {\n            await exports.fsMkdir(directory);\n        }\n        catch (err) {\n            if (err.code !== \"EEXIST\") {\n                throw err;\n            }\n        }\n    }\n}\nexports.mkdirRecursive = mkdirRecursive;\nfunction mkdirRecursiveSync(filePath) {\n    const directories = parsePath(filePath);\n    for (const directory of directories) {\n        if (!fs.existsSync(directory)) {\n            fs.mkdirSync(directory);\n        }\n    }\n}\nexports.mkdirRecursiveSync = mkdirRecursiveSync;\nasync function outputFile(filePath, fileContent) {\n    try {\n        await exports.fsWriteFile(filePath, fileContent);\n    }\n    catch (err) {\n        if (err.code !== \"ENOENT\") {\n            throw err;\n        }\n        await mkdirRecursive(filePath);\n        await exports.fsWriteFile(filePath, fileContent);\n    }\n}\nexports.outputFile = outputFile;\nfunction outputFileSync(filePath, fileContent) {\n    try {\n        fs.writeFileSync(filePath, fileContent);\n    }\n    catch (e) {\n        if (e.code !== \"ENOENT\") {\n            throw e;\n        }\n        mkdirRecursiveSync(filePath);\n        fs.writeFileSync(filePath, fileContent);\n    }\n}\nexports.outputFileSync = outputFileSync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitSchemaDefinitionFile = exports.emitSchemaDefinitionFileSync = exports.defaultPrintSchemaOptions = void 0;\nconst graphql_1 = require(\"graphql\");\nconst filesystem_1 = require(\"../helpers/filesystem\");\nexports.defaultPrintSchemaOptions = {\n    commentDescriptions: false,\n    sortedSchema: true,\n};\nconst generatedSchemaWarning = /* graphql */ `\\\n# -----------------------------------------------\n# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!\n# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!\n# -----------------------------------------------\n\n`;\nfunction emitSchemaDefinitionFileSync(schemaFilePath, schema, options = exports.defaultPrintSchemaOptions) {\n    const schemaFileContent = getSchemaFileContent(schema, options);\n    filesystem_1.outputFileSync(schemaFilePath, schemaFileContent);\n}\nexports.emitSchemaDefinitionFileSync = emitSchemaDefinitionFileSync;\nasync function emitSchemaDefinitionFile(schemaFilePath, schema, options = exports.defaultPrintSchemaOptions) {\n    const schemaFileContent = getSchemaFileContent(schema, options);\n    await filesystem_1.outputFile(schemaFilePath, schemaFileContent);\n}\nexports.emitSchemaDefinitionFile = emitSchemaDefinitionFile;\nfunction getSchemaFileContent(schema, options) {\n    const schemaToEmit = options.sortedSchema ? graphql_1.lexicographicSortSchema(schema) : schema;\n    return generatedSchemaWarning + graphql_1.printSchema(schemaToEmit, options);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildSchemaSync = exports.buildSchema = void 0;\nconst path = require(\"path\");\nconst schema_generator_1 = require(\"../schema/schema-generator\");\nconst loadResolversFromGlob_1 = require(\"../helpers/loadResolversFromGlob\");\nconst emitSchemaDefinitionFile_1 = require(\"./emitSchemaDefinitionFile\");\nasync function buildSchema(options) {\n    const resolvers = loadResolvers(options);\n    const schema = await schema_generator_1.SchemaGenerator.generateFromMetadata({ ...options, resolvers });\n    if (options.emitSchemaFile) {\n        const { schemaFileName, printSchemaOptions } = getEmitSchemaDefinitionFileOptions(options);\n        await emitSchemaDefinitionFile_1.emitSchemaDefinitionFile(schemaFileName, schema, printSchemaOptions);\n    }\n    return schema;\n}\nexports.buildSchema = buildSchema;\nfunction buildSchemaSync(options) {\n    const resolvers = loadResolvers(options);\n    const schema = schema_generator_1.SchemaGenerator.generateFromMetadataSync({ ...options, resolvers });\n    if (options.emitSchemaFile) {\n        const { schemaFileName, printSchemaOptions } = getEmitSchemaDefinitionFileOptions(options);\n        emitSchemaDefinitionFile_1.emitSchemaDefinitionFileSync(schemaFileName, schema, printSchemaOptions);\n    }\n    return schema;\n}\nexports.buildSchemaSync = buildSchemaSync;\nfunction loadResolvers(options) {\n    // TODO: remove that check as it's covered by `NonEmptyArray` type guard\n    if (options.resolvers.length === 0) {\n        throw new Error(\"Empty `resolvers` array property found in `buildSchema` options!\");\n    }\n    if (options.resolvers.some((resolver) => typeof resolver === \"string\")) {\n        options.resolvers.forEach(resolver => {\n            if (typeof resolver === \"string\") {\n                loadResolversFromGlob_1.loadResolversFromGlob(resolver);\n            }\n        });\n        return undefined;\n    }\n    return options.resolvers;\n}\nfunction getEmitSchemaDefinitionFileOptions(buildSchemaOptions) {\n    const defaultSchemaFilePath = path.resolve(process.cwd(), \"schema.gql\");\n    return {\n        schemaFileName: typeof buildSchemaOptions.emitSchemaFile === \"string\"\n            ? buildSchemaOptions.emitSchemaFile\n            : typeof buildSchemaOptions.emitSchemaFile === \"object\"\n                ? buildSchemaOptions.emitSchemaFile.path || defaultSchemaFilePath\n                : defaultSchemaFilePath,\n        printSchemaOptions: typeof buildSchemaOptions.emitSchemaFile === \"object\"\n            ? { ...emitSchemaDefinitionFile_1.defaultPrintSchemaOptions, ...buildSchemaOptions.emitSchemaFile }\n            : emitSchemaDefinitionFile_1.defaultPrintSchemaOptions,\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createResolversMap = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction createResolversMap(schema) {\n    const typeMap = schema.getTypeMap();\n    return Object.keys(typeMap)\n        .filter(typeName => !typeName.includes(\"__\"))\n        .reduce((resolversMap, typeName) => {\n        const type = typeMap[typeName];\n        if (type instanceof graphql_1.GraphQLObjectType) {\n            resolversMap[typeName] = {\n                ...(type.isTypeOf && {\n                    __isTypeOf: type.isTypeOf,\n                }),\n                ...generateFieldsResolvers(type.getFields()),\n            };\n        }\n        if (type instanceof graphql_1.GraphQLInterfaceType) {\n            resolversMap[typeName] = {\n                __resolveType: generateTypeResolver(type, schema),\n                ...generateFieldsResolvers(type.getFields()),\n            };\n        }\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            resolversMap[typeName] = type;\n        }\n        if (type instanceof graphql_1.GraphQLEnumType) {\n            const enumValues = type.getValues();\n            resolversMap[typeName] = enumValues.reduce((enumMap, { name, value }) => {\n                enumMap[name] = value;\n                return enumMap;\n            }, {});\n        }\n        if (type instanceof graphql_1.GraphQLUnionType) {\n            resolversMap[typeName] = {\n                __resolveType: generateTypeResolver(type, schema),\n            };\n        }\n        return resolversMap;\n    }, {});\n}\nexports.createResolversMap = createResolversMap;\nfunction generateTypeResolver(abstractType, schema) {\n    if (abstractType.resolveType) {\n        return async (...args) => {\n            const detectedType = await abstractType.resolveType(...args);\n            if (detectedType instanceof graphql_1.GraphQLObjectType) {\n                return detectedType.name;\n            }\n            return detectedType;\n        };\n    }\n    const possibleObjectTypes = schema.getPossibleTypes(abstractType);\n    return async (source, context, info) => {\n        for (const objectType of possibleObjectTypes) {\n            if (objectType.isTypeOf && (await objectType.isTypeOf(source, context, info))) {\n                return objectType.name;\n            }\n        }\n        return null;\n    };\n}\nfunction generateFieldsResolvers(fields) {\n    return Object.keys(fields).reduce((fieldsMap, fieldName) => {\n        const field = fields[fieldName];\n        if (field.subscribe) {\n            fieldsMap[fieldName] = {\n                subscribe: field.subscribe,\n                resolve: field.resolve,\n            };\n        }\n        else if (field.resolve) {\n            fieldsMap[fieldName] = field.resolve;\n        }\n        return fieldsMap;\n    }, {});\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildTypeDefsAndResolvers = void 0;\nconst graphql_1 = require(\"graphql\");\nconst buildSchema_1 = require(\"./buildSchema\");\nconst createResolversMap_1 = require(\"./createResolversMap\");\nasync function buildTypeDefsAndResolvers(options) {\n    const schema = await buildSchema_1.buildSchema(options);\n    const typeDefs = graphql_1.printSchema(schema);\n    const resolvers = createResolversMap_1.createResolversMap(schema);\n    return { typeDefs, resolvers };\n}\nexports.buildTypeDefsAndResolvers = buildTypeDefsAndResolvers;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultPrintSchemaOptions = exports.emitSchemaDefinitionFileSync = exports.emitSchemaDefinitionFile = exports.createResolversMap = exports.buildTypeDefsAndResolvers = exports.buildSchemaSync = exports.buildSchema = void 0;\nvar buildSchema_1 = require(\"./buildSchema\");\nObject.defineProperty(exports, \"buildSchema\", { enumerable: true, get: function () { return buildSchema_1.buildSchema; } });\nObject.defineProperty(exports, \"buildSchemaSync\", { enumerable: true, get: function () { return buildSchema_1.buildSchemaSync; } });\nvar buildTypeDefsAndResolvers_1 = require(\"./buildTypeDefsAndResolvers\");\nObject.defineProperty(exports, \"buildTypeDefsAndResolvers\", { enumerable: true, get: function () { return buildTypeDefsAndResolvers_1.buildTypeDefsAndResolvers; } });\nvar createResolversMap_1 = require(\"./createResolversMap\");\nObject.defineProperty(exports, \"createResolversMap\", { enumerable: true, get: function () { return createResolversMap_1.createResolversMap; } });\nvar emitSchemaDefinitionFile_1 = require(\"./emitSchemaDefinitionFile\");\nObject.defineProperty(exports, \"emitSchemaDefinitionFile\", { enumerable: true, get: function () { return emitSchemaDefinitionFile_1.emitSchemaDefinitionFile; } });\nObject.defineProperty(exports, \"emitSchemaDefinitionFileSync\", { enumerable: true, get: function () { return emitSchemaDefinitionFile_1.emitSchemaDefinitionFileSync; } });\nObject.defineProperty(exports, \"defaultPrintSchemaOptions\", { enumerable: true, get: function () { return emitSchemaDefinitionFile_1.defaultPrintSchemaOptions; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PubSubEngine = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./decorators\"), exports);\ntslib_1.__exportStar(require(\"./errors\"), exports);\ntslib_1.__exportStar(require(\"./interfaces\"), exports);\ntslib_1.__exportStar(require(\"./metadata\"), exports);\ntslib_1.__exportStar(require(\"./scalars\"), exports);\ntslib_1.__exportStar(require(\"./utils\"), exports);\nvar graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nObject.defineProperty(exports, \"PubSubEngine\", { enumerable: true, get: function () { return graphql_subscriptions_1.PubSubEngine; } });\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import \"reflect-metadata\";\n\nimport { createServer } from \"http\";\n\nimport express from \"express\";\nimport { execute, subscribe } from \"graphql\";\nimport { SubscriptionServer } from \"subscriptions-transport-ws\";\n\nimport { Prisma, PrismaClient } from \"@prisma/client\";\n\nimport { ApolloServer } from \"apollo-server-express\";\nimport {\n  resolvers,\n  Review,\n} from \"@generated/type-graphql\";\nimport * as tq from \"type-graphql\";\nimport {\n  Resolver,\n  Subscription,\n  Root,\n  PubSub,\n  Mutation,\n  Ctx,\n  Arg,\n  Publisher,\n  Int,\n} from \"type-graphql\";\nimport path from \"path\";\n\ntype Context = {\n  prisma: PrismaClient<\n    Prisma.PrismaClientOptions,\n    never,\n    Prisma.RejectOnNotFound | Prisma.RejectPerOperation | undefined\n  >;\n};\n\n\n@Resolver(Review)\nclass ReviewSubscriptionResolver {\n  @Subscription((returns) => Review, {\n    topics: \"Review\",\n  })\n  newReview(@Root() reviewPayload: Review): Review {\n    return {\n      ...reviewPayload,\n    };\n  }\n\n  @Mutation((returns) => Review)\n  async createReview(\n    @Arg('rating', type => Int) rating: number,\n    @Arg('description', type => String) description: string,\n    @Arg('projectName', type => String) projectName: string,\n\n\n    \n    @Ctx() { prisma }: Context,\n    @PubSub(\"Review\") publish: Publisher<Review>\n  ): Promise<boolean> {\n    try {\n      const newReview = await prisma.review.create({\n        data: {\n          rating: rating,\n          description: description,\n          Project: { connect: { name: projectName } },\n        },\n      });\n\n      await publish(newReview);\n      return true;\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  }\n}\n\n(async function () {\n  const app = express();\n\n  const schema = await tq.buildSchema({\n    resolvers: [...resolvers, ReviewSubscriptionResolver],\n    emitSchemaFile : path.resolve(__dirname, \"../prisma\", \"generated/type-graphql\", \"schema.gql\")\n  });\n\n  const httpServer = createServer(app);\n\n  const prisma = new PrismaClient();\n\n  const context = () => {\n    return {\n      prisma,\n    };\n  };\n\n  const server = new ApolloServer({\n    schema,\n    context,\n  });\n\n  SubscriptionServer.create(\n    { schema, execute, subscribe },\n    { server: httpServer, path: server.graphqlPath }\n  );\n\n  await server.start();\n  server.applyMiddleware({ app });\n\n  const PORT = 4000;\n  httpServer.listen(PORT, () =>\n    console.log(`Server is now running on http://localhost:${PORT}/graphql`)\n  );\n})();\n"],
  "mappings": "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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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",
  "names": []
}
